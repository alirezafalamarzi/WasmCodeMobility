// GENERATED BY ISLE. DO NOT EDIT!
//
// Generated automatically from the instruction-selection DSL code in:
// - src/prelude.isle
// - src/prelude_lower.isle
// - src/isa/pulley_shared/inst.isle
// - src/isa/pulley_shared/lower.isle
// - /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle
// - /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/clif_lower.isle

use super::*;  // Pulls in all external types.
use std::marker::PhantomData;

/// Context during lowering: an implementation of this trait
/// must be provided with all external constructors and extractors.
/// A mutable borrow is passed along through all lowering logic.
pub trait Context {
    fn unit(&mut self, ) -> Unit;
    fn value_type(&mut self, arg0: Value) -> Type;
    fn u32_nonnegative(&mut self, arg0: u32) -> Option<u32>;
    fn offset32(&mut self, arg0: Offset32) -> i32;
    fn u32_lteq(&mut self, arg0: u32, arg1: u32) -> Option<Unit>;
    fn u8_lteq(&mut self, arg0: u8, arg1: u8) -> Option<Unit>;
    fn u8_lt(&mut self, arg0: u8, arg1: u8) -> Option<Unit>;
    fn u8_as_i8(&mut self, arg0: u8) -> i8;
    fn u8_as_u32(&mut self, arg0: u8) -> u32;
    fn u8_as_u64(&mut self, arg0: u8) -> u64;
    fn u16_as_i16(&mut self, arg0: u16) -> i16;
    fn u16_as_u32(&mut self, arg0: u16) -> u32;
    fn u16_as_u64(&mut self, arg0: u16) -> u64;
    fn u64_as_u8(&mut self, arg0: u64) -> u8;
    fn u64_as_u16(&mut self, arg0: u64) -> u16;
    fn u64_as_i64(&mut self, arg0: u64) -> i64;
    fn u8_try_from_u64(&mut self, arg0: u64) -> Option<u8>;
    fn u8_try_from_i32(&mut self, arg0: i32) -> Option<u8>;
    fn u16_try_from_u64(&mut self, arg0: u64) -> Option<u16>;
    fn u32_try_from_u64(&mut self, arg0: u64) -> Option<u32>;
    fn u64_try_from_i64(&mut self, arg0: i64) -> Option<u64>;
    fn i8_try_from_u64(&mut self, arg0: u64) -> Option<i8>;
    fn i16_try_from_u64(&mut self, arg0: u64) -> Option<i16>;
    fn i32_try_from_u64(&mut self, arg0: u64) -> Option<i32>;
    fn u32_as_u64(&mut self, arg0: u32) -> u64;
    fn i32_as_i64(&mut self, arg0: i32) -> i64;
    fn i64_as_u64(&mut self, arg0: i64) -> u64;
    fn i64_neg(&mut self, arg0: i64) -> i64;
    fn i8_neg(&mut self, arg0: i8) -> i8;
    fn u128_as_u64(&mut self, arg0: u128) -> Option<u64>;
    fn u64_as_u32(&mut self, arg0: u64) -> Option<u32>;
    fn u32_as_u16(&mut self, arg0: u32) -> Option<u16>;
    fn i32_as_i8(&mut self, arg0: i32) -> Option<i8>;
    fn u64_as_i32(&mut self, arg0: u64) -> i32;
    fn u8_and(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_shl(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_shr(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u8_sub(&mut self, arg0: u8, arg1: u8) -> u8;
    fn u32_add(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_sub(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_and(&mut self, arg0: u32, arg1: u32) -> u32;
    fn u32_shl(&mut self, arg0: u32, arg1: u32) -> u32;
    fn s32_add_fallible(&mut self, arg0: i32, arg1: i32) -> Option<i32>;
    fn u64_add(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_sub(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_mul(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_sdiv(&mut self, arg0: u64, arg1: u64) -> Option<u64>;
    fn u64_udiv(&mut self, arg0: u64, arg1: u64) -> Option<u64>;
    fn u64_and(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_or(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_xor(&mut self, arg0: u64, arg1: u64) -> u64;
    fn u64_shl(&mut self, arg0: u64, arg1: u64) -> u64;
    fn imm64_shl(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn imm64_ushr(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn imm64_sshr(&mut self, arg0: Type, arg1: Imm64, arg2: Imm64) -> Imm64;
    fn u64_not(&mut self, arg0: u64) -> u64;
    fn u64_eq(&mut self, arg0: u64, arg1: u64) -> bool;
    fn u64_le(&mut self, arg0: u64, arg1: u64) -> bool;
    fn u64_lt(&mut self, arg0: u64, arg1: u64) -> bool;
    fn i64_shr(&mut self, arg0: i64, arg1: i64) -> i64;
    fn i64_ctz(&mut self, arg0: i64) -> i64;
    fn i64_sextend_u64(&mut self, arg0: Type, arg1: u64) -> i64;
    fn i64_sextend_imm64(&mut self, arg0: Type, arg1: Imm64) -> i64;
    fn u64_uextend_imm64(&mut self, arg0: Type, arg1: Imm64) -> u64;
    fn imm64_icmp(&mut self, arg0: Type, arg1: &IntCC, arg2: Imm64, arg3: Imm64) -> Imm64;
    fn u64_is_zero(&mut self, arg0: u64) -> bool;
    fn i64_is_zero(&mut self, arg0: i64) -> bool;
    fn u64_is_odd(&mut self, arg0: u64) -> bool;
    fn u128_replicated_u64(&mut self, arg0: u128) -> Option<u64>;
    fn u64_replicated_u32(&mut self, arg0: u64) -> Option<u64>;
    fn u32_replicated_u16(&mut self, arg0: u64) -> Option<u64>;
    fn u16_replicated_u8(&mut self, arg0: u64) -> Option<u8>;
    fn f16_min(&mut self, arg0: Ieee16, arg1: Ieee16) -> Option<Ieee16>;
    fn f16_max(&mut self, arg0: Ieee16, arg1: Ieee16) -> Option<Ieee16>;
    fn f16_neg(&mut self, arg0: Ieee16) -> Ieee16;
    fn f16_abs(&mut self, arg0: Ieee16) -> Ieee16;
    fn f16_copysign(&mut self, arg0: Ieee16, arg1: Ieee16) -> Ieee16;
    fn f32_add(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_sub(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_mul(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_div(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_sqrt(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_ceil(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_floor(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_trunc(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_nearest(&mut self, arg0: Ieee32) -> Option<Ieee32>;
    fn f32_min(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_max(&mut self, arg0: Ieee32, arg1: Ieee32) -> Option<Ieee32>;
    fn f32_neg(&mut self, arg0: Ieee32) -> Ieee32;
    fn f32_abs(&mut self, arg0: Ieee32) -> Ieee32;
    fn f32_copysign(&mut self, arg0: Ieee32, arg1: Ieee32) -> Ieee32;
    fn f64_add(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_sub(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_mul(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_div(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_sqrt(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_ceil(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_floor(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_trunc(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_nearest(&mut self, arg0: Ieee64) -> Option<Ieee64>;
    fn f64_min(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_max(&mut self, arg0: Ieee64, arg1: Ieee64) -> Option<Ieee64>;
    fn f64_neg(&mut self, arg0: Ieee64) -> Ieee64;
    fn f64_abs(&mut self, arg0: Ieee64) -> Ieee64;
    fn f64_copysign(&mut self, arg0: Ieee64, arg1: Ieee64) -> Ieee64;
    fn f128_min(&mut self, arg0: Ieee128, arg1: Ieee128) -> Option<Ieee128>;
    fn f128_max(&mut self, arg0: Ieee128, arg1: Ieee128) -> Option<Ieee128>;
    fn f128_neg(&mut self, arg0: Ieee128) -> Ieee128;
    fn f128_abs(&mut self, arg0: Ieee128) -> Ieee128;
    fn f128_copysign(&mut self, arg0: Ieee128, arg1: Ieee128) -> Ieee128;
    fn ty_umin(&mut self, arg0: Type) -> u64;
    fn ty_umax(&mut self, arg0: Type) -> u64;
    fn ty_smin(&mut self, arg0: Type) -> u64;
    fn ty_smax(&mut self, arg0: Type) -> u64;
    fn ty_bits(&mut self, arg0: Type) -> u8;
    fn ty_bits_u16(&mut self, arg0: Type) -> u16;
    fn ty_bits_u64(&mut self, arg0: Type) -> u64;
    fn ty_mask(&mut self, arg0: Type) -> u64;
    fn ty_lane_mask(&mut self, arg0: Type) -> u64;
    fn ty_lane_count(&mut self, arg0: Type) -> u64;
    fn ty_bytes(&mut self, arg0: Type) -> u16;
    fn lane_type(&mut self, arg0: Type) -> Type;
    fn ty_half_lanes(&mut self, arg0: Type) -> Option<Type>;
    fn ty_half_width(&mut self, arg0: Type) -> Option<Type>;
    fn ty_equal(&mut self, arg0: Type, arg1: Type) -> bool;
    fn mem_flags_trusted(&mut self, ) -> MemFlags;
    fn intcc_swap_args(&mut self, arg0: &IntCC) -> IntCC;
    fn intcc_complement(&mut self, arg0: &IntCC) -> IntCC;
    fn intcc_without_eq(&mut self, arg0: &IntCC) -> IntCC;
    fn floatcc_swap_args(&mut self, arg0: &FloatCC) -> FloatCC;
    fn floatcc_complement(&mut self, arg0: &FloatCC) -> FloatCC;
    fn floatcc_unordered(&mut self, arg0: &FloatCC) -> bool;
    fn fits_in_16(&mut self, arg0: Type) -> Option<Type>;
    fn fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn lane_fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn fits_in_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_32(&mut self, arg0: Type) -> Option<Type>;
    fn ty_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_scalar_64_extract(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_scalar_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_32_or_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_8_or_16(&mut self, arg0: Type) -> Option<Type>;
    fn ty_16_or_32(&mut self, arg0: Type) -> Option<Type>;
    fn int_fits_in_32(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int_ref_16_to_64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_scalar(&mut self, arg0: Type) -> Option<Type>;
    fn ty_scalar_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_float_or_vec(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vector_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vector_not_float(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64_ctor(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec128(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn_vec64(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn_vec128(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec64_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_vec128_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_addr64(&mut self, arg0: Type) -> Option<Type>;
    fn not_vec32x2(&mut self, arg0: Type) -> Option<Type>;
    fn not_i64x2(&mut self, arg0: Type) -> Option<()>;
    fn u8_from_uimm8(&mut self, arg0: Uimm8) -> u8;
    fn u64_from_bool(&mut self, arg0: bool) -> u64;
    fn u64_from_imm64(&mut self, arg0: Imm64) -> u64;
    fn nonzero_u64_from_imm64(&mut self, arg0: Imm64) -> Option<u64>;
    fn imm64_power_of_two(&mut self, arg0: Imm64) -> Option<u64>;
    fn imm64(&mut self, arg0: u64) -> Imm64;
    fn imm64_masked(&mut self, arg0: Type, arg1: u64) -> Imm64;
    fn u16_from_ieee16(&mut self, arg0: Ieee16) -> u16;
    fn u32_from_ieee32(&mut self, arg0: Ieee32) -> u32;
    fn u64_from_ieee64(&mut self, arg0: Ieee64) -> u64;
    fn multi_lane(&mut self, arg0: Type) -> Option<(u32, u32)>;
    fn dynamic_lane(&mut self, arg0: Type) -> Option<(u32, u32)>;
    fn ty_dyn64_int(&mut self, arg0: Type) -> Option<Type>;
    fn ty_dyn128_int(&mut self, arg0: Type) -> Option<Type>;
    fn offset32_to_i32(&mut self, arg0: Offset32) -> i32;
    fn i32_to_offset32(&mut self, arg0: i32) -> Offset32;
    fn intcc_unsigned(&mut self, arg0: &IntCC) -> IntCC;
    fn signed_cond_code(&mut self, arg0: &IntCC) -> Option<IntCC>;
    fn trap_code_division_by_zero(&mut self, ) -> TrapCode;
    fn trap_code_integer_overflow(&mut self, ) -> TrapCode;
    fn trap_code_bad_conversion_to_integer(&mut self, ) -> TrapCode;
    fn range(&mut self, arg0: usize, arg1: usize) -> Range;
    fn range_view(&mut self, arg0: Range) -> RangeView;
    fn value_reg(&mut self, arg0: Reg) -> ValueRegs;
    fn writable_value_reg(&mut self, arg0: WritableReg) -> WritableValueRegs;
    fn value_regs(&mut self, arg0: Reg, arg1: Reg) -> ValueRegs;
    fn writable_value_regs(&mut self, arg0: WritableReg, arg1: WritableReg) -> WritableValueRegs;
    fn value_regs_invalid(&mut self, ) -> ValueRegs;
    fn output_none(&mut self, ) -> InstOutput;
    fn output(&mut self, arg0: ValueRegs) -> InstOutput;
    fn output_pair(&mut self, arg0: ValueRegs, arg1: ValueRegs) -> InstOutput;
    fn output_builder_new(&mut self, ) -> InstOutputBuilder;
    fn output_builder_push(&mut self, arg0: &InstOutputBuilder, arg1: ValueRegs) -> Unit;
    fn output_builder_finish(&mut self, arg0: &InstOutputBuilder) -> InstOutput;
    fn temp_writable_reg(&mut self, arg0: Type) -> WritableReg;
    fn is_valid_reg(&mut self, arg0: Reg) -> bool;
    fn invalid_reg(&mut self, ) -> Reg;
    fn mark_value_used(&mut self, arg0: Value) -> Unit;
    fn put_in_reg(&mut self, arg0: Value) -> Reg;
    fn put_in_regs(&mut self, arg0: Value) -> ValueRegs;
    fn ensure_in_vreg(&mut self, arg0: Reg, arg1: Type) -> Reg;
    fn value_regs_get(&mut self, arg0: ValueRegs, arg1: usize) -> Reg;
    fn value_regs_len(&mut self, arg0: ValueRegs) -> usize;
    fn preg_to_reg(&mut self, arg0: PReg) -> Reg;
    fn add_range_fact(&mut self, arg0: Reg, arg1: u16, arg2: u64, arg3: u64) -> Reg;
    fn single_target(&mut self, arg0: &MachLabelSlice) -> Option<MachLabel>;
    fn two_targets(&mut self, arg0: &MachLabelSlice) -> Option<(MachLabel, MachLabel)>;
    fn jump_table_targets(&mut self, arg0: &MachLabelSlice) -> Option<(MachLabel, BoxVecMachLabel)>;
    fn jump_table_size(&mut self, arg0: &BoxVecMachLabel) -> u32;
    fn value_list_slice(&mut self, arg0: ValueList) -> ValueSlice;
    fn value_slice_empty(&mut self, arg0: ValueSlice) -> Option<()>;
    fn value_slice_unwrap(&mut self, arg0: ValueSlice) -> Option<(Value, ValueSlice)>;
    fn value_slice_len(&mut self, arg0: ValueSlice) -> usize;
    fn value_slice_get(&mut self, arg0: ValueSlice, arg1: usize) -> Value;
    fn writable_reg_to_reg(&mut self, arg0: WritableReg) -> Reg;
    fn inst_results(&mut self, arg0: Inst) -> ValueSlice;
    fn value_is_unused(&mut self, arg0: Value) -> bool;
    fn first_result(&mut self, arg0: Inst) -> Option<Value>;
    fn inst_data(&mut self, arg0: Inst) -> InstructionData;
    fn def_inst(&mut self, arg0: Value) -> Option<Inst>;
    fn i32_from_iconst(&mut self, arg0: Value) -> Option<i32>;
    fn i64_from_iconst(&mut self, arg0: Value) -> Option<i64>;
    fn zero_value(&mut self, arg0: Value) -> Option<Value>;
    fn is_sinkable_inst(&mut self, arg0: Value) -> Option<Inst>;
    fn maybe_uextend(&mut self, arg0: Value) -> Option<Value>;
    fn uimm8(&mut self, arg0: Imm64) -> Option<u8>;
    fn emit(&mut self, arg0: &MInst) -> Unit;
    fn sink_inst(&mut self, arg0: Inst) -> Unit;
    fn emit_u64_le_const(&mut self, arg0: u64) -> VCodeConstant;
    fn emit_u128_le_const(&mut self, arg0: u128) -> VCodeConstant;
    fn const_to_vconst(&mut self, arg0: Constant) -> VCodeConstant;
    fn tls_model(&mut self, arg0: Type) -> TlsModel;
    fn tls_model_is_elf_gd(&mut self, ) -> Option<Unit>;
    fn tls_model_is_macho(&mut self, ) -> Option<Unit>;
    fn tls_model_is_coff(&mut self, ) -> Option<Unit>;
    fn preserve_frame_pointers(&mut self, ) -> Option<Unit>;
    fn stack_switch_model(&mut self, ) -> Option<StackSwitchModel>;
    fn box_external_name(&mut self, arg0: ExternalName) -> BoxExternalName;
    fn func_ref_data(&mut self, arg0: FuncRef) -> (SigRef, ExternalName, RelocDistance);
    fn symbol_value_data(&mut self, arg0: GlobalValue) -> Option<(ExternalName, RelocDistance, i64)>;
    fn reloc_distance_near(&mut self, arg0: RelocDistance) -> Option<()>;
    fn vec_mask_from_immediate(&mut self, arg0: Immediate) -> Option<VecMask>;
    fn u128_from_immediate(&mut self, arg0: Immediate) -> Option<u128>;
    fn vconst_from_immediate(&mut self, arg0: Immediate) -> Option<VCodeConstant>;
    fn u128_from_constant(&mut self, arg0: Constant) -> Option<u128>;
    fn u64_from_constant(&mut self, arg0: Constant) -> Option<u64>;
    fn shuffle64_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8)>;
    fn shuffle32_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8, u8, u8)>;
    fn shuffle16_from_imm(&mut self, arg0: Immediate) -> Option<(u8, u8, u8, u8, u8, u8, u8, u8)>;
    fn only_writable_reg(&mut self, arg0: WritableValueRegs) -> Option<WritableReg>;
    fn writable_regs_get(&mut self, arg0: WritableValueRegs, arg1: usize) -> WritableReg;
    fn abi_num_args(&mut self, arg0: Sig) -> usize;
    fn abi_get_arg(&mut self, arg0: Sig, arg1: usize) -> ABIArg;
    fn abi_num_rets(&mut self, arg0: Sig) -> usize;
    fn abi_get_ret(&mut self, arg0: Sig, arg1: usize) -> ABIArg;
    fn abi_ret_arg(&mut self, arg0: Sig) -> Option<ABIArg>;
    fn abi_no_ret_arg(&mut self, arg0: Sig) -> Option<()>;
    fn abi_unwrap_ret_area_ptr(&mut self, ) -> Reg;
    fn abi_stackslot_addr(&mut self, arg0: WritableReg, arg1: StackSlot, arg2: Offset32) -> MInst;
    fn abi_dynamic_stackslot_addr(&mut self, arg0: WritableReg, arg1: DynamicStackSlot) -> MInst;
    fn abi_arg_only_slot(&mut self, arg0: &ABIArg) -> Option<ABIArgSlot>;
    fn abi_arg_implicit_pointer(&mut self, arg0: &ABIArg) -> Option<(ABIArgSlot, i64, Type)>;
    fn real_reg_to_reg(&mut self, arg0: RealReg) -> Reg;
    fn real_reg_to_writable_reg(&mut self, arg0: RealReg) -> WritableReg;
    fn gen_move(&mut self, arg0: Type, arg1: WritableReg, arg2: Reg) -> MInst;
    fn gen_return(&mut self, arg0: ValueSlice) -> Unit;
    fn gen_return_call(&mut self, arg0: SigRef, arg1: ExternalName, arg2: RelocDistance, arg3: ValueSlice) -> InstOutput;
    fn gen_return_call_indirect(&mut self, arg0: SigRef, arg1: Value, arg2: ValueSlice) -> InstOutput;
    fn safe_divisor_from_imm64(&mut self, arg0: Type, arg1: Imm64) -> Option<u64>;
    fn cond_invert(&mut self, arg0: &Cond) -> Cond;
    fn endianness(&mut self, arg0: MemFlags) -> Endianness;
    fn is_native_endianness(&mut self, arg0: &Endianness) -> bool;
    fn pointer_width(&mut self, ) -> PointerWidth;
    fn xreg_new(&mut self, arg0: Reg) -> XReg;
    fn writable_xreg_new(&mut self, arg0: WritableReg) -> WritableXReg;
    fn writable_xreg_to_xreg(&mut self, arg0: WritableXReg) -> XReg;
    fn writable_xreg_to_writable_reg(&mut self, arg0: WritableXReg) -> WritableReg;
    fn xreg_to_reg(&mut self, arg0: XReg) -> Reg;
    fn freg_new(&mut self, arg0: Reg) -> FReg;
    fn writable_freg_new(&mut self, arg0: WritableReg) -> WritableFReg;
    fn writable_freg_to_freg(&mut self, arg0: WritableFReg) -> FReg;
    fn writable_freg_to_writable_reg(&mut self, arg0: WritableFReg) -> WritableReg;
    fn freg_to_reg(&mut self, arg0: FReg) -> Reg;
    fn vreg_new(&mut self, arg0: Reg) -> VReg;
    fn writable_vreg_new(&mut self, arg0: WritableReg) -> WritableVReg;
    fn writable_vreg_to_vreg(&mut self, arg0: WritableVReg) -> VReg;
    fn writable_vreg_to_writable_reg(&mut self, arg0: WritableVReg) -> WritableReg;
    fn vreg_to_reg(&mut self, arg0: VReg) -> Reg;
    fn sp_reg(&mut self, ) -> XReg;
    fn gen_call(&mut self, arg0: SigRef, arg1: ExternalName, arg2: RelocDistance, arg3: ValueSlice) -> InstOutput;
    fn gen_call_indirect(&mut self, arg0: SigRef, arg1: Value, arg2: ValueSlice) -> InstOutput;
    fn u6_from_u8(&mut self, arg0: u8) -> Option<U6>;
    fn unpack_value_array_2(&mut self, arg0: &ValueArray2) -> (Value, Value);
    fn pack_value_array_2(&mut self, arg0: Value, arg1: Value) -> ValueArray2;
    fn unpack_value_array_3(&mut self, arg0: &ValueArray3) -> (Value, Value, Value);
    fn pack_value_array_3(&mut self, arg0: Value, arg1: Value, arg2: Value) -> ValueArray3;
    fn unpack_block_array_2(&mut self, arg0: &BlockArray2) -> (BlockCall, BlockCall);
    fn pack_block_array_2(&mut self, arg0: BlockCall, arg1: BlockCall) -> BlockArray2;
}

pub trait ContextIter {
    type Context;
    type Output;
    fn next(&mut self, ctx: &mut Self::Context) -> Option<Self::Output>;
    fn size_hint(&self) -> (usize, Option<usize>) { (0, None) }
}

pub trait IntoContextIter {
    type Context;
    type Output;
    type IntoIter: ContextIter<Context = Self::Context, Output = Self::Output>;
    fn into_context_iter(self) -> Self::IntoIter;
}

pub trait Length {
    fn len(&self) -> usize;
}

impl<T> Length for std::vec::Vec<T> {
    fn len(&self) -> usize {
        std::vec::Vec::len(self)
    }
}

pub struct ContextIterWrapper<I, C> {
    iter: I,
    _ctx: std::marker::PhantomData<C>,
}
impl<I: Default, C> Default for ContextIterWrapper<I, C> {
    fn default() -> Self {
        ContextIterWrapper {
            iter: I::default(),
            _ctx: std::marker::PhantomData
        }
    }
}
impl<I, C> std::ops::Deref for ContextIterWrapper<I, C> {
    type Target = I;
    fn deref(&self) -> &I {
        &self.iter
    }
}
impl<I, C> std::ops::DerefMut for ContextIterWrapper<I, C> {
    fn deref_mut(&mut self) -> &mut I {
        &mut self.iter
    }
}
impl<I: Iterator, C: Context> From<I> for ContextIterWrapper<I, C> {
    fn from(iter: I) -> Self {
        Self { iter, _ctx: std::marker::PhantomData }
    }
}
impl<I: Iterator, C: Context> ContextIter for ContextIterWrapper<I, C> {
    type Context = C;
    type Output = I::Item;
    fn next(&mut self, _ctx: &mut Self::Context) -> Option<Self::Output> {
        self.iter.next()
    }
    fn size_hint(&self) -> (usize, Option<usize>) {
        self.iter.size_hint()
    }
}
impl<I: IntoIterator, C: Context> IntoContextIter for ContextIterWrapper<I, C> {
    type Context = C;
    type Output = I::Item;
    type IntoIter = ContextIterWrapper<I::IntoIter, C>;
    fn into_context_iter(self) -> Self::IntoIter {
        ContextIterWrapper {
            iter: self.iter.into_iter(),
            _ctx: std::marker::PhantomData
        }
    }
}
impl<T, E: Extend<T>, C> Extend<T> for ContextIterWrapper<E, C> {
    fn extend<I: IntoIterator<Item = T>>(&mut self, iter: I) {
        self.iter.extend(iter);
    }
}
impl<L: Length, C> Length for ContextIterWrapper<L, C> {
    fn len(&self) -> usize {
        self.iter.len()
    }
}
           

/// Internal type MultiReg: defined at src/prelude_lower.isle line 20.
#[derive(Clone, Debug)]
pub enum MultiReg {
    Empty,
    One {
        a: Reg,
    },
    Two {
        a: Reg,
        b: Reg,
    },
    Three {
        a: Reg,
        b: Reg,
        c: Reg,
    },
    Four {
        a: Reg,
        b: Reg,
        c: Reg,
        d: Reg,
    },
}

/// Internal type SideEffectNoResult: defined at src/prelude_lower.isle line 400.
#[derive(Clone, Debug)]
pub enum SideEffectNoResult {
    Inst {
        inst: MInst,
    },
    Inst2 {
        inst1: MInst,
        inst2: MInst,
    },
    Inst3 {
        inst1: MInst,
        inst2: MInst,
        inst3: MInst,
    },
}

/// Internal type ProducesFlags: defined at src/prelude_lower.isle line 446.
#[derive(Clone, Debug)]
pub enum ProducesFlags {
    AlreadyExistingFlags,
    ProducesFlagsSideEffect {
        inst: MInst,
    },
    ProducesFlagsTwiceSideEffect {
        inst1: MInst,
        inst2: MInst,
    },
    ProducesFlagsReturnsReg {
        inst: MInst,
        result: Reg,
    },
    ProducesFlagsReturnsResultWithConsumer {
        inst: MInst,
        result: Reg,
    },
}

/// Internal type ConsumesAndProducesFlags: defined at src/prelude_lower.isle line 465.
#[derive(Clone, Debug)]
pub enum ConsumesAndProducesFlags {
    SideEffect {
        inst: MInst,
    },
    ReturnsReg {
        inst: MInst,
        result: Reg,
    },
}

/// Internal type ConsumesFlags: defined at src/prelude_lower.isle line 473.
#[derive(Clone, Debug)]
pub enum ConsumesFlags {
    ConsumesFlagsSideEffect {
        inst: MInst,
    },
    ConsumesFlagsSideEffect2 {
        inst1: MInst,
        inst2: MInst,
    },
    ConsumesFlagsReturnsResultWithProducer {
        inst: MInst,
        result: Reg,
    },
    ConsumesFlagsReturnsReg {
        inst: MInst,
        result: Reg,
    },
    ConsumesFlagsTwiceReturnsValueRegs {
        inst1: MInst,
        inst2: MInst,
        result: ValueRegs,
    },
    ConsumesFlagsFourTimesReturnsValueRegs {
        inst1: MInst,
        inst2: MInst,
        inst3: MInst,
        inst4: MInst,
        result: ValueRegs,
    },
}

/// Internal type MInst: defined at src/isa/pulley_shared/inst.isle line 10.
#[derive(Clone, Debug)]
pub enum MInst {
    Args {
        args: VecArgPair,
    },
    Rets {
        rets: VecRetPair,
    },
    BrTable {
        idx: XReg,
        default: MachLabel,
        targets: BoxVecMachLabel,
    },
    TrapIf {
        cond: Cond,
        code: TrapCode,
    },
    Nop,
    GetSpecial {
        dst: WritableXReg,
        reg: XReg,
    },
    LoadExtName {
        dst: WritableXReg,
        name: BoxExternalName,
        offset: i64,
    },
    Call {
        info: BoxCallInfo,
    },
    IndirectCall {
        info: BoxCallIndInfo,
    },
    ReturnCall {
        info: BoxReturnCallInfo,
    },
    ReturnIndirectCall {
        info: BoxReturnCallIndInfo,
    },
    IndirectCallHost {
        info: BoxCallIndirectHostInfo,
    },
    Jump {
        label: MachLabel,
    },
    BrIf {
        cond: Cond,
        taken: MachLabel,
        not_taken: MachLabel,
    },
    LoadAddr {
        dst: WritableXReg,
        mem: Amode,
    },
    XLoad {
        dst: WritableXReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
        ext: ExtKind,
    },
    FLoad {
        dst: WritableFReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
    },
    VLoad {
        dst: WritableVReg,
        mem: Amode,
        ty: Type,
        flags: MemFlags,
        ext: VExtKind,
    },
    XStore {
        mem: Amode,
        src: XReg,
        ty: Type,
        flags: MemFlags,
    },
    FStore {
        mem: Amode,
        src: FReg,
        ty: Type,
        flags: MemFlags,
    },
    VStore {
        mem: Amode,
        src: VReg,
        ty: Type,
        flags: MemFlags,
    },
    Raw {
        raw: RawInst,
    },
}

/// Internal type Cond: defined at src/isa/pulley_shared/inst.isle line 96.
#[derive(Clone, Debug)]
pub enum Cond {
    If32 {
        reg: XReg,
    },
    IfNot32 {
        reg: XReg,
    },
    IfXeq32 {
        src1: XReg,
        src2: XReg,
    },
    IfXneq32 {
        src1: XReg,
        src2: XReg,
    },
    IfXslt32 {
        src1: XReg,
        src2: XReg,
    },
    IfXslteq32 {
        src1: XReg,
        src2: XReg,
    },
    IfXult32 {
        src1: XReg,
        src2: XReg,
    },
    IfXulteq32 {
        src1: XReg,
        src2: XReg,
    },
    IfXeq32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXneq32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXslt32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXslteq32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXult32I32 {
        src1: XReg,
        src2: u32,
    },
    IfXulteq32I32 {
        src1: XReg,
        src2: u32,
    },
    IfXsgt32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXsgteq32I32 {
        src1: XReg,
        src2: i32,
    },
    IfXugt32I32 {
        src1: XReg,
        src2: u32,
    },
    IfXugteq32I32 {
        src1: XReg,
        src2: u32,
    },
    IfXeq64 {
        src1: XReg,
        src2: XReg,
    },
    IfXneq64 {
        src1: XReg,
        src2: XReg,
    },
    IfXslt64 {
        src1: XReg,
        src2: XReg,
    },
    IfXslteq64 {
        src1: XReg,
        src2: XReg,
    },
    IfXult64 {
        src1: XReg,
        src2: XReg,
    },
    IfXulteq64 {
        src1: XReg,
        src2: XReg,
    },
    IfXeq64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXneq64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXslt64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXslteq64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXult64I32 {
        src1: XReg,
        src2: u32,
    },
    IfXulteq64I32 {
        src1: XReg,
        src2: u32,
    },
    IfXsgt64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXsgteq64I32 {
        src1: XReg,
        src2: i32,
    },
    IfXugt64I32 {
        src1: XReg,
        src2: u32,
    },
    IfXugteq64I32 {
        src1: XReg,
        src2: u32,
    },
}

/// Internal type Amode: defined at src/isa/pulley_shared/inst.isle line 162.
#[derive(Clone, Debug)]
pub enum Amode {
    SpOffset {
        offset: i32,
    },
    RegOffset {
        base: XReg,
        offset: i32,
    },
    Stack {
        amode: StackAMode,
    },
}

/// Internal type ExtKind: defined at src/isa/pulley_shared/inst.isle line 170.
#[derive(Copy, Clone, PartialEq, Eq, Debug)]
pub enum ExtKind {
    None,
    Sign32,
    Sign64,
    Zero32,
    Zero64,
}

/// Internal type VExtKind: defined at src/isa/pulley_shared/inst.isle line 172.
#[derive(Copy, Clone, PartialEq, Eq, Debug)]
pub enum VExtKind {
    None,
    S8x8,
    U8x8,
    S16x4,
    U16x4,
    S32x2,
    U32x2,
}

/// Internal type SinkableLoad: defined at src/isa/pulley_shared/inst.isle line 195.
#[derive(Clone, Debug)]
pub enum SinkableLoad {
    Load {
        inst: Inst,
        ty: Type,
        addr: Value,
        offset: u8,
    },
}

/// Internal type SunkLoad: defined at src/isa/pulley_shared/inst.isle line 209.
#[derive(Clone, Debug)]
pub enum SunkLoad {
    Load {
        ty: Type,
        addr: Value,
        offset: u8,
    },
}

/// Internal type XLoadG32: defined at src/isa/pulley_shared/lower.isle line 1056.
#[derive(Copy, Clone, PartialEq, Eq, Debug)]
pub enum XLoadG32 {
    U8,
    S8,
    U16,
    S16,
    U32,
    U64,
}

/// Internal type ValueOffset: defined at src/isa/pulley_shared/lower.isle line 1080.
#[derive(Clone, Debug)]
pub enum ValueOffset {
    Both {
        value: Value,
        offset: i32,
    },
}

/// Internal type AmodeSpecial: defined at src/isa/pulley_shared/lower.isle line 1100.
#[derive(Clone, Debug)]
pub enum AmodeSpecial {
    G32 {
        base: Value,
        addr: Value,
        offset: u8,
    },
}

/// Internal type RawInst: defined at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 0.
#[derive(Clone, Debug)]
pub enum RawInst {
    Ret,
    XJump {
        reg: XReg,
    },
    Xmov {
        dst: WritableXReg,
        src: XReg,
    },
    Xzero {
        dst: WritableXReg,
    },
    Xone {
        dst: WritableXReg,
    },
    Xconst8 {
        dst: WritableXReg,
        imm: i8,
    },
    Xconst16 {
        dst: WritableXReg,
        imm: i16,
    },
    Xconst32 {
        dst: WritableXReg,
        imm: i32,
    },
    Xconst64 {
        dst: WritableXReg,
        imm: i64,
    },
    Xadd32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xadd32U8 {
        dst: WritableXReg,
        src1: XReg,
        src2: u8,
    },
    Xadd32U32 {
        dst: WritableXReg,
        src1: XReg,
        src2: u32,
    },
    Xadd64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xadd64U8 {
        dst: WritableXReg,
        src1: XReg,
        src2: u8,
    },
    Xadd64U32 {
        dst: WritableXReg,
        src1: XReg,
        src2: u32,
    },
    Xmadd32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        src3: XReg,
    },
    Xmadd64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        src3: XReg,
    },
    Xsub32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xsub32U8 {
        dst: WritableXReg,
        src1: XReg,
        src2: u8,
    },
    Xsub32U32 {
        dst: WritableXReg,
        src1: XReg,
        src2: u32,
    },
    Xsub64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xsub64U8 {
        dst: WritableXReg,
        src1: XReg,
        src2: u8,
    },
    Xsub64U32 {
        dst: WritableXReg,
        src1: XReg,
        src2: u32,
    },
    XMul32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmul32S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xmul32S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XMul64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmul64S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xmul64S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    Xctz32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xctz64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xclz32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xclz64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xpopcnt32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xpopcnt64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xrotl32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotl64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotr32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xrotr64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshl32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshl64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshr64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xshl32U6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshr32SU6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshr32UU6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshl64U6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshr64SU6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xshr64UU6 {
        dst: WritableXReg,
        src1: XReg,
        src2: U6,
    },
    Xneg32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xneg64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xeq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xneq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslt64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslteq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xult64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xulteq64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xeq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xneq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslt32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xslteq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xult32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xulteq32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XLoad8U32Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad8S32Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16LeU32Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16LeS32Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32LeOffset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad8U64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad8S64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16LeU64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16LeS64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32LeU64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32LeS64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad64LeOffset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XStore8Offset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore16LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore32LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore64LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XLoad8U32Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad8S32Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad16LeU32Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad16LeS32Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad32LeOffset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad8U64Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad8S64Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad16LeU64Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad16LeS64Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad32LeU64Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad32LeS64Offset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XLoad64LeOffset8 {
        dst: WritableXReg,
        ptr: XReg,
        offset: u8,
    },
    XStore8Offset8 {
        ptr: XReg,
        offset: u8,
        src: XReg,
    },
    XStore16LeOffset8 {
        ptr: XReg,
        offset: u8,
        src: XReg,
    },
    XStore32LeOffset8 {
        ptr: XReg,
        offset: u8,
        src: XReg,
    },
    XStore64LeOffset8 {
        ptr: XReg,
        offset: u8,
        src: XReg,
    },
    XLoad8U32G32 {
        dst: WritableXReg,
        base: XReg,
        addr: XReg,
        offset: u8,
    },
    XLoad8S32G32 {
        dst: WritableXReg,
        base: XReg,
        addr: XReg,
        offset: u8,
    },
    XLoad16LeU32G32 {
        dst: WritableXReg,
        base: XReg,
        addr: XReg,
        offset: u8,
    },
    XLoad16LeS32G32 {
        dst: WritableXReg,
        base: XReg,
        addr: XReg,
        offset: u8,
    },
    XLoad32LeG32 {
        dst: WritableXReg,
        base: XReg,
        addr: XReg,
        offset: u8,
    },
    XLoad64LeG32 {
        dst: WritableXReg,
        base: XReg,
        addr: XReg,
        offset: u8,
    },
    XStore8G32 {
        base: XReg,
        addr: XReg,
        offset: u8,
        src: XReg,
    },
    XStore16LeG32 {
        base: XReg,
        addr: XReg,
        offset: u8,
        src: XReg,
    },
    XStore32LeG32 {
        base: XReg,
        addr: XReg,
        offset: u8,
        src: XReg,
    },
    XStore64LeG32 {
        base: XReg,
        addr: XReg,
        offset: u8,
        src: XReg,
    },
    PushFrame,
    PopFrame,
    PushFrameSave {
        amt: u16,
        regs: UpperXRegSet,
    },
    PopFrameRestore {
        amt: u16,
        regs: UpperXRegSet,
    },
    StackAlloc32 {
        amt: u32,
    },
    StackFree32 {
        amt: u32,
    },
    Zext8 {
        dst: WritableXReg,
        src: XReg,
    },
    Zext16 {
        dst: WritableXReg,
        src: XReg,
    },
    Zext32 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext8 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext16 {
        dst: WritableXReg,
        src: XReg,
    },
    Sext32 {
        dst: WritableXReg,
        src: XReg,
    },
    XAbs32 {
        dst: WritableXReg,
        src: XReg,
    },
    XAbs64 {
        dst: WritableXReg,
        src: XReg,
    },
    XDiv32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XDiv64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XRem64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XBand32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xband32S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xband32S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBand64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xband64S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xband64S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBor32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbor32S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xbor32S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBor64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbor64S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xbor64S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBxor32 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbxor32S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xbxor32S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBxor64 {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbxor64S8 {
        dst: WritableXReg,
        src1: XReg,
        src2: i8,
    },
    Xbxor64S32 {
        dst: WritableXReg,
        src1: XReg,
        src2: i32,
    },
    XBnot32 {
        dst: WritableXReg,
        src: XReg,
    },
    XBnot64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xmin32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmin32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmax32U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmax32S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmin64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmin64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmax64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xmax64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XSelect32 {
        dst: WritableXReg,
        cond: XReg,
        if_nonzero: XReg,
        if_zero: XReg,
    },
    XSelect64 {
        dst: WritableXReg,
        cond: XReg,
        if_nonzero: XReg,
        if_zero: XReg,
    },
    XBc32BoundTrap {
        addr: XReg,
        bound: XReg,
        size: u8,
        code: TrapCode,
    },
    XBc32BoundNeTrap {
        addr: XReg,
        bound_ptr: XReg,
        bound_off: u8,
        size: u8,
        code: TrapCode,
    },
    XBc32StrictBoundTrap {
        addr: XReg,
        bound: XReg,
        code: TrapCode,
    },
    XBc32StrictBoundNeTrap {
        addr: XReg,
        bound_ptr: XReg,
        bound_off: u8,
        code: TrapCode,
    },
    Trap {
        code: TrapCode,
    },
    Nop,
    XmovFp {
        dst: WritableXReg,
    },
    XmovLr {
        dst: WritableXReg,
    },
    Bswap32 {
        dst: WritableXReg,
        src: XReg,
    },
    Bswap64 {
        dst: WritableXReg,
        src: XReg,
    },
    Xadd32UoverflowTrap {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        code: TrapCode,
    },
    Xadd64UoverflowTrap {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
        code: TrapCode,
    },
    XMulHi64S {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    XMulHi64U {
        dst: WritableXReg,
        src1: XReg,
        src2: XReg,
    },
    Xbmask32 {
        dst: WritableXReg,
        src: XReg,
    },
    Xbmask64 {
        dst: WritableXReg,
        src: XReg,
    },
    XLoad16BeU64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad16BeS64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32BeU64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad32BeS64Offset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XLoad64BeOffset32 {
        dst: WritableXReg,
        ptr: XReg,
        offset: i32,
    },
    XStore16BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore32BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    XStore64BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: XReg,
    },
    Fload32BeOffset32 {
        dst: WritableFReg,
        ptr: XReg,
        offset: i32,
    },
    Fload64BeOffset32 {
        dst: WritableFReg,
        ptr: XReg,
        offset: i32,
    },
    Fstore32BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: FReg,
    },
    Fstore64BeOffset32 {
        ptr: XReg,
        offset: i32,
        src: FReg,
    },
    Fload32LeOffset32 {
        dst: WritableFReg,
        ptr: XReg,
        offset: i32,
    },
    Fload64LeOffset32 {
        dst: WritableFReg,
        ptr: XReg,
        offset: i32,
    },
    Fstore32LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: FReg,
    },
    Fstore64LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: FReg,
    },
    VLoad128Offset32 {
        dst: WritableVReg,
        ptr: XReg,
        offset: i32,
    },
    Vstore128LeOffset32 {
        ptr: XReg,
        offset: i32,
        src: VReg,
    },
    Fmov {
        dst: WritableFReg,
        src: FReg,
    },
    Vmov {
        dst: WritableVReg,
        src: VReg,
    },
    BitcastIntFromFloat32 {
        dst: WritableXReg,
        src: FReg,
    },
    BitcastIntFromFloat64 {
        dst: WritableXReg,
        src: FReg,
    },
    BitcastFloatFromInt32 {
        dst: WritableFReg,
        src: XReg,
    },
    BitcastFloatFromInt64 {
        dst: WritableFReg,
        src: XReg,
    },
    FConst32 {
        dst: WritableFReg,
        bits: u32,
    },
    FConst64 {
        dst: WritableFReg,
        bits: u64,
    },
    Feq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Fneq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flt32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flteq32 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Feq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Fneq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flt64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    Flteq64 {
        dst: WritableXReg,
        src1: FReg,
        src2: FReg,
    },
    FSelect32 {
        dst: WritableFReg,
        cond: XReg,
        if_nonzero: FReg,
        if_zero: FReg,
    },
    FSelect64 {
        dst: WritableFReg,
        cond: XReg,
        if_nonzero: FReg,
        if_zero: FReg,
    },
    F32FromF64 {
        dst: WritableFReg,
        src: FReg,
    },
    F64FromF32 {
        dst: WritableFReg,
        src: FReg,
    },
    F32FromX32S {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX32U {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX64S {
        dst: WritableFReg,
        src: XReg,
    },
    F32FromX64U {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX32S {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX32U {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX64S {
        dst: WritableFReg,
        src: XReg,
    },
    F64FromX64U {
        dst: WritableFReg,
        src: XReg,
    },
    X32FromF32S {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32U {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64S {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64U {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32S {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32U {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64S {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64U {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF32USat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X32FromF64USat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF32USat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64SSat {
        dst: WritableXReg,
        src: FReg,
    },
    X64FromF64USat {
        dst: WritableXReg,
        src: FReg,
    },
    FCopySign32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    FCopySign64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fadd32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fsub32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Vsubf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Fmul32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Vmulf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Fdiv32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Vdivf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Fmaximum32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fminimum32 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Ftrunc32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vtrunc32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vtrunc64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Ffloor32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vfloor32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vfloor64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Fceil32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vceil32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vceil64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Fnearest32 {
        dst: WritableFReg,
        src: FReg,
    },
    Fsqrt32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vsqrt32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vsqrt64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Fneg32 {
        dst: WritableFReg,
        src: FReg,
    },
    Vnegf32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Fabs32 {
        dst: WritableFReg,
        src: FReg,
    },
    Fadd64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fsub64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fmul64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fdiv64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    VDivF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Fmaximum64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Fminimum64 {
        dst: WritableFReg,
        src1: FReg,
        src2: FReg,
    },
    Ftrunc64 {
        dst: WritableFReg,
        src: FReg,
    },
    Ffloor64 {
        dst: WritableFReg,
        src: FReg,
    },
    Fceil64 {
        dst: WritableFReg,
        src: FReg,
    },
    Fnearest64 {
        dst: WritableFReg,
        src: FReg,
    },
    Vnearest32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vnearest64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Fsqrt64 {
        dst: WritableFReg,
        src: FReg,
    },
    Fneg64 {
        dst: WritableFReg,
        src: FReg,
    },
    Fabs64 {
        dst: WritableFReg,
        src: FReg,
    },
    Vconst128 {
        dst: WritableVReg,
        imm: u128,
    },
    VAddI8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI8x16Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddU8x16Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddI16x8Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddU16x8Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddpairwiseI16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VAddpairwiseI32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VShlI8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShlI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShlI32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShlI64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI8x16S {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI64x2S {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI8x16U {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI16x8U {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI32x4U {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VShrI64x2U {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
    },
    VSplatX8 {
        dst: WritableVReg,
        src: XReg,
    },
    VSplatX16 {
        dst: WritableVReg,
        src: XReg,
    },
    VSplatX32 {
        dst: WritableVReg,
        src: XReg,
    },
    VSplatX64 {
        dst: WritableVReg,
        src: XReg,
    },
    VSplatF32 {
        dst: WritableVReg,
        src: FReg,
    },
    VSplatF64 {
        dst: WritableVReg,
        src: FReg,
    },
    VLoad8x8SOffset32 {
        dst: WritableVReg,
        ptr: XReg,
        offset: i32,
    },
    VLoad8x8UOffset32 {
        dst: WritableVReg,
        ptr: XReg,
        offset: i32,
    },
    VLoad16x4LeSOffset32 {
        dst: WritableVReg,
        ptr: XReg,
        offset: i32,
    },
    VLoad16x4LeUOffset32 {
        dst: WritableVReg,
        ptr: XReg,
        offset: i32,
    },
    VLoad32x2LeSOffset32 {
        dst: WritableVReg,
        ptr: XReg,
        offset: i32,
    },
    VLoad32x2LeUOffset32 {
        dst: WritableVReg,
        ptr: XReg,
        offset: i32,
    },
    VBand128 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VBor128 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VBxor128 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VBnot128 {
        dst: WritableVReg,
        src: VReg,
    },
    VBitselect128 {
        dst: WritableVReg,
        c: VReg,
        x: VReg,
        y: VReg,
    },
    Vbitmask8x16 {
        dst: WritableXReg,
        src: VReg,
    },
    Vbitmask16x8 {
        dst: WritableXReg,
        src: VReg,
    },
    Vbitmask32x4 {
        dst: WritableXReg,
        src: VReg,
    },
    Vbitmask64x2 {
        dst: WritableXReg,
        src: VReg,
    },
    Valltrue8x16 {
        dst: WritableXReg,
        src: VReg,
    },
    Valltrue16x8 {
        dst: WritableXReg,
        src: VReg,
    },
    Valltrue32x4 {
        dst: WritableXReg,
        src: VReg,
    },
    Valltrue64x2 {
        dst: WritableXReg,
        src: VReg,
    },
    Vanytrue8x16 {
        dst: WritableXReg,
        src: VReg,
    },
    Vanytrue16x8 {
        dst: WritableXReg,
        src: VReg,
    },
    Vanytrue32x4 {
        dst: WritableXReg,
        src: VReg,
    },
    Vanytrue64x2 {
        dst: WritableXReg,
        src: VReg,
    },
    VF32x4FromI32x4S {
        dst: WritableVReg,
        src: VReg,
    },
    VF32x4FromI32x4U {
        dst: WritableVReg,
        src: VReg,
    },
    VF64x2FromI64x2S {
        dst: WritableVReg,
        src: VReg,
    },
    VF64x2FromI64x2U {
        dst: WritableVReg,
        src: VReg,
    },
    VI32x4FromF32x4S {
        dst: WritableVReg,
        src: VReg,
    },
    VI32x4FromF32x4U {
        dst: WritableVReg,
        src: VReg,
    },
    VI64x2FromF64x2S {
        dst: WritableVReg,
        src: VReg,
    },
    VI64x2FromF64x2U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow8x16S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow8x16U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow16x8S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow16x8U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow32x4S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenLow32x4U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh8x16S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh8x16U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh16x8S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh16x8U {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh32x4S {
        dst: WritableVReg,
        src: VReg,
    },
    VWidenHigh32x4U {
        dst: WritableVReg,
        src: VReg,
    },
    Vnarrow16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow16x8U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow32x4U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow64x2S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vnarrow64x2U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vunarrow64x2U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VFpromoteLow {
        dst: WritableVReg,
        src: VReg,
    },
    VFdemote {
        dst: WritableVReg,
        src: VReg,
    },
    VSubI8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI8x16Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubU8x16Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubI16x8Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VSubU16x8Sat {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulI8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulI32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulI64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VMulF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VQmulrsI16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VPopcnt8x16 {
        dst: WritableVReg,
        src: VReg,
    },
    XExtractV8x16 {
        dst: WritableXReg,
        src: VReg,
        lane: u8,
    },
    XExtractV16x8 {
        dst: WritableXReg,
        src: VReg,
        lane: u8,
    },
    XExtractV32x4 {
        dst: WritableXReg,
        src: VReg,
        lane: u8,
    },
    XExtractV64x2 {
        dst: WritableXReg,
        src: VReg,
        lane: u8,
    },
    FExtractV32x4 {
        dst: WritableFReg,
        src: VReg,
        lane: u8,
    },
    FExtractV64x2 {
        dst: WritableFReg,
        src: VReg,
        lane: u8,
    },
    VInsertX8 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
        lane: u8,
    },
    VInsertX16 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
        lane: u8,
    },
    VInsertX32 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
        lane: u8,
    },
    VInsertX64 {
        dst: WritableVReg,
        src1: VReg,
        src2: XReg,
        lane: u8,
    },
    VInsertF32 {
        dst: WritableVReg,
        src1: VReg,
        src2: FReg,
        lane: u8,
    },
    VInsertF64 {
        dst: WritableVReg,
        src1: VReg,
        src2: FReg,
        lane: u8,
    },
    Veq8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneq8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslt8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslteq8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vult8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vulteq8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Veq16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneq16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslt16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslteq16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vult16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vulteq16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Veq32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneq32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslt32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslteq32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vult32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vulteq32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Veq64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneq64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslt64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vslteq64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vult64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vulteq64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vneg8x16 {
        dst: WritableVReg,
        src: VReg,
    },
    Vneg16x8 {
        dst: WritableVReg,
        src: VReg,
    },
    Vneg32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vneg64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    VnegF64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Vmin8x16S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin8x16U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin16x8U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax8x16S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax8x16U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax16x8S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax16x8U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmin32x4U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax32x4S {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmax32x4U {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vabs8x16 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabs16x8 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabs32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabs64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabsf32x4 {
        dst: WritableVReg,
        src: VReg,
    },
    Vabsf64x2 {
        dst: WritableVReg,
        src: VReg,
    },
    Vmaximumf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vmaximumf64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vminimumf32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vminimumf64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VShuffle {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
        mask: u128,
    },
    Vswizzlei8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vavground8x16 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vavground16x8 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VeqF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VneqF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VltF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VlteqF32x4 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VeqF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VneqF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VltF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    VlteqF64x2 {
        dst: WritableVReg,
        src1: VReg,
        src2: VReg,
    },
    Vfma32x4 {
        dst: WritableVReg,
        a: VReg,
        b: VReg,
        c: VReg,
    },
    Vfma64x2 {
        dst: WritableVReg,
        a: VReg,
        b: VReg,
        c: VReg,
    },
    Vselect {
        dst: WritableVReg,
        cond: XReg,
        if_nonzero: VReg,
        if_zero: VReg,
    },
    Xadd128 {
        dst_lo: WritableXReg,
        dst_hi: WritableXReg,
        lhs_lo: XReg,
        lhs_hi: XReg,
        rhs_lo: XReg,
        rhs_hi: XReg,
    },
    Xsub128 {
        dst_lo: WritableXReg,
        dst_hi: WritableXReg,
        lhs_lo: XReg,
        lhs_hi: XReg,
        rhs_lo: XReg,
        rhs_hi: XReg,
    },
    Xwidemul64S {
        dst_lo: WritableXReg,
        dst_hi: WritableXReg,
        lhs: XReg,
        rhs: XReg,
    },
    Xwidemul64U {
        dst_lo: WritableXReg,
        dst_hi: WritableXReg,
        lhs: XReg,
        rhs: XReg,
    },
}

// Generated as internal constructor for term ty_shift_mask.
pub fn constructor_ty_shift_mask<C: Context>(
    ctx: &mut C,
    arg0: Type,
) -> u64 {
    let v1 = C::lane_type(ctx, arg0);
    let v2 = C::ty_bits(ctx, v1);
    let v3 = C::u8_as_u64(ctx, v2);
    let v5 = C::u64_sub(ctx, v3, 0x1_u64);
    // Rule at src/prelude.isle line 473.
    return v5;
}

// Generated as internal constructor for term output_reg.
pub fn constructor_output_reg<C: Context>(
    ctx: &mut C,
    arg0: Reg,
) -> InstOutput {
    let v1 = C::value_reg(ctx, arg0);
    let v2 = C::output(ctx, v1);
    // Rule at src/prelude_lower.isle line 85.
    return v2;
}

// Generated as internal constructor for term output_value.
pub fn constructor_output_value<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> InstOutput {
    let v1 = C::put_in_regs(ctx, arg0);
    let v2 = C::output(ctx, v1);
    // Rule at src/prelude_lower.isle line 89.
    return v2;
}

// Generated as internal constructor for term temp_reg.
pub fn constructor_temp_reg<C: Context>(
    ctx: &mut C,
    arg0: Type,
) -> Reg {
    let v1 = C::temp_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/prelude_lower.isle line 109.
    return v2;
}

// Generated as internal constructor for term value_regs_range.
pub fn constructor_value_regs_range<C: Context>(
    ctx: &mut C,
    arg0: ValueRegs,
) -> Range {
    let v2 = C::value_regs_len(ctx, arg0);
    let v3 = C::range(ctx, 0x0_usize, v2);
    // Rule at src/prelude_lower.isle line 163.
    return v3;
}

// Generated as internal constructor for term lo_reg.
pub fn constructor_lo_reg<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Reg {
    let v1 = C::put_in_regs(ctx, arg0);
    let v3 = C::value_regs_get(ctx, v1, 0x0_usize);
    // Rule at src/prelude_lower.isle line 174.
    return v3;
}

// Generated as internal constructor for term multi_reg_to_pair_and_single.
pub fn constructor_multi_reg_to_pair_and_single<C: Context>(
    ctx: &mut C,
    arg0: &MultiReg,
) -> InstOutput {
    if let &MultiReg::Three {
        a: v1,
        b: v2,
        c: v3,
    } = arg0 {
        let v4 = C::value_regs(ctx, v1, v2);
        let v5 = C::value_reg(ctx, v3);
        let v6 = C::output_pair(ctx, v4, v5);
        // Rule at src/prelude_lower.isle line 185.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "multi_reg_to_pair_and_single", "src/prelude_lower.isle line 184")
}

// Generated as internal constructor for term multi_reg_to_pair.
pub fn constructor_multi_reg_to_pair<C: Context>(
    ctx: &mut C,
    arg0: &MultiReg,
) -> InstOutput {
    if let &MultiReg::Two {
        a: v1,
        b: v2,
    } = arg0 {
        let v3 = C::value_regs(ctx, v1, v2);
        let v4 = C::output(ctx, v3);
        // Rule at src/prelude_lower.isle line 190.
        return v4;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "multi_reg_to_pair", "src/prelude_lower.isle line 189")
}

// Generated as internal constructor for term multi_reg_to_single.
pub fn constructor_multi_reg_to_single<C: Context>(
    ctx: &mut C,
    arg0: &MultiReg,
) -> InstOutput {
    if let &MultiReg::One {
        a: v1,
    } = arg0 {
        let v2 = C::value_reg(ctx, v1);
        let v3 = C::output(ctx, v2);
        // Rule at src/prelude_lower.isle line 195.
        return v3;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "multi_reg_to_single", "src/prelude_lower.isle line 194")
}

// Generated as internal constructor for term emit_side_effect.
pub fn constructor_emit_side_effect<C: Context>(
    ctx: &mut C,
    arg0: &SideEffectNoResult,
) -> Unit {
    match arg0 {
        &SideEffectNoResult::Inst {
            inst: ref v1,
        } => {
            let v2 = C::emit(ctx, v1);
            // Rule at src/prelude_lower.isle line 412.
            return v2;
        }
        &SideEffectNoResult::Inst2 {
            inst1: ref v3,
            inst2: ref v4,
        } => {
            let v5 = C::emit(ctx, v3);
            let v6 = C::emit(ctx, v4);
            // Rule at src/prelude_lower.isle line 414.
            return v6;
        }
        &SideEffectNoResult::Inst3 {
            inst1: ref v7,
            inst2: ref v8,
            inst3: ref v9,
        } => {
            let v10 = C::emit(ctx, v7);
            let v11 = C::emit(ctx, v8);
            let v12 = C::emit(ctx, v9);
            // Rule at src/prelude_lower.isle line 417.
            return v12;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_side_effect", "src/prelude_lower.isle line 411")
}

// Generated as internal constructor for term side_effect.
pub fn constructor_side_effect<C: Context>(
    ctx: &mut C,
    arg0: &SideEffectNoResult,
) -> InstOutput {
    let v1 = constructor_emit_side_effect(ctx, arg0);
    let v2 = C::output_none(ctx);
    // Rule at src/prelude_lower.isle line 427.
    return v2;
}

// Generated as internal constructor for term side_effect_concat.
pub fn constructor_side_effect_concat<C: Context>(
    ctx: &mut C,
    arg0: &SideEffectNoResult,
    arg1: &SideEffectNoResult,
) -> SideEffectNoResult {
    match arg0 {
        &SideEffectNoResult::Inst {
            inst: ref v1,
        } => {
            match arg1 {
                &SideEffectNoResult::Inst {
                    inst: ref v3,
                } => {
                    let v4 = SideEffectNoResult::Inst2 {
                        inst1: v1.clone(),
                        inst2: v3.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 432.
                    return v4;
                }
                &SideEffectNoResult::Inst2 {
                    inst1: ref v5,
                    inst2: ref v6,
                } => {
                    let v7 = SideEffectNoResult::Inst3 {
                        inst1: v1.clone(),
                        inst2: v5.clone(),
                        inst3: v6.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 434.
                    return v7;
                }
                _ => {}
            }
        }
        &SideEffectNoResult::Inst2 {
            inst1: ref v8,
            inst2: ref v9,
        } => {
            if let &SideEffectNoResult::Inst {
                inst: ref v3,
            } = arg1 {
                let v10 = SideEffectNoResult::Inst3 {
                    inst1: v8.clone(),
                    inst2: v9.clone(),
                    inst3: v3.clone(),
                };
                // Rule at src/prelude_lower.isle line 436.
                return v10;
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "side_effect_concat", "src/prelude_lower.isle line 431")
}

// Generated as internal constructor for term produces_flags_concat.
pub fn constructor_produces_flags_concat<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ProducesFlags,
) -> ProducesFlags {
    if let &ProducesFlags::ProducesFlagsSideEffect {
        inst: ref v1,
    } = arg0 {
        if let &ProducesFlags::ProducesFlagsSideEffect {
            inst: ref v3,
        } = arg1 {
            let v4 = ProducesFlags::ProducesFlagsTwiceSideEffect {
                inst1: v1.clone(),
                inst2: v3.clone(),
            };
            // Rule at src/prelude_lower.isle line 461.
            return v4;
        }
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "produces_flags_concat", "src/prelude_lower.isle line 460")
}

// Generated as internal constructor for term produces_flags_get_reg.
pub fn constructor_produces_flags_get_reg<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
) -> Reg {
    match arg0 {
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            // Rule at src/prelude_lower.isle line 491.
            return v2;
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v3,
            result: v4,
        } => {
            // Rule at src/prelude_lower.isle line 492.
            return v4;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "produces_flags_get_reg", "src/prelude_lower.isle line 490")
}

// Generated as internal constructor for term produces_flags_ignore.
pub fn constructor_produces_flags_ignore<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
) -> ProducesFlags {
    match arg0 {
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            let v3 = ProducesFlags::ProducesFlagsSideEffect {
                inst: v1.clone(),
            };
            // Rule at src/prelude_lower.isle line 497.
            return v3;
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v4,
            result: v5,
        } => {
            let v6 = ProducesFlags::ProducesFlagsSideEffect {
                inst: v4.clone(),
            };
            // Rule at src/prelude_lower.isle line 499.
            return v6;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "produces_flags_ignore", "src/prelude_lower.isle line 496")
}

// Generated as internal constructor for term consumes_flags_concat.
pub fn constructor_consumes_flags_concat<C: Context>(
    ctx: &mut C,
    arg0: &ConsumesFlags,
    arg1: &ConsumesFlags,
) -> ConsumesFlags {
    match arg0 {
        &ConsumesFlags::ConsumesFlagsSideEffect {
            inst: ref v8,
        } => {
            if let &ConsumesFlags::ConsumesFlagsSideEffect {
                inst: ref v9,
            } = arg1 {
                let v10 = ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: v8.clone(),
                    inst2: v9.clone(),
                };
                // Rule at src/prelude_lower.isle line 512.
                return v10;
            }
        }
        &ConsumesFlags::ConsumesFlagsReturnsReg {
            inst: ref v1,
            result: v2,
        } => {
            if let &ConsumesFlags::ConsumesFlagsReturnsReg {
                inst: ref v4,
                result: v5,
            } = arg1 {
                let v6 = C::value_regs(ctx, v2, v5);
                let v7 = ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: v1.clone(),
                    inst2: v4.clone(),
                    result: v6,
                };
                // Rule at src/prelude_lower.isle line 506.
                return v7;
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "consumes_flags_concat", "src/prelude_lower.isle line 505")
}

// Generated as internal constructor for term with_flags.
pub fn constructor_with_flags<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> ValueRegs {
    match arg0 {
        &ProducesFlags::ProducesFlagsSideEffect {
            inst: ref v12,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsReturnsReg {
                    inst: ref v13,
                    result: v14,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v16 = C::emit(ctx, v13);
                    let v17 = C::value_reg(ctx, v14);
                    // Rule at src/prelude_lower.isle line 543.
                    return v17;
                }
                &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: ref v18,
                    inst2: ref v19,
                    result: v20,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v21 = C::emit(ctx, v18);
                    let v22 = C::emit(ctx, v19);
                    // Rule at src/prelude_lower.isle line 549.
                    return v20;
                }
                &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                    inst1: ref v23,
                    inst2: ref v24,
                    inst3: ref v25,
                    inst4: ref v26,
                    result: v27,
                } => {
                    let v15 = C::emit(ctx, v12);
                    let v28 = C::emit(ctx, v23);
                    let v29 = C::emit(ctx, v24);
                    let v30 = C::emit(ctx, v25);
                    let v31 = C::emit(ctx, v26);
                    // Rule at src/prelude_lower.isle line 561.
                    return v27;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsTwiceSideEffect {
            inst1: ref v32,
            inst2: ref v33,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsReturnsReg {
                    inst: ref v13,
                    result: v14,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v36 = C::emit(ctx, v13);
                    let v37 = C::value_reg(ctx, v14);
                    // Rule at src/prelude_lower.isle line 577.
                    return v37;
                }
                &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                    inst1: ref v18,
                    inst2: ref v19,
                    result: v20,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v38 = C::emit(ctx, v18);
                    let v39 = C::emit(ctx, v19);
                    // Rule at src/prelude_lower.isle line 584.
                    return v20;
                }
                &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                    inst1: ref v23,
                    inst2: ref v24,
                    inst3: ref v25,
                    inst4: ref v26,
                    result: v27,
                } => {
                    let v34 = C::emit(ctx, v32);
                    let v35 = C::emit(ctx, v33);
                    let v40 = C::emit(ctx, v23);
                    let v41 = C::emit(ctx, v24);
                    let v42 = C::emit(ctx, v25);
                    let v43 = C::emit(ctx, v26);
                    // Rule at src/prelude_lower.isle line 597.
                    return v27;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v1,
            result: v2,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect {
                    inst: ref v9,
                } => {
                    let v6 = C::emit(ctx, v1);
                    let v10 = C::emit(ctx, v9);
                    let v11 = C::value_reg(ctx, v2);
                    // Rule at src/prelude_lower.isle line 537.
                    return v11;
                }
                &ConsumesFlags::ConsumesFlagsReturnsResultWithProducer {
                    inst: ref v4,
                    result: v5,
                } => {
                    let v6 = C::emit(ctx, v1);
                    let v7 = C::emit(ctx, v4);
                    let v8 = C::value_regs(ctx, v2, v5);
                    // Rule at src/prelude_lower.isle line 529.
                    return v8;
                }
                _ => {}
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "with_flags", "src/prelude_lower.isle line 527")
}

// Generated as internal constructor for term with_flags_reg.
pub fn constructor_with_flags_reg<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> Reg {
    let v2 = constructor_with_flags(ctx, arg0, arg1);
    let v4 = C::value_regs_get(ctx, v2, 0x0_usize);
    // Rule at src/prelude_lower.isle line 615.
    return v4;
}

// Generated as internal constructor for term flags_to_producesflags.
pub fn constructor_flags_to_producesflags<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> ProducesFlags {
    let v1 = C::mark_value_used(ctx, arg0);
    // Rule at src/prelude_lower.isle line 622.
    return ProducesFlags::AlreadyExistingFlags;
}

// Generated as internal constructor for term with_flags_side_effect.
pub fn constructor_with_flags_side_effect<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesFlags,
) -> SideEffectNoResult {
    match arg0 {
        &ProducesFlags::AlreadyExistingFlags => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect {
                    inst: ref v2,
                } => {
                    let v3 = SideEffectNoResult::Inst {
                        inst: v2.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 633.
                    return v3;
                }
                &ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: ref v4,
                    inst2: ref v5,
                } => {
                    let v6 = SideEffectNoResult::Inst2 {
                        inst1: v4.clone(),
                        inst2: v5.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 638.
                    return v6;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsSideEffect {
            inst: ref v7,
        } => {
            match arg1 {
                &ConsumesFlags::ConsumesFlagsSideEffect {
                    inst: ref v2,
                } => {
                    let v8 = SideEffectNoResult::Inst2 {
                        inst1: v7.clone(),
                        inst2: v2.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 643.
                    return v8;
                }
                &ConsumesFlags::ConsumesFlagsSideEffect2 {
                    inst1: ref v4,
                    inst2: ref v5,
                } => {
                    let v9 = SideEffectNoResult::Inst3 {
                        inst1: v7.clone(),
                        inst2: v4.clone(),
                        inst3: v5.clone(),
                    };
                    // Rule at src/prelude_lower.isle line 648.
                    return v9;
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsTwiceSideEffect {
            inst1: ref v10,
            inst2: ref v11,
        } => {
            if let &ConsumesFlags::ConsumesFlagsSideEffect {
                inst: ref v2,
            } = arg1 {
                let v12 = SideEffectNoResult::Inst3 {
                    inst1: v10.clone(),
                    inst2: v11.clone(),
                    inst3: v2.clone(),
                };
                // Rule at src/prelude_lower.isle line 653.
                return v12;
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "with_flags_side_effect", "src/prelude_lower.isle line 631")
}

// Generated as internal constructor for term with_flags_chained.
pub fn constructor_with_flags_chained<C: Context>(
    ctx: &mut C,
    arg0: &ProducesFlags,
    arg1: &ConsumesAndProducesFlags,
    arg2: &ConsumesFlags,
) -> MultiReg {
    match arg0 {
        &ProducesFlags::ProducesFlagsSideEffect {
            inst: ref v1,
        } => {
            match arg1 {
                &ConsumesAndProducesFlags::SideEffect {
                    inst: ref v3,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect {
                            inst: ref v5,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v8 = C::emit(ctx, v5);
                            // Rule at src/prelude_lower.isle line 662.
                            return MultiReg::Empty;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            // Rule at src/prelude_lower.isle line 670.
                            return MultiReg::Empty;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v16 = C::emit(ctx, v14);
                            let v17 = MultiReg::One {
                                a: v15,
                            };
                            // Rule at src/prelude_lower.isle line 679.
                            return v17;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v27 = MultiReg::Two {
                                a: v24,
                                b: v26,
                            };
                            // Rule at src/prelude_lower.isle line 687.
                            return v27;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v7 = C::emit(ctx, v3);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v39 = MultiReg::Two {
                                a: v37,
                                b: v38,
                            };
                            // Rule at src/prelude_lower.isle line 696.
                            return v39;
                        }
                        _ => {}
                    }
                }
                &ConsumesAndProducesFlags::ReturnsReg {
                    inst: ref v47,
                    result: v48,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect {
                            inst: ref v5,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v8 = C::emit(ctx, v5);
                            let v50 = MultiReg::One {
                                a: v48,
                            };
                            // Rule at src/prelude_lower.isle line 756.
                            return v50;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v50 = MultiReg::One {
                                a: v48,
                            };
                            // Rule at src/prelude_lower.isle line 764.
                            return v50;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v16 = C::emit(ctx, v14);
                            let v51 = MultiReg::Two {
                                a: v48,
                                b: v15,
                            };
                            // Rule at src/prelude_lower.isle line 773.
                            return v51;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v52 = MultiReg::Three {
                                a: v48,
                                b: v24,
                                c: v26,
                            };
                            // Rule at src/prelude_lower.isle line 781.
                            return v52;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v6 = C::emit(ctx, v1);
                            let v49 = C::emit(ctx, v47);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v53 = MultiReg::Three {
                                a: v48,
                                b: v37,
                                c: v38,
                            };
                            // Rule at src/prelude_lower.isle line 790.
                            return v53;
                        }
                        _ => {}
                    }
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsReg {
            inst: ref v40,
            result: v41,
        } => {
            match arg1 {
                &ConsumesAndProducesFlags::SideEffect {
                    inst: ref v3,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect {
                            inst: ref v5,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v8 = C::emit(ctx, v5);
                            let v43 = MultiReg::One {
                                a: v41,
                            };
                            // Rule at src/prelude_lower.isle line 709.
                            return v43;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v43 = MultiReg::One {
                                a: v41,
                            };
                            // Rule at src/prelude_lower.isle line 717.
                            return v43;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v16 = C::emit(ctx, v14);
                            let v44 = MultiReg::Two {
                                a: v41,
                                b: v15,
                            };
                            // Rule at src/prelude_lower.isle line 726.
                            return v44;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v45 = MultiReg::Three {
                                a: v41,
                                b: v24,
                                c: v26,
                            };
                            // Rule at src/prelude_lower.isle line 734.
                            return v45;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v7 = C::emit(ctx, v3);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v46 = MultiReg::Three {
                                a: v41,
                                b: v37,
                                c: v38,
                            };
                            // Rule at src/prelude_lower.isle line 743.
                            return v46;
                        }
                        _ => {}
                    }
                }
                &ConsumesAndProducesFlags::ReturnsReg {
                    inst: ref v47,
                    result: v48,
                } => {
                    match arg2 {
                        &ConsumesFlags::ConsumesFlagsSideEffect {
                            inst: ref v5,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v8 = C::emit(ctx, v5);
                            let v54 = MultiReg::Two {
                                a: v41,
                                b: v48,
                            };
                            // Rule at src/prelude_lower.isle line 803.
                            return v54;
                        }
                        &ConsumesFlags::ConsumesFlagsSideEffect2 {
                            inst1: ref v10,
                            inst2: ref v11,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v12 = C::emit(ctx, v10);
                            let v13 = C::emit(ctx, v11);
                            let v54 = MultiReg::Two {
                                a: v41,
                                b: v48,
                            };
                            // Rule at src/prelude_lower.isle line 811.
                            return v54;
                        }
                        &ConsumesFlags::ConsumesFlagsReturnsReg {
                            inst: ref v14,
                            result: v15,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v16 = C::emit(ctx, v14);
                            let v55 = MultiReg::Three {
                                a: v41,
                                b: v48,
                                c: v15,
                            };
                            // Rule at src/prelude_lower.isle line 820.
                            return v55;
                        }
                        &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                            inst1: ref v18,
                            inst2: ref v19,
                            result: v20,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v21 = C::emit(ctx, v18);
                            let v22 = C::emit(ctx, v19);
                            let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                            let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                            let v56 = MultiReg::Four {
                                a: v41,
                                b: v48,
                                c: v24,
                                d: v26,
                            };
                            // Rule at src/prelude_lower.isle line 828.
                            return v56;
                        }
                        &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                            inst1: ref v28,
                            inst2: ref v29,
                            inst3: ref v30,
                            inst4: ref v31,
                            result: v32,
                        } => {
                            let v42 = C::emit(ctx, v40);
                            let v49 = C::emit(ctx, v47);
                            let v33 = C::emit(ctx, v28);
                            let v34 = C::emit(ctx, v29);
                            let v35 = C::emit(ctx, v30);
                            let v36 = C::emit(ctx, v31);
                            let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                            let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                            let v57 = MultiReg::Four {
                                a: v41,
                                b: v48,
                                c: v37,
                                d: v38,
                            };
                            // Rule at src/prelude_lower.isle line 837.
                            return v57;
                        }
                        _ => {}
                    }
                }
                _ => {}
            }
        }
        &ProducesFlags::ProducesFlagsReturnsResultWithConsumer {
            inst: ref v58,
            result: v59,
        } => {
            if let &ConsumesAndProducesFlags::ReturnsReg {
                inst: ref v47,
                result: v48,
            } = arg1 {
                match arg2 {
                    &ConsumesFlags::ConsumesFlagsSideEffect {
                        inst: ref v5,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v8 = C::emit(ctx, v5);
                        let v61 = MultiReg::Two {
                            a: v59,
                            b: v48,
                        };
                        // Rule at src/prelude_lower.isle line 849.
                        return v61;
                    }
                    &ConsumesFlags::ConsumesFlagsSideEffect2 {
                        inst1: ref v10,
                        inst2: ref v11,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v12 = C::emit(ctx, v10);
                        let v13 = C::emit(ctx, v11);
                        let v61 = MultiReg::Two {
                            a: v59,
                            b: v48,
                        };
                        // Rule at src/prelude_lower.isle line 857.
                        return v61;
                    }
                    &ConsumesFlags::ConsumesFlagsReturnsResultWithProducer {
                        inst: ref v63,
                        result: v64,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v65 = C::emit(ctx, v63);
                        let v66 = MultiReg::Three {
                            a: v59,
                            b: v48,
                            c: v64,
                        };
                        // Rule at src/prelude_lower.isle line 874.
                        return v66;
                    }
                    &ConsumesFlags::ConsumesFlagsReturnsReg {
                        inst: ref v14,
                        result: v15,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v16 = C::emit(ctx, v14);
                        let v62 = MultiReg::Three {
                            a: v59,
                            b: v48,
                            c: v15,
                        };
                        // Rule at src/prelude_lower.isle line 866.
                        return v62;
                    }
                    &ConsumesFlags::ConsumesFlagsTwiceReturnsValueRegs {
                        inst1: ref v18,
                        inst2: ref v19,
                        result: v20,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v21 = C::emit(ctx, v18);
                        let v22 = C::emit(ctx, v19);
                        let v24 = C::value_regs_get(ctx, v20, 0x0_usize);
                        let v26 = C::value_regs_get(ctx, v20, 0x1_usize);
                        let v67 = MultiReg::Four {
                            a: v59,
                            b: v48,
                            c: v24,
                            d: v26,
                        };
                        // Rule at src/prelude_lower.isle line 882.
                        return v67;
                    }
                    &ConsumesFlags::ConsumesFlagsFourTimesReturnsValueRegs {
                        inst1: ref v28,
                        inst2: ref v29,
                        inst3: ref v30,
                        inst4: ref v31,
                        result: v32,
                    } => {
                        let v60 = C::emit(ctx, v58);
                        let v49 = C::emit(ctx, v47);
                        let v33 = C::emit(ctx, v28);
                        let v34 = C::emit(ctx, v29);
                        let v35 = C::emit(ctx, v30);
                        let v36 = C::emit(ctx, v31);
                        let v37 = C::value_regs_get(ctx, v32, 0x0_usize);
                        let v38 = C::value_regs_get(ctx, v32, 0x1_usize);
                        let v68 = MultiReg::Four {
                            a: v59,
                            b: v48,
                            c: v37,
                            d: v38,
                        };
                        // Rule at src/prelude_lower.isle line 891.
                        return v68;
                    }
                    _ => {}
                }
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "with_flags_chained", "src/prelude_lower.isle line 659")
}

// Generated as internal constructor for term lower_return.
pub fn constructor_lower_return<C: Context>(
    ctx: &mut C,
    arg0: ValueSlice,
) -> InstOutput {
    let v1 = C::gen_return(ctx, arg0);
    let v2 = C::output_none(ctx);
    // Rule at src/prelude_lower.isle line 1094.
    return v2;
}

// Generated as internal constructor for term ty_to_operand_size.
pub fn constructor_ty_to_operand_size<C: Context>(
    ctx: &mut C,
    arg0: Type,
) -> OperandSize {
    match arg0 {
        I32 => {
            // Rule at src/isa/pulley_shared/inst.isle line 5.
            return OperandSize::Size32;
        }
        I64 => {
            // Rule at src/isa/pulley_shared/inst.isle line 6.
            return OperandSize::Size64;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "ty_to_operand_size", "src/isa/pulley_shared/inst.isle line 4")
}

// Generated as internal constructor for term raw_inst_to_inst.
pub fn constructor_raw_inst_to_inst<C: Context>(
    ctx: &mut C,
    arg0: &RawInst,
) -> MInst {
    let v1 = MInst::Raw {
        raw: arg0.clone(),
    };
    // Rule at src/isa/pulley_shared/inst.isle line 147.
    return v1;
}

// Generated as internal constructor for term sinkable_load.
pub fn constructor_sinkable_load<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<SinkableLoad> {
    let v2 = C::is_sinkable_inst(ctx, arg0);
    if let Some(v3) = v2 {
        let v4 = &C::inst_data(ctx, v3);
        if let &InstructionData::Load {
            opcode: ref v5,
            arg: v6,
            flags: v7,
            offset: v8,
        } = v4 {
            if let &Opcode::Load = v5 {
                let v10 = &C::endianness(ctx, v7);
                let v11 = C::is_native_endianness(ctx, v10);
                if v11 == true {
                    let v9 = C::offset32(ctx, v8);
                    let v12 = C::u8_try_from_i32(ctx, v9);
                    if let Some(v13) = v12 {
                        let v1 = C::value_type(ctx, arg0);
                        let v14 = SinkableLoad::Load {
                            inst: v3,
                            ty: v1,
                            addr: v6,
                            offset: v13,
                        };
                        let v15 = Some(v14);
                        // Rule at src/isa/pulley_shared/inst.isle line 197.
                        return v15;
                    }
                }
            }
        }
    }
    None
}

// Generated as internal constructor for term sink_load.
pub fn constructor_sink_load<C: Context>(
    ctx: &mut C,
    arg0: &SinkableLoad,
) -> SunkLoad {
    if let &SinkableLoad::Load {
        inst: v1,
        ty: v2,
        addr: v3,
        offset: v4,
    } = arg0 {
        let v5 = C::sink_inst(ctx, v1);
        let v6 = SunkLoad::Load {
            ty: v2,
            addr: v3,
            offset: v4,
        };
        // Rule at src/isa/pulley_shared/inst.isle line 211.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "sink_load", "src/isa/pulley_shared/inst.isle line 210")
}

// Generated as internal constructor for term put_in_xreg.
pub fn constructor_put_in_xreg<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::xreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 251.
    return v2;
}

// Generated as internal constructor for term output_xreg.
pub fn constructor_output_xreg<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> InstOutput {
    let v1 = C::xreg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 256.
    return v2;
}

// Generated as internal constructor for term writable_xreg_to_reg.
pub fn constructor_writable_xreg_to_reg<C: Context>(
    ctx: &mut C,
    arg0: WritableXReg,
) -> Reg {
    let v1 = C::writable_xreg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 271.
    return v2;
}

// Generated as internal constructor for term xreg_to_value_regs.
pub fn constructor_xreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> ValueRegs {
    let v1 = C::xreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 281.
    return v2;
}

// Generated as internal constructor for term writable_xreg_to_value_regs.
pub fn constructor_writable_xreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableXReg,
) -> ValueRegs {
    let v1 = constructor_writable_xreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 286.
    return v2;
}

// Generated as internal constructor for term temp_writable_xreg.
pub fn constructor_temp_writable_xreg<C: Context>(
    ctx: &mut C,
) -> WritableXReg {
    let v1 = C::temp_writable_reg(ctx, I64);
    let v2 = C::writable_xreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 291.
    return v2;
}

// Generated as internal constructor for term put_in_freg.
pub fn constructor_put_in_freg<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> FReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::freg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 311.
    return v2;
}

// Generated as internal constructor for term output_freg.
pub fn constructor_output_freg<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> InstOutput {
    let v1 = C::freg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 316.
    return v2;
}

// Generated as internal constructor for term writable_freg_to_reg.
pub fn constructor_writable_freg_to_reg<C: Context>(
    ctx: &mut C,
    arg0: WritableFReg,
) -> Reg {
    let v1 = C::writable_freg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 331.
    return v2;
}

// Generated as internal constructor for term freg_to_value_regs.
pub fn constructor_freg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> ValueRegs {
    let v1 = C::freg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 341.
    return v2;
}

// Generated as internal constructor for term writable_freg_to_value_regs.
pub fn constructor_writable_freg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableFReg,
) -> ValueRegs {
    let v1 = constructor_writable_freg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 346.
    return v2;
}

// Generated as internal constructor for term temp_writable_freg.
pub fn constructor_temp_writable_freg<C: Context>(
    ctx: &mut C,
) -> WritableFReg {
    let v1 = C::temp_writable_reg(ctx, F64);
    let v2 = C::writable_freg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 351.
    return v2;
}

// Generated as internal constructor for term put_in_vreg.
pub fn constructor_put_in_vreg<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> VReg {
    let v1 = C::put_in_reg(ctx, arg0);
    let v2 = C::vreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 371.
    return v2;
}

// Generated as internal constructor for term output_vreg.
pub fn constructor_output_vreg<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> InstOutput {
    let v1 = C::vreg_to_reg(ctx, arg0);
    let v2 = constructor_output_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 376.
    return v2;
}

// Generated as internal constructor for term writable_vreg_to_reg.
pub fn constructor_writable_vreg_to_reg<C: Context>(
    ctx: &mut C,
    arg0: WritableVReg,
) -> Reg {
    let v1 = C::writable_vreg_to_writable_reg(ctx, arg0);
    let v2 = C::writable_reg_to_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 391.
    return v2;
}

// Generated as internal constructor for term vreg_to_value_regs.
pub fn constructor_vreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> ValueRegs {
    let v1 = C::vreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 401.
    return v2;
}

// Generated as internal constructor for term writable_vreg_to_value_regs.
pub fn constructor_writable_vreg_to_value_regs<C: Context>(
    ctx: &mut C,
    arg0: WritableVReg,
) -> ValueRegs {
    let v1 = constructor_writable_vreg_to_reg(ctx, arg0);
    let v2 = C::value_reg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 406.
    return v2;
}

// Generated as internal constructor for term temp_writable_vreg.
pub fn constructor_temp_writable_vreg<C: Context>(
    ctx: &mut C,
) -> WritableVReg {
    let v1 = C::temp_writable_reg(ctx, I8X16);
    let v2 = C::writable_vreg_new(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 411.
    return v2;
}

// Generated as internal constructor for term imm.
pub fn constructor_imm<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: u64,
) -> Reg {
    let v1 = C::ty_int(ctx, arg0);
    if let Some(v2) = v1 {
        match arg1 {
            0x0_u64 => {
                let v4 = constructor_pulley_xzero(ctx);
                let v5 = C::xreg_to_reg(ctx, v4);
                // Rule at src/isa/pulley_shared/inst.isle line 418.
                return v5;
            }
            0x1_u64 => {
                let v6 = constructor_pulley_xone(ctx);
                let v7 = C::xreg_to_reg(ctx, v6);
                // Rule at src/isa/pulley_shared/inst.isle line 419.
                return v7;
            }
            _ => {}
        }
        let v8 = C::i8_try_from_u64(ctx, arg1);
        if let Some(v9) = v8 {
            let v10 = constructor_pulley_xconst8(ctx, v9);
            let v11 = C::xreg_to_reg(ctx, v10);
            // Rule at src/isa/pulley_shared/inst.isle line 422.
            return v11;
        }
        let v12 = C::i16_try_from_u64(ctx, arg1);
        if let Some(v13) = v12 {
            let v14 = constructor_pulley_xconst16(ctx, v13);
            let v15 = C::xreg_to_reg(ctx, v14);
            // Rule at src/isa/pulley_shared/inst.isle line 427.
            return v15;
        }
        let v16 = C::i32_try_from_u64(ctx, arg1);
        if let Some(v17) = v16 {
            let v18 = constructor_pulley_xconst32(ctx, v17);
            let v19 = C::xreg_to_reg(ctx, v18);
            // Rule at src/isa/pulley_shared/inst.isle line 432.
            return v19;
        }
    }
    match arg0 {
        I8 => {
            let v20 = C::u64_as_u8(ctx, arg1);
            let v21 = C::u8_as_i8(ctx, v20);
            let v22 = constructor_pulley_xconst8(ctx, v21);
            let v23 = C::xreg_to_reg(ctx, v22);
            // Rule at src/isa/pulley_shared/inst.isle line 437.
            return v23;
        }
        I16 => {
            let v24 = C::u64_as_u16(ctx, arg1);
            let v25 = C::u16_as_i16(ctx, v24);
            let v26 = constructor_pulley_xconst16(ctx, v25);
            let v27 = C::xreg_to_reg(ctx, v26);
            // Rule at src/isa/pulley_shared/inst.isle line 438.
            return v27;
        }
        I32 => {
            let v28 = C::u64_as_i32(ctx, arg1);
            let v29 = constructor_pulley_xconst32(ctx, v28);
            let v30 = C::xreg_to_reg(ctx, v29);
            // Rule at src/isa/pulley_shared/inst.isle line 439.
            return v30;
        }
        I64 => {
            let v31 = C::u64_as_i64(ctx, arg1);
            let v32 = constructor_pulley_xconst64(ctx, v31);
            let v33 = C::xreg_to_reg(ctx, v32);
            // Rule at src/isa/pulley_shared/inst.isle line 440.
            return v33;
        }
        F32 => {
            let v34 = C::u64_as_u32(ctx, arg1);
            if let Some(v35) = v34 {
                let v36 = constructor_pulley_fconst32(ctx, v35);
                let v37 = C::freg_to_reg(ctx, v36);
                // Rule at src/isa/pulley_shared/inst.isle line 443.
                return v37;
            }
        }
        F64 => {
            let v38 = constructor_pulley_fconst64(ctx, arg1);
            let v39 = C::freg_to_reg(ctx, v38);
            // Rule at src/isa/pulley_shared/inst.isle line 444.
            return v39;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "imm", "src/isa/pulley_shared/inst.isle line 416")
}

// Generated as internal constructor for term pulley_trap_if.
pub fn constructor_pulley_trap_if<C: Context>(
    ctx: &mut C,
    arg0: &Cond,
    arg1: &TrapCode,
) -> SideEffectNoResult {
    let v2 = MInst::TrapIf {
        cond: arg0.clone(),
        code: arg1.clone(),
    };
    let v3 = SideEffectNoResult::Inst {
        inst: v2,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 449.
    return v3;
}

// Generated as internal constructor for term pulley_get_special.
pub fn constructor_pulley_get_special<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = MInst::GetSpecial {
        dst: v1,
        reg: arg0,
    };
    let v3 = C::emit(ctx, &v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at src/isa/pulley_shared/inst.isle line 456.
    return v4;
}

// Generated as internal constructor for term pulley_jump.
pub fn constructor_pulley_jump<C: Context>(
    ctx: &mut C,
    arg0: MachLabel,
) -> SideEffectNoResult {
    let v1 = MInst::Jump {
        label: arg0,
    };
    let v2 = SideEffectNoResult::Inst {
        inst: v1,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 462.
    return v2;
}

// Generated as internal constructor for term pulley_br_if.
pub fn constructor_pulley_br_if<C: Context>(
    ctx: &mut C,
    arg0: &Cond,
    arg1: MachLabel,
    arg2: MachLabel,
) -> SideEffectNoResult {
    let v3 = MInst::BrIf {
        cond: arg0.clone(),
        taken: arg1,
        not_taken: arg2,
    };
    let v4 = SideEffectNoResult::Inst {
        inst: v3,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 466.
    return v4;
}

// Generated as internal constructor for term pulley_xload.
pub fn constructor_pulley_xload<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: Type,
    arg2: MemFlags,
    arg3: &ExtKind,
) -> XReg {
    let v4 = constructor_temp_writable_xreg(ctx);
    let v5 = MInst::XLoad {
        dst: v4,
        mem: arg0.clone(),
        ty: arg1,
        flags: arg2,
        ext: arg3.clone(),
    };
    let v6 = C::emit(ctx, &v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v4);
    // Rule at src/isa/pulley_shared/inst.isle line 470.
    return v7;
}

// Generated as internal constructor for term pulley_xstore.
pub fn constructor_pulley_xstore<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: XReg,
    arg2: Type,
    arg3: MemFlags,
) -> SideEffectNoResult {
    let v4 = MInst::XStore {
        mem: arg0.clone(),
        src: arg1,
        ty: arg2,
        flags: arg3,
    };
    let v5 = SideEffectNoResult::Inst {
        inst: v4,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 476.
    return v5;
}

// Generated as internal constructor for term pulley_fload.
pub fn constructor_pulley_fload<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: Type,
    arg2: MemFlags,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = MInst::FLoad {
        dst: v3,
        mem: arg0.clone(),
        ty: arg1,
        flags: arg2,
    };
    let v5 = C::emit(ctx, &v4);
    let v6 = C::writable_freg_to_freg(ctx, v3);
    // Rule at src/isa/pulley_shared/inst.isle line 480.
    return v6;
}

// Generated as internal constructor for term pulley_fstore.
pub fn constructor_pulley_fstore<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: FReg,
    arg2: Type,
    arg3: MemFlags,
) -> SideEffectNoResult {
    let v4 = MInst::FStore {
        mem: arg0.clone(),
        src: arg1,
        ty: arg2,
        flags: arg3,
    };
    let v5 = SideEffectNoResult::Inst {
        inst: v4,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 486.
    return v5;
}

// Generated as internal constructor for term pulley_vload.
pub fn constructor_pulley_vload<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: Type,
    arg2: MemFlags,
    arg3: &VExtKind,
) -> VReg {
    let v4 = constructor_temp_writable_vreg(ctx);
    let v5 = MInst::VLoad {
        dst: v4,
        mem: arg0.clone(),
        ty: arg1,
        flags: arg2,
        ext: arg3.clone(),
    };
    let v6 = C::emit(ctx, &v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v4);
    // Rule at src/isa/pulley_shared/inst.isle line 490.
    return v7;
}

// Generated as internal constructor for term pulley_vstore.
pub fn constructor_pulley_vstore<C: Context>(
    ctx: &mut C,
    arg0: &Amode,
    arg1: VReg,
    arg2: Type,
    arg3: MemFlags,
) -> SideEffectNoResult {
    let v4 = MInst::VStore {
        mem: arg0.clone(),
        src: arg1,
        ty: arg2,
        flags: arg3,
    };
    let v5 = SideEffectNoResult::Inst {
        inst: v4,
    };
    // Rule at src/isa/pulley_shared/inst.isle line 496.
    return v5;
}

// Generated as internal constructor for term gen_br_table.
pub fn constructor_gen_br_table<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: MachLabel,
    arg2: &BoxVecMachLabel,
) -> Unit {
    let v3 = MInst::BrTable {
        idx: arg0,
        default: arg1,
        targets: arg2.clone(),
    };
    let v4 = C::emit(ctx, &v3);
    // Rule at src/isa/pulley_shared/inst.isle line 500.
    return v4;
}

// Generated as internal constructor for term zext32.
pub fn constructor_zext32<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v3 = constructor_pulley_zext8(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 515.
            return v3;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_zext16(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 516.
            return v4;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 517.
            return v2;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 518.
            return v2;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "zext32", "src/isa/pulley_shared/inst.isle line 514")
}

// Generated as internal constructor for term sext32.
pub fn constructor_sext32<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v3 = constructor_pulley_sext8(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 522.
            return v3;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_sext16(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 523.
            return v4;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 524.
            return v2;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 525.
            return v2;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "sext32", "src/isa/pulley_shared/inst.isle line 521")
}

// Generated as internal constructor for term zext64.
pub fn constructor_zext64<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v3 = constructor_pulley_zext8(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 529.
            return v3;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_zext16(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 530.
            return v4;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v5 = constructor_pulley_zext32(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 531.
            return v5;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 532.
            return v2;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "zext64", "src/isa/pulley_shared/inst.isle line 528")
}

// Generated as internal constructor for term sext64.
pub fn constructor_sext64<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> XReg {
    let v1 = C::value_type(ctx, arg0);
    match v1 {
        I8 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v3 = constructor_pulley_sext8(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 536.
            return v3;
        }
        I16 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v4 = constructor_pulley_sext16(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 537.
            return v4;
        }
        I32 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            let v5 = constructor_pulley_sext32(ctx, v2);
            // Rule at src/isa/pulley_shared/inst.isle line 538.
            return v5;
        }
        I64 => {
            let v2 = constructor_put_in_xreg(ctx, arg0);
            // Rule at src/isa/pulley_shared/inst.isle line 539.
            return v2;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "sext64", "src/isa/pulley_shared/inst.isle line 535")
}

// Generated as internal constructor for term lower.
pub fn constructor_lower<C: Context>(
    ctx: &mut C,
    arg0: Inst,
) -> Option<InstOutput> {
    let v1 = &C::inst_data(ctx, arg0);
    match v1 {
        &InstructionData::Binary {
            opcode: ref v158,
            args: ref v159,
        } => {
            match v158 {
                &Opcode::Swizzle => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I8X16 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v1627 = constructor_pulley_vswizzlei8x16(ctx, v226, v227);
                            let v1628 = constructor_output_vreg(ctx, v1627);
                            let v1629 = Some(v1628);
                            // Rule at src/isa/pulley_shared/lower.isle line 1734.
                            return v1629;
                        }
                    }
                }
                &Opcode::Smin => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v704 = constructor_pulley_xmin64_s(ctx, v163, v164);
                                let v705 = constructor_output_xreg(ctx, v704);
                                let v706 = Some(v705);
                                // Rule at src/isa/pulley_shared/lower.isle line 671.
                                return v706;
                            }
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v707 = constructor_pulley_vmin8x16_s(ctx, v226, v227);
                                let v708 = constructor_output_vreg(ctx, v707);
                                let v709 = Some(v708);
                                // Rule at src/isa/pulley_shared/lower.isle line 672.
                                return v709;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v710 = constructor_pulley_vmin16x8_s(ctx, v226, v227);
                                let v711 = constructor_output_vreg(ctx, v710);
                                let v712 = Some(v711);
                                // Rule at src/isa/pulley_shared/lower.isle line 673.
                                return v712;
                            }
                            I32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v713 = constructor_pulley_vmin32x4_s(ctx, v226, v227);
                                let v714 = constructor_output_vreg(ctx, v713);
                                let v715 = Some(v714);
                                // Rule at src/isa/pulley_shared/lower.isle line 674.
                                return v715;
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v447 = constructor_sext32(ctx, v160.0);
                            let v448 = constructor_sext32(ctx, v160.1);
                            let v701 = constructor_pulley_xmin32_s(ctx, v447, v448);
                            let v702 = constructor_output_xreg(ctx, v701);
                            let v703 = Some(v702);
                            // Rule at src/isa/pulley_shared/lower.isle line 669.
                            return v703;
                        }
                    }
                }
                &Opcode::Umin => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v689 = constructor_pulley_xmin64_u(ctx, v163, v164);
                                let v690 = constructor_output_xreg(ctx, v689);
                                let v691 = Some(v690);
                                // Rule at src/isa/pulley_shared/lower.isle line 662.
                                return v691;
                            }
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v692 = constructor_pulley_vmin8x16_u(ctx, v226, v227);
                                let v693 = constructor_output_vreg(ctx, v692);
                                let v694 = Some(v693);
                                // Rule at src/isa/pulley_shared/lower.isle line 663.
                                return v694;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v695 = constructor_pulley_vmin16x8_u(ctx, v226, v227);
                                let v696 = constructor_output_vreg(ctx, v695);
                                let v697 = Some(v696);
                                // Rule at src/isa/pulley_shared/lower.isle line 664.
                                return v697;
                            }
                            I32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v698 = constructor_pulley_vmin32x4_u(ctx, v226, v227);
                                let v699 = constructor_output_vreg(ctx, v698);
                                let v700 = Some(v699);
                                // Rule at src/isa/pulley_shared/lower.isle line 665.
                                return v700;
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v421 = constructor_zext32(ctx, v160.0);
                            let v422 = constructor_zext32(ctx, v160.1);
                            let v686 = constructor_pulley_xmin32_u(ctx, v421, v422);
                            let v687 = constructor_output_xreg(ctx, v686);
                            let v688 = Some(v687);
                            // Rule at src/isa/pulley_shared/lower.isle line 660.
                            return v688;
                        }
                    }
                }
                &Opcode::Smax => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v734 = constructor_pulley_xmax64_s(ctx, v163, v164);
                                let v735 = constructor_output_xreg(ctx, v734);
                                let v736 = Some(v735);
                                // Rule at src/isa/pulley_shared/lower.isle line 689.
                                return v736;
                            }
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v737 = constructor_pulley_vmax8x16_s(ctx, v226, v227);
                                let v738 = constructor_output_vreg(ctx, v737);
                                let v739 = Some(v738);
                                // Rule at src/isa/pulley_shared/lower.isle line 690.
                                return v739;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v740 = constructor_pulley_vmax16x8_s(ctx, v226, v227);
                                let v741 = constructor_output_vreg(ctx, v740);
                                let v742 = Some(v741);
                                // Rule at src/isa/pulley_shared/lower.isle line 691.
                                return v742;
                            }
                            I32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v743 = constructor_pulley_vmax32x4_s(ctx, v226, v227);
                                let v744 = constructor_output_vreg(ctx, v743);
                                let v745 = Some(v744);
                                // Rule at src/isa/pulley_shared/lower.isle line 692.
                                return v745;
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v447 = constructor_sext32(ctx, v160.0);
                            let v448 = constructor_sext32(ctx, v160.1);
                            let v731 = constructor_pulley_xmax32_s(ctx, v447, v448);
                            let v732 = constructor_output_xreg(ctx, v731);
                            let v733 = Some(v732);
                            // Rule at src/isa/pulley_shared/lower.isle line 687.
                            return v733;
                        }
                    }
                }
                &Opcode::Umax => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v719 = constructor_pulley_xmax64_u(ctx, v163, v164);
                                let v720 = constructor_output_xreg(ctx, v719);
                                let v721 = Some(v720);
                                // Rule at src/isa/pulley_shared/lower.isle line 680.
                                return v721;
                            }
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v722 = constructor_pulley_vmax8x16_u(ctx, v226, v227);
                                let v723 = constructor_output_vreg(ctx, v722);
                                let v724 = Some(v723);
                                // Rule at src/isa/pulley_shared/lower.isle line 681.
                                return v724;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v725 = constructor_pulley_vmax16x8_u(ctx, v226, v227);
                                let v726 = constructor_output_vreg(ctx, v725);
                                let v727 = Some(v726);
                                // Rule at src/isa/pulley_shared/lower.isle line 682.
                                return v727;
                            }
                            I32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v728 = constructor_pulley_vmax32x4_u(ctx, v226, v227);
                                let v729 = constructor_output_vreg(ctx, v728);
                                let v730 = Some(v729);
                                // Rule at src/isa/pulley_shared/lower.isle line 683.
                                return v730;
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v421 = constructor_zext32(ctx, v160.0);
                            let v422 = constructor_zext32(ctx, v160.1);
                            let v716 = constructor_pulley_xmax32_u(ctx, v421, v422);
                            let v717 = constructor_output_xreg(ctx, v716);
                            let v718 = Some(v717);
                            // Rule at src/isa/pulley_shared/lower.isle line 678.
                            return v718;
                        }
                    }
                }
                &Opcode::AvgRound => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v494 = constructor_pulley_vavground8x16(ctx, v226, v227);
                                let v495 = constructor_output_vreg(ctx, v494);
                                let v496 = Some(v495);
                                // Rule at src/isa/pulley_shared/lower.isle line 491.
                                return v496;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v497 = constructor_pulley_vavground16x8(ctx, v226, v227);
                                let v498 = constructor_output_vreg(ctx, v497);
                                let v499 = Some(v498);
                                // Rule at src/isa/pulley_shared/lower.isle line 492.
                                return v499;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::UaddSat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v243 = constructor_pulley_vaddu8x16_sat(ctx, v226, v227);
                                let v244 = constructor_output_vreg(ctx, v243);
                                let v245 = Some(v244);
                                // Rule at src/isa/pulley_shared/lower.isle line 307.
                                return v245;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v249 = constructor_pulley_vaddu16x8_sat(ctx, v226, v227);
                                let v250 = constructor_output_vreg(ctx, v249);
                                let v251 = Some(v250);
                                // Rule at src/isa/pulley_shared/lower.isle line 309.
                                return v251;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::SaddSat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v240 = constructor_pulley_vaddi8x16_sat(ctx, v226, v227);
                                let v241 = constructor_output_vreg(ctx, v240);
                                let v242 = Some(v241);
                                // Rule at src/isa/pulley_shared/lower.isle line 306.
                                return v242;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v246 = constructor_pulley_vaddi16x8_sat(ctx, v226, v227);
                                let v247 = constructor_output_vreg(ctx, v246);
                                let v248 = Some(v247);
                                // Rule at src/isa/pulley_shared/lower.isle line 308.
                                return v248;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::UsubSat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v337 = constructor_pulley_vsubu8x16_sat(ctx, v226, v227);
                                let v338 = constructor_output_vreg(ctx, v337);
                                let v339 = Some(v338);
                                // Rule at src/isa/pulley_shared/lower.isle line 370.
                                return v339;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v343 = constructor_pulley_vsubu16x8_sat(ctx, v226, v227);
                                let v344 = constructor_output_vreg(ctx, v343);
                                let v345 = Some(v344);
                                // Rule at src/isa/pulley_shared/lower.isle line 372.
                                return v345;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::SsubSat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v334 = constructor_pulley_vsubi8x16_sat(ctx, v226, v227);
                                let v335 = constructor_output_vreg(ctx, v334);
                                let v336 = Some(v335);
                                // Rule at src/isa/pulley_shared/lower.isle line 369.
                                return v336;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v340 = constructor_pulley_vsubi16x8_sat(ctx, v226, v227);
                                let v341 = constructor_output_vreg(ctx, v340);
                                let v342 = Some(v341);
                                // Rule at src/isa/pulley_shared/lower.isle line 371.
                                return v342;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Iadd => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v160 = C::unpack_value_array_2(ctx, v159);
                        let v203 = constructor_u8_from_negated_iconst(ctx, v160.1);
                        if let Some(v204) = v203 {
                            let v132 = C::value_type(ctx, v131);
                            if v132 == I64 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v208 = constructor_pulley_xsub64_u8(ctx, v163, v204);
                                let v209 = constructor_output_xreg(ctx, v208);
                                let v210 = Some(v209);
                                // Rule at src/isa/pulley_shared/lower.isle line 268.
                                return v210;
                            }
                            let v154 = C::ty_int(ctx, v132);
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v205 = constructor_pulley_xsub32_u8(ctx, v163, v204);
                                    let v206 = constructor_output_xreg(ctx, v205);
                                    let v207 = Some(v206);
                                    // Rule at src/isa/pulley_shared/lower.isle line 265.
                                    return v207;
                                }
                            }
                        }
                        let v195 = constructor_u32_from_negated_iconst(ctx, v160.1);
                        if let Some(v196) = v195 {
                            let v132 = C::value_type(ctx, v131);
                            if v132 == I64 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v200 = constructor_pulley_xsub64_u32(ctx, v163, v196);
                                let v201 = constructor_output_xreg(ctx, v200);
                                let v202 = Some(v201);
                                // Rule at src/isa/pulley_shared/lower.isle line 262.
                                return v202;
                            }
                            let v154 = C::ty_int(ctx, v132);
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v197 = constructor_pulley_xsub32_u32(ctx, v163, v196);
                                    let v198 = constructor_output_xreg(ctx, v197);
                                    let v199 = Some(v198);
                                    // Rule at src/isa/pulley_shared/lower.isle line 259.
                                    return v199;
                                }
                            }
                        }
                        let v173 = C::def_inst(ctx, v160.1);
                        if let Some(v174) = v173 {
                            let v175 = &C::inst_data(ctx, v174);
                            match v175 {
                                &InstructionData::Binary {
                                    opcode: ref v266,
                                    args: ref v267,
                                } => {
                                    if let &Opcode::Imul = v266 {
                                        let v132 = C::value_type(ctx, v131);
                                        match v132 {
                                            I32 => {
                                                let v268 = C::unpack_value_array_2(ctx, v267);
                                                let v271 = constructor_put_in_xreg(ctx, v268.0);
                                                let v272 = constructor_put_in_xreg(ctx, v268.1);
                                                let v273 = constructor_put_in_xreg(ctx, v160.0);
                                                let v274 = constructor_pulley_xmadd32(ctx, v271, v272, v273);
                                                let v275 = constructor_output_xreg(ctx, v274);
                                                let v276 = Some(v275);
                                                // Rule at src/isa/pulley_shared/lower.isle line 314.
                                                return v276;
                                            }
                                            I64 => {
                                                let v268 = C::unpack_value_array_2(ctx, v267);
                                                let v271 = constructor_put_in_xreg(ctx, v268.0);
                                                let v272 = constructor_put_in_xreg(ctx, v268.1);
                                                let v273 = constructor_put_in_xreg(ctx, v160.0);
                                                let v280 = constructor_pulley_xmadd64(ctx, v271, v272, v273);
                                                let v281 = constructor_output_xreg(ctx, v280);
                                                let v282 = Some(v281);
                                                // Rule at src/isa/pulley_shared/lower.isle line 316.
                                                return v282;
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                                &InstructionData::UnaryImm {
                                    opcode: ref v176,
                                    imm: v177,
                                } => {
                                    if let &Opcode::Iconst = v176 {
                                        let v132 = C::value_type(ctx, v131);
                                        if v132 == I64 {
                                            let v184 = C::uimm8(ctx, v177);
                                            if let Some(v185) = v184 {
                                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                                let v192 = constructor_pulley_xadd64_u8(ctx, v163, v185);
                                                let v193 = constructor_output_xreg(ctx, v192);
                                                let v194 = Some(v193);
                                                // Rule at src/isa/pulley_shared/lower.isle line 254.
                                                return v194;
                                            }
                                            let v178 = C::u64_from_imm64(ctx, v177);
                                            let v179 = C::u64_as_u32(ctx, v178);
                                            if let Some(v180) = v179 {
                                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                                let v189 = constructor_pulley_xadd64_u32(ctx, v163, v180);
                                                let v190 = constructor_output_xreg(ctx, v189);
                                                let v191 = Some(v190);
                                                // Rule at src/isa/pulley_shared/lower.isle line 252.
                                                return v191;
                                            }
                                        }
                                        let v154 = C::ty_int(ctx, v132);
                                        if let Some(v155) = v154 {
                                            let v171 = C::fits_in_32(ctx, v155);
                                            if let Some(v172) = v171 {
                                                let v184 = C::uimm8(ctx, v177);
                                                if let Some(v185) = v184 {
                                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                                    let v186 = constructor_pulley_xadd32_u8(ctx, v163, v185);
                                                    let v187 = constructor_output_xreg(ctx, v186);
                                                    let v188 = Some(v187);
                                                    // Rule at src/isa/pulley_shared/lower.isle line 250.
                                                    return v188;
                                                }
                                                let v178 = C::u64_from_imm64(ctx, v177);
                                                let v179 = C::u64_as_u32(ctx, v178);
                                                if let Some(v180) = v179 {
                                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                                    let v181 = constructor_pulley_xadd32_u32(ctx, v163, v180);
                                                    let v182 = constructor_output_xreg(ctx, v181);
                                                    let v183 = Some(v182);
                                                    // Rule at src/isa/pulley_shared/lower.isle line 248.
                                                    return v183;
                                                }
                                            }
                                        }
                                    }
                                }
                                _ => {}
                            }
                        }
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I32 => {
                                let v252 = C::def_inst(ctx, v160.0);
                                if let Some(v253) = v252 {
                                    let v254 = &C::inst_data(ctx, v253);
                                    if let &InstructionData::Binary {
                                        opcode: ref v255,
                                        args: ref v256,
                                    } = v254 {
                                        if let &Opcode::Imul = v255 {
                                            let v257 = C::unpack_value_array_2(ctx, v256);
                                            let v260 = constructor_put_in_xreg(ctx, v257.0);
                                            let v261 = constructor_put_in_xreg(ctx, v257.1);
                                            let v262 = constructor_put_in_xreg(ctx, v160.1);
                                            let v263 = constructor_pulley_xmadd32(ctx, v260, v261, v262);
                                            let v264 = constructor_output_xreg(ctx, v263);
                                            let v265 = Some(v264);
                                            // Rule at src/isa/pulley_shared/lower.isle line 313.
                                            return v265;
                                        }
                                    }
                                }
                            }
                            I64 => {
                                let v252 = C::def_inst(ctx, v160.0);
                                if let Some(v253) = v252 {
                                    let v254 = &C::inst_data(ctx, v253);
                                    if let &InstructionData::Binary {
                                        opcode: ref v255,
                                        args: ref v256,
                                    } = v254 {
                                        if let &Opcode::Imul = v255 {
                                            let v257 = C::unpack_value_array_2(ctx, v256);
                                            let v260 = constructor_put_in_xreg(ctx, v257.0);
                                            let v261 = constructor_put_in_xreg(ctx, v257.1);
                                            let v262 = constructor_put_in_xreg(ctx, v160.1);
                                            let v277 = constructor_pulley_xmadd64(ctx, v260, v261, v262);
                                            let v278 = constructor_output_xreg(ctx, v277);
                                            let v279 = Some(v278);
                                            // Rule at src/isa/pulley_shared/lower.isle line 315.
                                            return v279;
                                        }
                                    }
                                }
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v168 = constructor_pulley_xadd64(ctx, v163, v164);
                                let v169 = constructor_output_xreg(ctx, v168);
                                let v170 = Some(v169);
                                // Rule at src/isa/pulley_shared/lower.isle line 245.
                                return v170;
                            }
                            I128 => {
                                let v211 = C::put_in_regs(ctx, v160.0);
                                let v212 = C::put_in_regs(ctx, v160.1);
                                let v214 = C::value_regs_get(ctx, v211, 0x0_usize);
                                let v215 = C::xreg_new(ctx, v214);
                                let v217 = C::value_regs_get(ctx, v211, 0x1_usize);
                                let v218 = C::xreg_new(ctx, v217);
                                let v219 = C::value_regs_get(ctx, v212, 0x0_usize);
                                let v220 = C::xreg_new(ctx, v219);
                                let v221 = C::value_regs_get(ctx, v212, 0x1_usize);
                                let v222 = C::xreg_new(ctx, v221);
                                let v223 = constructor_pulley_xadd128(ctx, v215, v218, v220, v222);
                                let v224 = C::output(ctx, v223);
                                let v225 = Some(v224);
                                // Rule at src/isa/pulley_shared/lower.isle line 291.
                                return v225;
                            }
                            I8X16 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v228 = constructor_pulley_vaddi8x16(ctx, v226, v227);
                                let v229 = constructor_output_vreg(ctx, v228);
                                let v230 = Some(v229);
                                // Rule at src/isa/pulley_shared/lower.isle line 301.
                                return v230;
                            }
                            I16X8 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v231 = constructor_pulley_vaddi16x8(ctx, v226, v227);
                                let v232 = constructor_output_vreg(ctx, v231);
                                let v233 = Some(v232);
                                // Rule at src/isa/pulley_shared/lower.isle line 302.
                                return v233;
                            }
                            I32X4 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v234 = constructor_pulley_vaddi32x4(ctx, v226, v227);
                                let v235 = constructor_output_vreg(ctx, v234);
                                let v236 = Some(v235);
                                // Rule at src/isa/pulley_shared/lower.isle line 303.
                                return v236;
                            }
                            I64X2 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v237 = constructor_pulley_vaddi64x2(ctx, v226, v227);
                                let v238 = constructor_output_vreg(ctx, v237);
                                let v239 = Some(v238);
                                // Rule at src/isa/pulley_shared/lower.isle line 304.
                                return v239;
                            }
                            _ => {}
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v156 = C::fits_in_64(ctx, v155);
                            if let Some(v157) = v156 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v165 = constructor_pulley_xadd32(ctx, v163, v164);
                                let v166 = constructor_output_xreg(ctx, v165);
                                let v167 = Some(v166);
                                // Rule at src/isa/pulley_shared/lower.isle line 244.
                                return v167;
                            }
                        }
                    }
                }
                &Opcode::Isub => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v160 = C::unpack_value_array_2(ctx, v159);
                        let v203 = constructor_u8_from_negated_iconst(ctx, v160.1);
                        if let Some(v204) = v203 {
                            let v132 = C::value_type(ctx, v131);
                            if v132 == I64 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v316 = constructor_pulley_xadd64_u8(ctx, v163, v204);
                                let v317 = constructor_output_xreg(ctx, v316);
                                let v318 = Some(v317);
                                // Rule at src/isa/pulley_shared/lower.isle line 349.
                                return v318;
                            }
                            let v154 = C::ty_int(ctx, v132);
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v313 = constructor_pulley_xadd32_u8(ctx, v163, v204);
                                    let v314 = constructor_output_xreg(ctx, v313);
                                    let v315 = Some(v314);
                                    // Rule at src/isa/pulley_shared/lower.isle line 346.
                                    return v315;
                                }
                            }
                        }
                        let v195 = constructor_u32_from_negated_iconst(ctx, v160.1);
                        if let Some(v196) = v195 {
                            let v132 = C::value_type(ctx, v131);
                            if v132 == I64 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v310 = constructor_pulley_xadd64_u32(ctx, v163, v196);
                                let v311 = constructor_output_xreg(ctx, v310);
                                let v312 = Some(v311);
                                // Rule at src/isa/pulley_shared/lower.isle line 343.
                                return v312;
                            }
                            let v154 = C::ty_int(ctx, v132);
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v307 = constructor_pulley_xadd32_u32(ctx, v163, v196);
                                    let v308 = constructor_output_xreg(ctx, v307);
                                    let v309 = Some(v308);
                                    // Rule at src/isa/pulley_shared/lower.isle line 340.
                                    return v309;
                                }
                            }
                        }
                        let v173 = C::def_inst(ctx, v160.1);
                        if let Some(v174) = v173 {
                            let v175 = &C::inst_data(ctx, v174);
                            if let &InstructionData::UnaryImm {
                                opcode: ref v176,
                                imm: v177,
                            } = v175 {
                                if let &Opcode::Iconst = v176 {
                                    let v132 = C::value_type(ctx, v131);
                                    if v132 == I64 {
                                        let v184 = C::uimm8(ctx, v177);
                                        if let Some(v185) = v184 {
                                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                                            let v304 = constructor_pulley_xsub64_u8(ctx, v163, v185);
                                            let v305 = constructor_output_xreg(ctx, v304);
                                            let v306 = Some(v305);
                                            // Rule at src/isa/pulley_shared/lower.isle line 335.
                                            return v306;
                                        }
                                        let v178 = C::u64_from_imm64(ctx, v177);
                                        let v179 = C::u64_as_u32(ctx, v178);
                                        if let Some(v180) = v179 {
                                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                                            let v301 = constructor_pulley_xsub64_u32(ctx, v163, v180);
                                            let v302 = constructor_output_xreg(ctx, v301);
                                            let v303 = Some(v302);
                                            // Rule at src/isa/pulley_shared/lower.isle line 333.
                                            return v303;
                                        }
                                    }
                                    let v154 = C::ty_int(ctx, v132);
                                    if let Some(v155) = v154 {
                                        let v171 = C::fits_in_32(ctx, v155);
                                        if let Some(v172) = v171 {
                                            let v184 = C::uimm8(ctx, v177);
                                            if let Some(v185) = v184 {
                                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                                let v298 = constructor_pulley_xsub32_u8(ctx, v163, v185);
                                                let v299 = constructor_output_xreg(ctx, v298);
                                                let v300 = Some(v299);
                                                // Rule at src/isa/pulley_shared/lower.isle line 331.
                                                return v300;
                                            }
                                            let v178 = C::u64_from_imm64(ctx, v177);
                                            let v179 = C::u64_as_u32(ctx, v178);
                                            if let Some(v180) = v179 {
                                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                                let v295 = constructor_pulley_xsub32_u32(ctx, v163, v180);
                                                let v296 = constructor_output_xreg(ctx, v295);
                                                let v297 = Some(v296);
                                                // Rule at src/isa/pulley_shared/lower.isle line 329.
                                                return v297;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v292 = constructor_pulley_xsub64(ctx, v163, v164);
                                let v293 = constructor_output_xreg(ctx, v292);
                                let v294 = Some(v293);
                                // Rule at src/isa/pulley_shared/lower.isle line 326.
                                return v294;
                            }
                            I128 => {
                                let v211 = C::put_in_regs(ctx, v160.0);
                                let v212 = C::put_in_regs(ctx, v160.1);
                                let v214 = C::value_regs_get(ctx, v211, 0x0_usize);
                                let v215 = C::xreg_new(ctx, v214);
                                let v217 = C::value_regs_get(ctx, v211, 0x1_usize);
                                let v218 = C::xreg_new(ctx, v217);
                                let v219 = C::value_regs_get(ctx, v212, 0x0_usize);
                                let v220 = C::xreg_new(ctx, v219);
                                let v221 = C::value_regs_get(ctx, v212, 0x1_usize);
                                let v222 = C::xreg_new(ctx, v221);
                                let v319 = constructor_pulley_xsub128(ctx, v215, v218, v220, v222);
                                let v320 = C::output(ctx, v319);
                                let v321 = Some(v320);
                                // Rule at src/isa/pulley_shared/lower.isle line 354.
                                return v321;
                            }
                            I8X16 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v322 = constructor_pulley_vsubi8x16(ctx, v226, v227);
                                let v323 = constructor_output_vreg(ctx, v322);
                                let v324 = Some(v323);
                                // Rule at src/isa/pulley_shared/lower.isle line 364.
                                return v324;
                            }
                            I16X8 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v325 = constructor_pulley_vsubi16x8(ctx, v226, v227);
                                let v326 = constructor_output_vreg(ctx, v325);
                                let v327 = Some(v326);
                                // Rule at src/isa/pulley_shared/lower.isle line 365.
                                return v327;
                            }
                            I32X4 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v328 = constructor_pulley_vsubi32x4(ctx, v226, v227);
                                let v329 = constructor_output_vreg(ctx, v328);
                                let v330 = Some(v329);
                                // Rule at src/isa/pulley_shared/lower.isle line 366.
                                return v330;
                            }
                            I64X2 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v331 = constructor_pulley_vsubi64x2(ctx, v226, v227);
                                let v332 = constructor_output_vreg(ctx, v331);
                                let v333 = Some(v332);
                                // Rule at src/isa/pulley_shared/lower.isle line 367.
                                return v333;
                            }
                            _ => {}
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v289 = constructor_pulley_xsub32(ctx, v163, v164);
                                let v290 = constructor_output_xreg(ctx, v289);
                                let v291 = Some(v290);
                                // Rule at src/isa/pulley_shared/lower.isle line 325.
                                return v291;
                            }
                        }
                    }
                }
                &Opcode::Imul => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v352 = C::i32_from_iconst(ctx, v160.1);
                                if let Some(v353) = v352 {
                                    let v360 = C::i32_as_i8(ctx, v353);
                                    if let Some(v361) = v360 {
                                        let v163 = constructor_put_in_xreg(ctx, v160.0);
                                        let v365 = constructor_pulley_xmul64_s8(ctx, v163, v361);
                                        let v366 = constructor_output_xreg(ctx, v365);
                                        let v367 = Some(v366);
                                        // Rule at src/isa/pulley_shared/lower.isle line 387.
                                        return v367;
                                    }
                                }
                            }
                            I128 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v173 = C::def_inst(ctx, v160.1);
                                if let Some(v174) = v173 {
                                    let v175 = &C::inst_data(ctx, v174);
                                    if let &InstructionData::Unary {
                                        opcode: ref v370,
                                        arg: v371,
                                    } = v175 {
                                        match v370 {
                                            &Opcode::Uextend => {
                                                let v252 = C::def_inst(ctx, v160.0);
                                                if let Some(v253) = v252 {
                                                    let v254 = &C::inst_data(ctx, v253);
                                                    if let &InstructionData::Unary {
                                                        opcode: ref v368,
                                                        arg: v369,
                                                    } = v254 {
                                                        if let &Opcode::Uextend = v368 {
                                                            let v372 = constructor_zext64(ctx, v369);
                                                            let v373 = constructor_zext64(ctx, v371);
                                                            let v374 = constructor_pulley_xwidemul64_u(ctx, v372, v373);
                                                            let v375 = C::output(ctx, v374);
                                                            let v376 = Some(v375);
                                                            // Rule at src/isa/pulley_shared/lower.isle line 391.
                                                            return v376;
                                                        }
                                                    }
                                                }
                                            }
                                            &Opcode::Sextend => {
                                                let v252 = C::def_inst(ctx, v160.0);
                                                if let Some(v253) = v252 {
                                                    let v254 = &C::inst_data(ctx, v253);
                                                    if let &InstructionData::Unary {
                                                        opcode: ref v368,
                                                        arg: v369,
                                                    } = v254 {
                                                        if let &Opcode::Sextend = v368 {
                                                            let v377 = constructor_sext64(ctx, v369);
                                                            let v378 = constructor_sext64(ctx, v371);
                                                            let v379 = constructor_pulley_xwidemul64_s(ctx, v377, v378);
                                                            let v380 = C::output(ctx, v379);
                                                            let v381 = Some(v380);
                                                            // Rule at src/isa/pulley_shared/lower.isle line 393.
                                                            return v381;
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                }
                            }
                            _ => {}
                        }
                        let v160 = C::unpack_value_array_2(ctx, v159);
                        let v352 = C::i32_from_iconst(ctx, v160.1);
                        if let Some(v353) = v352 {
                            let v154 = C::ty_int(ctx, v132);
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v360 = C::i32_as_i8(ctx, v353);
                                    if let Some(v361) = v360 {
                                        let v163 = constructor_put_in_xreg(ctx, v160.0);
                                        let v362 = constructor_pulley_xmul32_s8(ctx, v163, v361);
                                        let v363 = constructor_output_xreg(ctx, v362);
                                        let v364 = Some(v363);
                                        // Rule at src/isa/pulley_shared/lower.isle line 385.
                                        return v364;
                                    }
                                }
                            }
                            if v132 == I64 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v357 = constructor_pulley_xmul64_s32(ctx, v163, v353);
                                let v358 = constructor_output_xreg(ctx, v357);
                                let v359 = Some(v358);
                                // Rule at src/isa/pulley_shared/lower.isle line 383.
                                return v359;
                            }
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v354 = constructor_pulley_xmul32_s32(ctx, v163, v353);
                                    let v355 = constructor_output_xreg(ctx, v354);
                                    let v356 = Some(v355);
                                    // Rule at src/isa/pulley_shared/lower.isle line 381.
                                    return v356;
                                }
                            }
                        }
                        match v132 {
                            I8 => {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v346 = constructor_pulley_xmul32(ctx, v163, v164);
                                let v347 = constructor_output_xreg(ctx, v346);
                                let v348 = Some(v347);
                                // Rule at src/isa/pulley_shared/lower.isle line 376.
                                return v348;
                            }
                            I16 => {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v346 = constructor_pulley_xmul32(ctx, v163, v164);
                                let v347 = constructor_output_xreg(ctx, v346);
                                let v348 = Some(v347);
                                // Rule at src/isa/pulley_shared/lower.isle line 377.
                                return v348;
                            }
                            I32 => {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v346 = constructor_pulley_xmul32(ctx, v163, v164);
                                let v347 = constructor_output_xreg(ctx, v346);
                                let v348 = Some(v347);
                                // Rule at src/isa/pulley_shared/lower.isle line 378.
                                return v348;
                            }
                            I64 => {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v349 = constructor_pulley_xmul64(ctx, v163, v164);
                                let v350 = constructor_output_xreg(ctx, v349);
                                let v351 = Some(v350);
                                // Rule at src/isa/pulley_shared/lower.isle line 379.
                                return v351;
                            }
                            I128 => {
                                let v211 = C::put_in_regs(ctx, v160.0);
                                let v382 = C::value_regs_get(ctx, v211, 0x0_usize);
                                let v383 = C::xreg_new(ctx, v382);
                                let v384 = C::value_regs_get(ctx, v211, 0x1_usize);
                                let v385 = C::xreg_new(ctx, v384);
                                let v386 = C::put_in_regs(ctx, v160.1);
                                let v387 = C::value_regs_get(ctx, v386, 0x0_usize);
                                let v388 = C::xreg_new(ctx, v387);
                                let v389 = C::value_regs_get(ctx, v386, 0x1_usize);
                                let v390 = C::xreg_new(ctx, v389);
                                let v391 = constructor_pulley_xwidemul64_u(ctx, v383, v388);
                                let v392 = C::value_regs_get(ctx, v391, 0x0_usize);
                                let v393 = C::xreg_new(ctx, v392);
                                let v394 = C::value_regs_get(ctx, v391, 0x1_usize);
                                let v395 = C::xreg_new(ctx, v394);
                                let v396 = constructor_pulley_xmul64(ctx, v383, v390);
                                let v397 = constructor_pulley_xmul64(ctx, v385, v388);
                                let v398 = constructor_pulley_xadd64(ctx, v395, v396);
                                let v399 = constructor_pulley_xadd64(ctx, v398, v397);
                                let v400 = C::xreg_to_reg(ctx, v393);
                                let v401 = C::xreg_to_reg(ctx, v399);
                                let v402 = C::value_regs(ctx, v400, v401);
                                let v403 = C::output(ctx, v402);
                                let v404 = Some(v403);
                                // Rule at src/isa/pulley_shared/lower.isle line 397.
                                return v404;
                            }
                            I8X16 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v405 = constructor_pulley_vmuli8x16(ctx, v226, v227);
                                let v406 = constructor_output_vreg(ctx, v405);
                                let v407 = Some(v406);
                                // Rule at src/isa/pulley_shared/lower.isle line 422.
                                return v407;
                            }
                            I16X8 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v408 = constructor_pulley_vmuli16x8(ctx, v226, v227);
                                let v409 = constructor_output_vreg(ctx, v408);
                                let v410 = Some(v409);
                                // Rule at src/isa/pulley_shared/lower.isle line 423.
                                return v410;
                            }
                            I32X4 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v411 = constructor_pulley_vmuli32x4(ctx, v226, v227);
                                let v412 = constructor_output_vreg(ctx, v411);
                                let v413 = Some(v412);
                                // Rule at src/isa/pulley_shared/lower.isle line 424.
                                return v413;
                            }
                            I64X2 => {
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v414 = constructor_pulley_vmuli64x2(ctx, v226, v227);
                                let v415 = constructor_output_vreg(ctx, v414);
                                let v416 = Some(v415);
                                // Rule at src/isa/pulley_shared/lower.isle line 425.
                                return v416;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Umulhi => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8 => {
                                let v418 = C::u64_as_u8(ctx, 0x8_u64);
                                let v419 = C::u6_from_u8(ctx, v418);
                                if let Some(v420) = v419 {
                                    let v160 = C::unpack_value_array_2(ctx, v159);
                                    let v421 = constructor_zext32(ctx, v160.0);
                                    let v422 = constructor_zext32(ctx, v160.1);
                                    let v423 = constructor_pulley_xmul32(ctx, v421, v422);
                                    let v424 = constructor_pulley_xshr32_u_u6(ctx, v423, v420);
                                    let v425 = constructor_output_xreg(ctx, v424);
                                    let v426 = Some(v425);
                                    // Rule at src/isa/pulley_shared/lower.isle line 429.
                                    return v426;
                                }
                            }
                            I16 => {
                                let v428 = C::u64_as_u8(ctx, 0x10_u64);
                                let v429 = C::u6_from_u8(ctx, v428);
                                if let Some(v430) = v429 {
                                    let v160 = C::unpack_value_array_2(ctx, v159);
                                    let v421 = constructor_zext32(ctx, v160.0);
                                    let v422 = constructor_zext32(ctx, v160.1);
                                    let v423 = constructor_pulley_xmul32(ctx, v421, v422);
                                    let v431 = constructor_pulley_xshr32_u_u6(ctx, v423, v430);
                                    let v432 = constructor_output_xreg(ctx, v431);
                                    let v433 = Some(v432);
                                    // Rule at src/isa/pulley_shared/lower.isle line 433.
                                    return v433;
                                }
                            }
                            I32 => {
                                let v435 = C::u64_as_u8(ctx, 0x20_u64);
                                let v436 = C::u6_from_u8(ctx, v435);
                                if let Some(v437) = v436 {
                                    let v160 = C::unpack_value_array_2(ctx, v159);
                                    let v438 = constructor_zext64(ctx, v160.0);
                                    let v439 = constructor_zext64(ctx, v160.1);
                                    let v440 = constructor_pulley_xmul64(ctx, v438, v439);
                                    let v441 = constructor_pulley_xshr64_u_u6(ctx, v440, v437);
                                    let v442 = constructor_output_xreg(ctx, v441);
                                    let v443 = Some(v442);
                                    // Rule at src/isa/pulley_shared/lower.isle line 437.
                                    return v443;
                                }
                            }
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v444 = constructor_pulley_xmulhi64_u(ctx, v163, v164);
                                let v445 = constructor_output_xreg(ctx, v444);
                                let v446 = Some(v445);
                                // Rule at src/isa/pulley_shared/lower.isle line 441.
                                return v446;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Smulhi => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8 => {
                                let v418 = C::u64_as_u8(ctx, 0x8_u64);
                                let v419 = C::u6_from_u8(ctx, v418);
                                if let Some(v420) = v419 {
                                    let v160 = C::unpack_value_array_2(ctx, v159);
                                    let v447 = constructor_sext32(ctx, v160.0);
                                    let v448 = constructor_sext32(ctx, v160.1);
                                    let v449 = constructor_pulley_xmul32(ctx, v447, v448);
                                    let v450 = constructor_pulley_xshr32_s_u6(ctx, v449, v420);
                                    let v451 = constructor_output_xreg(ctx, v450);
                                    let v452 = Some(v451);
                                    // Rule at src/isa/pulley_shared/lower.isle line 446.
                                    return v452;
                                }
                            }
                            I16 => {
                                let v428 = C::u64_as_u8(ctx, 0x10_u64);
                                let v429 = C::u6_from_u8(ctx, v428);
                                if let Some(v430) = v429 {
                                    let v160 = C::unpack_value_array_2(ctx, v159);
                                    let v447 = constructor_sext32(ctx, v160.0);
                                    let v448 = constructor_sext32(ctx, v160.1);
                                    let v449 = constructor_pulley_xmul32(ctx, v447, v448);
                                    let v453 = constructor_pulley_xshr32_s_u6(ctx, v449, v430);
                                    let v454 = constructor_output_xreg(ctx, v453);
                                    let v455 = Some(v454);
                                    // Rule at src/isa/pulley_shared/lower.isle line 450.
                                    return v455;
                                }
                            }
                            I32 => {
                                let v435 = C::u64_as_u8(ctx, 0x20_u64);
                                let v436 = C::u6_from_u8(ctx, v435);
                                if let Some(v437) = v436 {
                                    let v160 = C::unpack_value_array_2(ctx, v159);
                                    let v456 = constructor_sext64(ctx, v160.0);
                                    let v457 = constructor_sext64(ctx, v160.1);
                                    let v458 = constructor_pulley_xmul64(ctx, v456, v457);
                                    let v459 = constructor_pulley_xshr64_s_u6(ctx, v458, v437);
                                    let v460 = constructor_output_xreg(ctx, v459);
                                    let v461 = Some(v460);
                                    // Rule at src/isa/pulley_shared/lower.isle line 454.
                                    return v461;
                                }
                            }
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v462 = constructor_pulley_xmulhi64_s(ctx, v163, v164);
                                let v463 = constructor_output_xreg(ctx, v462);
                                let v464 = Some(v463);
                                // Rule at src/isa/pulley_shared/lower.isle line 458.
                                return v464;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::SqmulRoundSat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I16X8 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v465 = constructor_pulley_vqmulrsi16x8(ctx, v226, v227);
                            let v466 = constructor_output_vreg(ctx, v465);
                            let v467 = Some(v466);
                            // Rule at src/isa/pulley_shared/lower.isle line 463.
                            return v467;
                        }
                    }
                }
                &Opcode::Udiv => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v485 = constructor_pulley_xdiv64_u(ctx, v163, v164);
                            let v486 = constructor_output_xreg(ctx, v485);
                            let v487 = Some(v486);
                            // Rule at src/isa/pulley_shared/lower.isle line 481.
                            return v487;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v421 = constructor_zext32(ctx, v160.0);
                                let v422 = constructor_zext32(ctx, v160.1);
                                let v482 = constructor_pulley_xdiv32_u(ctx, v421, v422);
                                let v483 = constructor_output_xreg(ctx, v482);
                                let v484 = Some(v483);
                                // Rule at src/isa/pulley_shared/lower.isle line 479.
                                return v484;
                            }
                        }
                    }
                }
                &Opcode::Sdiv => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v473 = constructor_pulley_xdiv64_s(ctx, v163, v164);
                            let v474 = constructor_output_xreg(ctx, v473);
                            let v475 = Some(v474);
                            // Rule at src/isa/pulley_shared/lower.isle line 469.
                            return v475;
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v447 = constructor_sext32(ctx, v160.0);
                            let v448 = constructor_sext32(ctx, v160.1);
                            let v470 = constructor_pulley_xdiv32_s(ctx, v447, v448);
                            let v471 = constructor_output_xreg(ctx, v470);
                            let v472 = Some(v471);
                            // Rule at src/isa/pulley_shared/lower.isle line 467.
                            return v472;
                        }
                    }
                }
                &Opcode::Urem => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v491 = constructor_pulley_xrem64_u(ctx, v163, v164);
                            let v492 = constructor_output_xreg(ctx, v491);
                            let v493 = Some(v492);
                            // Rule at src/isa/pulley_shared/lower.isle line 487.
                            return v493;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v421 = constructor_zext32(ctx, v160.0);
                                let v422 = constructor_zext32(ctx, v160.1);
                                let v488 = constructor_pulley_xrem32_u(ctx, v421, v422);
                                let v489 = constructor_output_xreg(ctx, v488);
                                let v490 = Some(v489);
                                // Rule at src/isa/pulley_shared/lower.isle line 485.
                                return v490;
                            }
                        }
                    }
                }
                &Opcode::Srem => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v479 = constructor_pulley_xrem64_s(ctx, v163, v164);
                            let v480 = constructor_output_xreg(ctx, v479);
                            let v481 = Some(v480);
                            // Rule at src/isa/pulley_shared/lower.isle line 475.
                            return v481;
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v447 = constructor_sext32(ctx, v160.0);
                            let v448 = constructor_sext32(ctx, v160.1);
                            let v476 = constructor_pulley_xrem32_s(ctx, v447, v448);
                            let v477 = constructor_output_xreg(ctx, v476);
                            let v478 = Some(v477);
                            // Rule at src/isa/pulley_shared/lower.isle line 473.
                            return v478;
                        }
                    }
                }
                &Opcode::Band => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v160 = C::unpack_value_array_2(ctx, v159);
                        let v352 = C::i32_from_iconst(ctx, v160.1);
                        if let Some(v353) = v352 {
                            let v360 = C::i32_as_i8(ctx, v353);
                            if let Some(v361) = v360 {
                                let v132 = C::value_type(ctx, v131);
                                if v132 == I64 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v611 = constructor_pulley_xband64_s8(ctx, v163, v361);
                                    let v612 = constructor_output_xreg(ctx, v611);
                                    let v613 = Some(v612);
                                    // Rule at src/isa/pulley_shared/lower.isle line 602.
                                    return v613;
                                }
                                let v154 = C::ty_int(ctx, v132);
                                if let Some(v155) = v154 {
                                    let v171 = C::fits_in_32(ctx, v155);
                                    if let Some(v172) = v171 {
                                        let v163 = constructor_put_in_xreg(ctx, v160.0);
                                        let v608 = constructor_pulley_xband32_s8(ctx, v163, v361);
                                        let v609 = constructor_output_xreg(ctx, v608);
                                        let v610 = Some(v609);
                                        // Rule at src/isa/pulley_shared/lower.isle line 600.
                                        return v610;
                                    }
                                }
                            }
                            let v132 = C::value_type(ctx, v131);
                            if v132 == I64 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v605 = constructor_pulley_xband64_s32(ctx, v163, v353);
                                let v606 = constructor_output_xreg(ctx, v605);
                                let v607 = Some(v606);
                                // Rule at src/isa/pulley_shared/lower.isle line 598.
                                return v607;
                            }
                            let v154 = C::ty_int(ctx, v132);
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v602 = constructor_pulley_xband32_s32(ctx, v163, v353);
                                    let v603 = constructor_output_xreg(ctx, v602);
                                    let v604 = Some(v603);
                                    // Rule at src/isa/pulley_shared/lower.isle line 596.
                                    return v604;
                                }
                            }
                        }
                        let v132 = C::value_type(ctx, v131);
                        let v614 = C::ty_vec128(ctx, v132);
                        if let Some(v615) = v614 {
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v616 = constructor_pulley_vband128(ctx, v226, v227);
                            let v617 = constructor_output_vreg(ctx, v616);
                            let v618 = Some(v617);
                            // Rule at src/isa/pulley_shared/lower.isle line 605.
                            return v618;
                        }
                        if v132 == I64 {
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v599 = constructor_pulley_xband64(ctx, v163, v164);
                            let v600 = constructor_output_xreg(ctx, v599);
                            let v601 = Some(v600);
                            // Rule at src/isa/pulley_shared/lower.isle line 594.
                            return v601;
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v596 = constructor_pulley_xband32(ctx, v163, v164);
                            let v597 = constructor_output_xreg(ctx, v596);
                            let v598 = Some(v597);
                            // Rule at src/isa/pulley_shared/lower.isle line 593.
                            return v598;
                        }
                    }
                }
                &Opcode::Bor => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v160 = C::unpack_value_array_2(ctx, v159);
                        let v352 = C::i32_from_iconst(ctx, v160.1);
                        if let Some(v353) = v352 {
                            let v360 = C::i32_as_i8(ctx, v353);
                            if let Some(v361) = v360 {
                                let v132 = C::value_type(ctx, v131);
                                if v132 == I64 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v634 = constructor_pulley_xbor64_s8(ctx, v163, v361);
                                    let v635 = constructor_output_xreg(ctx, v634);
                                    let v636 = Some(v635);
                                    // Rule at src/isa/pulley_shared/lower.isle line 619.
                                    return v636;
                                }
                                let v154 = C::ty_int(ctx, v132);
                                if let Some(v155) = v154 {
                                    let v171 = C::fits_in_32(ctx, v155);
                                    if let Some(v172) = v171 {
                                        let v163 = constructor_put_in_xreg(ctx, v160.0);
                                        let v631 = constructor_pulley_xbor32_s8(ctx, v163, v361);
                                        let v632 = constructor_output_xreg(ctx, v631);
                                        let v633 = Some(v632);
                                        // Rule at src/isa/pulley_shared/lower.isle line 617.
                                        return v633;
                                    }
                                }
                            }
                            let v132 = C::value_type(ctx, v131);
                            if v132 == I64 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v628 = constructor_pulley_xbor64_s32(ctx, v163, v353);
                                let v629 = constructor_output_xreg(ctx, v628);
                                let v630 = Some(v629);
                                // Rule at src/isa/pulley_shared/lower.isle line 615.
                                return v630;
                            }
                            let v154 = C::ty_int(ctx, v132);
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v625 = constructor_pulley_xbor32_s32(ctx, v163, v353);
                                    let v626 = constructor_output_xreg(ctx, v625);
                                    let v627 = Some(v626);
                                    // Rule at src/isa/pulley_shared/lower.isle line 613.
                                    return v627;
                                }
                            }
                        }
                        let v132 = C::value_type(ctx, v131);
                        let v614 = C::ty_vec128(ctx, v132);
                        if let Some(v615) = v614 {
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v637 = constructor_pulley_vbor128(ctx, v226, v227);
                            let v638 = constructor_output_vreg(ctx, v637);
                            let v639 = Some(v638);
                            // Rule at src/isa/pulley_shared/lower.isle line 622.
                            return v639;
                        }
                        if v132 == I64 {
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v622 = constructor_pulley_xbor64(ctx, v163, v164);
                            let v623 = constructor_output_xreg(ctx, v622);
                            let v624 = Some(v623);
                            // Rule at src/isa/pulley_shared/lower.isle line 611.
                            return v624;
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v619 = constructor_pulley_xbor32(ctx, v163, v164);
                            let v620 = constructor_output_xreg(ctx, v619);
                            let v621 = Some(v620);
                            // Rule at src/isa/pulley_shared/lower.isle line 610.
                            return v621;
                        }
                    }
                }
                &Opcode::Bxor => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v160 = C::unpack_value_array_2(ctx, v159);
                        let v352 = C::i32_from_iconst(ctx, v160.1);
                        if let Some(v353) = v352 {
                            let v360 = C::i32_as_i8(ctx, v353);
                            if let Some(v361) = v360 {
                                let v132 = C::value_type(ctx, v131);
                                if v132 == I64 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v655 = constructor_pulley_xbxor64_s8(ctx, v163, v361);
                                    let v656 = constructor_output_xreg(ctx, v655);
                                    let v657 = Some(v656);
                                    // Rule at src/isa/pulley_shared/lower.isle line 636.
                                    return v657;
                                }
                                let v154 = C::ty_int(ctx, v132);
                                if let Some(v155) = v154 {
                                    let v171 = C::fits_in_32(ctx, v155);
                                    if let Some(v172) = v171 {
                                        let v163 = constructor_put_in_xreg(ctx, v160.0);
                                        let v652 = constructor_pulley_xbxor32_s8(ctx, v163, v361);
                                        let v653 = constructor_output_xreg(ctx, v652);
                                        let v654 = Some(v653);
                                        // Rule at src/isa/pulley_shared/lower.isle line 634.
                                        return v654;
                                    }
                                }
                            }
                            let v132 = C::value_type(ctx, v131);
                            if v132 == I64 {
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v649 = constructor_pulley_xbxor64_s32(ctx, v163, v353);
                                let v650 = constructor_output_xreg(ctx, v649);
                                let v651 = Some(v650);
                                // Rule at src/isa/pulley_shared/lower.isle line 632.
                                return v651;
                            }
                            let v154 = C::ty_int(ctx, v132);
                            if let Some(v155) = v154 {
                                let v171 = C::fits_in_32(ctx, v155);
                                if let Some(v172) = v171 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v646 = constructor_pulley_xbxor32_s32(ctx, v163, v353);
                                    let v647 = constructor_output_xreg(ctx, v646);
                                    let v648 = Some(v647);
                                    // Rule at src/isa/pulley_shared/lower.isle line 630.
                                    return v648;
                                }
                            }
                        }
                        let v132 = C::value_type(ctx, v131);
                        let v614 = C::ty_vec128(ctx, v132);
                        if let Some(v615) = v614 {
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v658 = constructor_pulley_vbxor128(ctx, v226, v227);
                            let v659 = constructor_output_vreg(ctx, v658);
                            let v660 = Some(v659);
                            // Rule at src/isa/pulley_shared/lower.isle line 639.
                            return v660;
                        }
                        if v132 == I64 {
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v643 = constructor_pulley_xbxor64(ctx, v163, v164);
                            let v644 = constructor_output_xreg(ctx, v643);
                            let v645 = Some(v644);
                            // Rule at src/isa/pulley_shared/lower.isle line 628.
                            return v645;
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v163 = constructor_put_in_xreg(ctx, v160.0);
                            let v164 = constructor_put_in_xreg(ctx, v160.1);
                            let v640 = constructor_pulley_xbxor32(ctx, v163, v164);
                            let v641 = constructor_output_xreg(ctx, v640);
                            let v642 = Some(v641);
                            // Rule at src/isa/pulley_shared/lower.isle line 627.
                            return v642;
                        }
                    }
                }
                &Opcode::Rotl => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v800 = constructor_pulley_xrotl32(ctx, v163, v164);
                                let v801 = constructor_output_xreg(ctx, v800);
                                let v802 = Some(v801);
                                // Rule at src/isa/pulley_shared/lower.isle line 729.
                                return v802;
                            }
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v803 = constructor_pulley_xrotl64(ctx, v163, v164);
                                let v804 = constructor_output_xreg(ctx, v803);
                                let v805 = Some(v804);
                                // Rule at src/isa/pulley_shared/lower.isle line 730.
                                return v805;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Rotr => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v806 = constructor_pulley_xrotr32(ctx, v163, v164);
                                let v807 = constructor_output_xreg(ctx, v806);
                                let v808 = Some(v807);
                                // Rule at src/isa/pulley_shared/lower.isle line 734.
                                return v808;
                            }
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v809 = constructor_pulley_xrotr64(ctx, v163, v164);
                                let v810 = constructor_output_xreg(ctx, v809);
                                let v811 = Some(v810);
                                // Rule at src/isa/pulley_shared/lower.isle line 735.
                                return v811;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ishl => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v501 = constructor_pulley_xband32_s8(ctx, v164, 7_i8);
                                let v502 = constructor_pulley_xshl32(ctx, v163, v501);
                                let v503 = constructor_output_xreg(ctx, v502);
                                let v504 = Some(v503);
                                // Rule at src/isa/pulley_shared/lower.isle line 496.
                                return v504;
                            }
                            I16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v506 = constructor_pulley_xband32_s8(ctx, v164, 15_i8);
                                let v507 = constructor_pulley_xshl32(ctx, v163, v506);
                                let v508 = constructor_output_xreg(ctx, v507);
                                let v509 = Some(v508);
                                // Rule at src/isa/pulley_shared/lower.isle line 499.
                                return v509;
                            }
                            I32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v516 = constructor_u6_shift_from_iconst(ctx, v160.1);
                                if let Some(v517) = v516 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v518 = constructor_pulley_xshl32_u6(ctx, v163, v517);
                                    let v519 = constructor_output_xreg(ctx, v518);
                                    let v520 = Some(v519);
                                    // Rule at src/isa/pulley_shared/lower.isle line 509.
                                    return v520;
                                }
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v510 = constructor_pulley_xshl32(ctx, v163, v164);
                                let v511 = constructor_output_xreg(ctx, v510);
                                let v512 = Some(v511);
                                // Rule at src/isa/pulley_shared/lower.isle line 502.
                                return v512;
                            }
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v516 = constructor_u6_shift_from_iconst(ctx, v160.1);
                                if let Some(v517) = v516 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v521 = constructor_pulley_xshl64_u6(ctx, v163, v517);
                                    let v522 = constructor_output_xreg(ctx, v521);
                                    let v523 = Some(v522);
                                    // Rule at src/isa/pulley_shared/lower.isle line 512.
                                    return v523;
                                }
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v513 = constructor_pulley_xshl64(ctx, v163, v164);
                                let v514 = constructor_output_xreg(ctx, v513);
                                let v515 = Some(v514);
                                // Rule at src/isa/pulley_shared/lower.isle line 505.
                                return v515;
                            }
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v524 = constructor_pulley_vshli8x16(ctx, v226, v164);
                                let v525 = constructor_output_vreg(ctx, v524);
                                let v526 = Some(v525);
                                // Rule at src/isa/pulley_shared/lower.isle line 518.
                                return v526;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v527 = constructor_pulley_vshli16x8(ctx, v226, v164);
                                let v528 = constructor_output_vreg(ctx, v527);
                                let v529 = Some(v528);
                                // Rule at src/isa/pulley_shared/lower.isle line 519.
                                return v529;
                            }
                            I32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v530 = constructor_pulley_vshli32x4(ctx, v226, v164);
                                let v531 = constructor_output_vreg(ctx, v530);
                                let v532 = Some(v531);
                                // Rule at src/isa/pulley_shared/lower.isle line 520.
                                return v532;
                            }
                            I64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v533 = constructor_pulley_vshli64x2(ctx, v226, v164);
                                let v534 = constructor_output_vreg(ctx, v533);
                                let v535 = Some(v534);
                                // Rule at src/isa/pulley_shared/lower.isle line 521.
                                return v535;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ushr => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v421 = constructor_zext32(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v501 = constructor_pulley_xband32_s8(ctx, v164, 7_i8);
                                let v536 = constructor_pulley_xshr32_u(ctx, v421, v501);
                                let v537 = constructor_output_xreg(ctx, v536);
                                let v538 = Some(v537);
                                // Rule at src/isa/pulley_shared/lower.isle line 535.
                                return v538;
                            }
                            I16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v421 = constructor_zext32(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v506 = constructor_pulley_xband32_s8(ctx, v164, 15_i8);
                                let v539 = constructor_pulley_xshr32_u(ctx, v421, v506);
                                let v540 = constructor_output_xreg(ctx, v539);
                                let v541 = Some(v540);
                                // Rule at src/isa/pulley_shared/lower.isle line 538.
                                return v541;
                            }
                            I32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v516 = constructor_u6_shift_from_iconst(ctx, v160.1);
                                if let Some(v517) = v516 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v548 = constructor_pulley_xshr32_u_u6(ctx, v163, v517);
                                    let v549 = constructor_output_xreg(ctx, v548);
                                    let v550 = Some(v549);
                                    // Rule at src/isa/pulley_shared/lower.isle line 548.
                                    return v550;
                                }
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v542 = constructor_pulley_xshr32_u(ctx, v163, v164);
                                let v543 = constructor_output_xreg(ctx, v542);
                                let v544 = Some(v543);
                                // Rule at src/isa/pulley_shared/lower.isle line 541.
                                return v544;
                            }
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v516 = constructor_u6_shift_from_iconst(ctx, v160.1);
                                if let Some(v517) = v516 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v551 = constructor_pulley_xshr64_u_u6(ctx, v163, v517);
                                    let v552 = constructor_output_xreg(ctx, v551);
                                    let v553 = Some(v552);
                                    // Rule at src/isa/pulley_shared/lower.isle line 551.
                                    return v553;
                                }
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v545 = constructor_pulley_xshr64_u(ctx, v163, v164);
                                let v546 = constructor_output_xreg(ctx, v545);
                                let v547 = Some(v546);
                                // Rule at src/isa/pulley_shared/lower.isle line 544.
                                return v547;
                            }
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v554 = constructor_pulley_vshri8x16_u(ctx, v226, v164);
                                let v555 = constructor_output_vreg(ctx, v554);
                                let v556 = Some(v555);
                                // Rule at src/isa/pulley_shared/lower.isle line 557.
                                return v556;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v557 = constructor_pulley_vshri16x8_u(ctx, v226, v164);
                                let v558 = constructor_output_vreg(ctx, v557);
                                let v559 = Some(v558);
                                // Rule at src/isa/pulley_shared/lower.isle line 558.
                                return v559;
                            }
                            I32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v560 = constructor_pulley_vshri32x4_u(ctx, v226, v164);
                                let v561 = constructor_output_vreg(ctx, v560);
                                let v562 = Some(v561);
                                // Rule at src/isa/pulley_shared/lower.isle line 559.
                                return v562;
                            }
                            I64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v563 = constructor_pulley_vshri64x2_u(ctx, v226, v164);
                                let v564 = constructor_output_vreg(ctx, v563);
                                let v565 = Some(v564);
                                // Rule at src/isa/pulley_shared/lower.isle line 560.
                                return v565;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Sshr => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v447 = constructor_sext32(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v501 = constructor_pulley_xband32_s8(ctx, v164, 7_i8);
                                let v566 = constructor_pulley_xshr32_u(ctx, v447, v501);
                                let v567 = constructor_output_xreg(ctx, v566);
                                let v568 = Some(v567);
                                // Rule at src/isa/pulley_shared/lower.isle line 564.
                                return v568;
                            }
                            I16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v447 = constructor_sext32(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v506 = constructor_pulley_xband32_s8(ctx, v164, 15_i8);
                                let v569 = constructor_pulley_xshr32_u(ctx, v447, v506);
                                let v570 = constructor_output_xreg(ctx, v569);
                                let v571 = Some(v570);
                                // Rule at src/isa/pulley_shared/lower.isle line 567.
                                return v571;
                            }
                            I32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v516 = constructor_u6_shift_from_iconst(ctx, v160.1);
                                if let Some(v517) = v516 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v578 = constructor_pulley_xshr32_s_u6(ctx, v163, v517);
                                    let v579 = constructor_output_xreg(ctx, v578);
                                    let v580 = Some(v579);
                                    // Rule at src/isa/pulley_shared/lower.isle line 577.
                                    return v580;
                                }
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v572 = constructor_pulley_xshr32_s(ctx, v163, v164);
                                let v573 = constructor_output_xreg(ctx, v572);
                                let v574 = Some(v573);
                                // Rule at src/isa/pulley_shared/lower.isle line 570.
                                return v574;
                            }
                            I64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v516 = constructor_u6_shift_from_iconst(ctx, v160.1);
                                if let Some(v517) = v516 {
                                    let v163 = constructor_put_in_xreg(ctx, v160.0);
                                    let v581 = constructor_pulley_xshr64_s_u6(ctx, v163, v517);
                                    let v582 = constructor_output_xreg(ctx, v581);
                                    let v583 = Some(v582);
                                    // Rule at src/isa/pulley_shared/lower.isle line 580.
                                    return v583;
                                }
                                let v163 = constructor_put_in_xreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v575 = constructor_pulley_xshr64_s(ctx, v163, v164);
                                let v576 = constructor_output_xreg(ctx, v575);
                                let v577 = Some(v576);
                                // Rule at src/isa/pulley_shared/lower.isle line 573.
                                return v577;
                            }
                            I8X16 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v584 = constructor_pulley_vshri8x16_s(ctx, v226, v164);
                                let v585 = constructor_output_vreg(ctx, v584);
                                let v586 = Some(v585);
                                // Rule at src/isa/pulley_shared/lower.isle line 586.
                                return v586;
                            }
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v587 = constructor_pulley_vshri16x8_s(ctx, v226, v164);
                                let v588 = constructor_output_vreg(ctx, v587);
                                let v589 = Some(v588);
                                // Rule at src/isa/pulley_shared/lower.isle line 587.
                                return v589;
                            }
                            I32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v590 = constructor_pulley_vshri32x4_s(ctx, v226, v164);
                                let v591 = constructor_output_vreg(ctx, v590);
                                let v592 = Some(v591);
                                // Rule at src/isa/pulley_shared/lower.isle line 588.
                                return v592;
                            }
                            I64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v164 = constructor_put_in_xreg(ctx, v160.1);
                                let v593 = constructor_pulley_vshri64x2_s(ctx, v226, v164);
                                let v594 = constructor_output_vreg(ctx, v593);
                                let v595 = Some(v594);
                                // Rule at src/isa/pulley_shared/lower.isle line 589.
                                return v595;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fadd => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1215 = constructor_pulley_fadd32(ctx, v1207, v1208);
                                let v1216 = constructor_output_freg(ctx, v1215);
                                let v1217 = Some(v1216);
                                // Rule at src/isa/pulley_shared/lower.isle line 1463.
                                return v1217;
                            }
                            F64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1218 = constructor_pulley_fadd64(ctx, v1207, v1208);
                                let v1219 = constructor_output_freg(ctx, v1218);
                                let v1220 = Some(v1219);
                                // Rule at src/isa/pulley_shared/lower.isle line 1464.
                                return v1220;
                            }
                            F32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1221 = constructor_pulley_vaddf32x4(ctx, v226, v227);
                                let v1222 = constructor_output_vreg(ctx, v1221);
                                let v1223 = Some(v1222);
                                // Rule at src/isa/pulley_shared/lower.isle line 1465.
                                return v1223;
                            }
                            F64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1224 = constructor_pulley_vaddf64x2(ctx, v226, v227);
                                let v1225 = constructor_output_vreg(ctx, v1224);
                                let v1226 = Some(v1225);
                                // Rule at src/isa/pulley_shared/lower.isle line 1466.
                                return v1226;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fsub => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1227 = constructor_pulley_fsub32(ctx, v1207, v1208);
                                let v1228 = constructor_output_freg(ctx, v1227);
                                let v1229 = Some(v1228);
                                // Rule at src/isa/pulley_shared/lower.isle line 1470.
                                return v1229;
                            }
                            F64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1230 = constructor_pulley_fsub64(ctx, v1207, v1208);
                                let v1231 = constructor_output_freg(ctx, v1230);
                                let v1232 = Some(v1231);
                                // Rule at src/isa/pulley_shared/lower.isle line 1471.
                                return v1232;
                            }
                            F32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1233 = constructor_pulley_vsubf32x4(ctx, v226, v227);
                                let v1234 = constructor_output_vreg(ctx, v1233);
                                let v1235 = Some(v1234);
                                // Rule at src/isa/pulley_shared/lower.isle line 1472.
                                return v1235;
                            }
                            F64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1236 = constructor_pulley_vsubf64x2(ctx, v226, v227);
                                let v1237 = constructor_output_vreg(ctx, v1236);
                                let v1238 = Some(v1237);
                                // Rule at src/isa/pulley_shared/lower.isle line 1473.
                                return v1238;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fmul => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1239 = constructor_pulley_fmul32(ctx, v1207, v1208);
                                let v1240 = constructor_output_freg(ctx, v1239);
                                let v1241 = Some(v1240);
                                // Rule at src/isa/pulley_shared/lower.isle line 1477.
                                return v1241;
                            }
                            F64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1242 = constructor_pulley_fmul64(ctx, v1207, v1208);
                                let v1243 = constructor_output_freg(ctx, v1242);
                                let v1244 = Some(v1243);
                                // Rule at src/isa/pulley_shared/lower.isle line 1478.
                                return v1244;
                            }
                            F32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1245 = constructor_pulley_vmulf32x4(ctx, v226, v227);
                                let v1246 = constructor_output_vreg(ctx, v1245);
                                let v1247 = Some(v1246);
                                // Rule at src/isa/pulley_shared/lower.isle line 1479.
                                return v1247;
                            }
                            F64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1248 = constructor_pulley_vmulf64x2(ctx, v226, v227);
                                let v1249 = constructor_output_vreg(ctx, v1248);
                                let v1250 = Some(v1249);
                                // Rule at src/isa/pulley_shared/lower.isle line 1480.
                                return v1250;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fdiv => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1251 = constructor_pulley_fdiv32(ctx, v1207, v1208);
                                let v1252 = constructor_output_freg(ctx, v1251);
                                let v1253 = Some(v1252);
                                // Rule at src/isa/pulley_shared/lower.isle line 1484.
                                return v1253;
                            }
                            F64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1254 = constructor_pulley_fdiv64(ctx, v1207, v1208);
                                let v1255 = constructor_output_freg(ctx, v1254);
                                let v1256 = Some(v1255);
                                // Rule at src/isa/pulley_shared/lower.isle line 1485.
                                return v1256;
                            }
                            F32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1257 = constructor_pulley_vdivf32x4(ctx, v226, v227);
                                let v1258 = constructor_output_vreg(ctx, v1257);
                                let v1259 = Some(v1258);
                                // Rule at src/isa/pulley_shared/lower.isle line 1486.
                                return v1259;
                            }
                            F64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1260 = constructor_pulley_vdivf64x2(ctx, v226, v227);
                                let v1261 = constructor_output_vreg(ctx, v1260);
                                let v1262 = Some(v1261);
                                // Rule at src/isa/pulley_shared/lower.isle line 1487.
                                return v1262;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fcopysign => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1209 = constructor_pulley_fcopysign32(ctx, v1207, v1208);
                                let v1210 = constructor_output_freg(ctx, v1209);
                                let v1211 = Some(v1210);
                                // Rule at src/isa/pulley_shared/lower.isle line 1455.
                                return v1211;
                            }
                            F64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1212 = constructor_pulley_fcopysign64(ctx, v1207, v1208);
                                let v1213 = constructor_output_freg(ctx, v1212);
                                let v1214 = Some(v1213);
                                // Rule at src/isa/pulley_shared/lower.isle line 1458.
                                return v1214;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fmin => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1275 = constructor_pulley_fminimum32(ctx, v1207, v1208);
                                let v1276 = constructor_output_freg(ctx, v1275);
                                let v1277 = Some(v1276);
                                // Rule at src/isa/pulley_shared/lower.isle line 1498.
                                return v1277;
                            }
                            F64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1278 = constructor_pulley_fminimum64(ctx, v1207, v1208);
                                let v1279 = constructor_output_freg(ctx, v1278);
                                let v1280 = Some(v1279);
                                // Rule at src/isa/pulley_shared/lower.isle line 1499.
                                return v1280;
                            }
                            F32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1281 = constructor_pulley_vminimumf32x4(ctx, v226, v227);
                                let v1282 = constructor_output_vreg(ctx, v1281);
                                let v1283 = Some(v1282);
                                // Rule at src/isa/pulley_shared/lower.isle line 1500.
                                return v1283;
                            }
                            F64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1284 = constructor_pulley_vminimumf64x2(ctx, v226, v227);
                                let v1285 = constructor_output_vreg(ctx, v1284);
                                let v1286 = Some(v1285);
                                // Rule at src/isa/pulley_shared/lower.isle line 1501.
                                return v1286;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fmax => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1263 = constructor_pulley_fmaximum32(ctx, v1207, v1208);
                                let v1264 = constructor_output_freg(ctx, v1263);
                                let v1265 = Some(v1264);
                                // Rule at src/isa/pulley_shared/lower.isle line 1491.
                                return v1265;
                            }
                            F64 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v1207 = constructor_put_in_freg(ctx, v160.0);
                                let v1208 = constructor_put_in_freg(ctx, v160.1);
                                let v1266 = constructor_pulley_fmaximum64(ctx, v1207, v1208);
                                let v1267 = constructor_output_freg(ctx, v1266);
                                let v1268 = Some(v1267);
                                // Rule at src/isa/pulley_shared/lower.isle line 1492.
                                return v1268;
                            }
                            F32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1269 = constructor_pulley_vmaximumf32x4(ctx, v226, v227);
                                let v1270 = constructor_output_vreg(ctx, v1269);
                                let v1271 = Some(v1270);
                                // Rule at src/isa/pulley_shared/lower.isle line 1493.
                                return v1271;
                            }
                            F64X2 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v1272 = constructor_pulley_vmaximumf64x2(ctx, v226, v227);
                                let v1273 = constructor_output_vreg(ctx, v1272);
                                let v1274 = Some(v1273);
                                // Rule at src/isa/pulley_shared/lower.isle line 1494.
                                return v1274;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Snarrow => {
                    let v160 = C::unpack_value_array_2(ctx, v159);
                    let v1513 = C::value_type(ctx, v160.0);
                    match v1513 {
                        I16X8 => {
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v1514 = constructor_pulley_vnarrow16x8_s(ctx, v226, v227);
                            let v1515 = constructor_output_vreg(ctx, v1514);
                            let v1516 = Some(v1515);
                            // Rule at src/isa/pulley_shared/lower.isle line 1657.
                            return v1516;
                        }
                        I32X4 => {
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v1517 = constructor_pulley_vnarrow32x4_s(ctx, v226, v227);
                            let v1518 = constructor_output_vreg(ctx, v1517);
                            let v1519 = Some(v1518);
                            // Rule at src/isa/pulley_shared/lower.isle line 1658.
                            return v1519;
                        }
                        I64X2 => {
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v1520 = constructor_pulley_vnarrow64x2_s(ctx, v226, v227);
                            let v1521 = constructor_output_vreg(ctx, v1520);
                            let v1522 = Some(v1521);
                            // Rule at src/isa/pulley_shared/lower.isle line 1659.
                            return v1522;
                        }
                        _ => {}
                    }
                }
                &Opcode::Unarrow => {
                    let v160 = C::unpack_value_array_2(ctx, v159);
                    let v1513 = C::value_type(ctx, v160.0);
                    match v1513 {
                        I16X8 => {
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v1523 = constructor_pulley_vnarrow16x8_u(ctx, v226, v227);
                            let v1524 = constructor_output_vreg(ctx, v1523);
                            let v1525 = Some(v1524);
                            // Rule at src/isa/pulley_shared/lower.isle line 1663.
                            return v1525;
                        }
                        I32X4 => {
                            let v226 = constructor_put_in_vreg(ctx, v160.0);
                            let v227 = constructor_put_in_vreg(ctx, v160.1);
                            let v1526 = constructor_pulley_vnarrow32x4_u(ctx, v226, v227);
                            let v1527 = constructor_output_vreg(ctx, v1526);
                            let v1528 = Some(v1527);
                            // Rule at src/isa/pulley_shared/lower.isle line 1664.
                            return v1528;
                        }
                        _ => {}
                    }
                }
                &Opcode::Uunarrow => {
                    let v160 = C::unpack_value_array_2(ctx, v159);
                    let v1513 = C::value_type(ctx, v160.0);
                    if v1513 == I64X2 {
                        let v226 = constructor_put_in_vreg(ctx, v160.0);
                        let v227 = constructor_put_in_vreg(ctx, v160.1);
                        let v1529 = constructor_pulley_vunarrow64x2_u(ctx, v226, v227);
                        let v1530 = constructor_output_vreg(ctx, v1529);
                        let v1531 = Some(v1530);
                        // Rule at src/isa/pulley_shared/lower.isle line 1668.
                        return v1531;
                    }
                }
                &Opcode::IaddPairwise => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I16X8 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v283 = constructor_pulley_vaddpairwisei16x8_s(ctx, v226, v227);
                                let v284 = constructor_output_vreg(ctx, v283);
                                let v285 = Some(v284);
                                // Rule at src/isa/pulley_shared/lower.isle line 320.
                                return v285;
                            }
                            I32X4 => {
                                let v160 = C::unpack_value_array_2(ctx, v159);
                                let v226 = constructor_put_in_vreg(ctx, v160.0);
                                let v227 = constructor_put_in_vreg(ctx, v160.1);
                                let v286 = constructor_pulley_vaddpairwisei32x4_s(ctx, v226, v227);
                                let v287 = constructor_output_vreg(ctx, v286);
                                let v288 = Some(v287);
                                // Rule at src/isa/pulley_shared/lower.isle line 321.
                                return v288;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Iconcat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I128 {
                            let v160 = C::unpack_value_array_2(ctx, v159);
                            let v1028 = C::put_in_reg(ctx, v160.0);
                            let v1029 = C::put_in_reg(ctx, v160.1);
                            let v1030 = C::value_regs(ctx, v1028, v1029);
                            let v1031 = C::output(ctx, v1030);
                            let v1032 = Some(v1031);
                            // Rule at src/isa/pulley_shared/lower.isle line 1224.
                            return v1032;
                        }
                    }
                }
                _ => {}
            }
        }
        &InstructionData::BinaryImm8 {
            opcode: ref v1538,
            arg: v1539,
            imm: v1540,
        } => {
            if let &Opcode::Extractlane = v1538 {
                let v1541 = C::value_type(ctx, v1539);
                match v1541 {
                    I8X16 => {
                        let v1543 = constructor_put_in_vreg(ctx, v1539);
                        let v1542 = C::u8_from_uimm8(ctx, v1540);
                        let v1544 = constructor_pulley_xextractv8x16(ctx, v1543, v1542);
                        let v1545 = constructor_output_xreg(ctx, v1544);
                        let v1546 = Some(v1545);
                        // Rule at src/isa/pulley_shared/lower.isle line 1680.
                        return v1546;
                    }
                    I16X8 => {
                        let v1543 = constructor_put_in_vreg(ctx, v1539);
                        let v1542 = C::u8_from_uimm8(ctx, v1540);
                        let v1547 = constructor_pulley_xextractv16x8(ctx, v1543, v1542);
                        let v1548 = constructor_output_xreg(ctx, v1547);
                        let v1549 = Some(v1548);
                        // Rule at src/isa/pulley_shared/lower.isle line 1682.
                        return v1549;
                    }
                    I32X4 => {
                        let v1543 = constructor_put_in_vreg(ctx, v1539);
                        let v1542 = C::u8_from_uimm8(ctx, v1540);
                        let v1550 = constructor_pulley_xextractv32x4(ctx, v1543, v1542);
                        let v1551 = constructor_output_xreg(ctx, v1550);
                        let v1552 = Some(v1551);
                        // Rule at src/isa/pulley_shared/lower.isle line 1684.
                        return v1552;
                    }
                    I64X2 => {
                        let v1543 = constructor_put_in_vreg(ctx, v1539);
                        let v1542 = C::u8_from_uimm8(ctx, v1540);
                        let v1553 = constructor_pulley_xextractv64x2(ctx, v1543, v1542);
                        let v1554 = constructor_output_xreg(ctx, v1553);
                        let v1555 = Some(v1554);
                        // Rule at src/isa/pulley_shared/lower.isle line 1686.
                        return v1555;
                    }
                    F32X4 => {
                        let v1543 = constructor_put_in_vreg(ctx, v1539);
                        let v1542 = C::u8_from_uimm8(ctx, v1540);
                        let v1556 = constructor_pulley_fextractv32x4(ctx, v1543, v1542);
                        let v1557 = constructor_output_freg(ctx, v1556);
                        let v1558 = Some(v1557);
                        // Rule at src/isa/pulley_shared/lower.isle line 1688.
                        return v1558;
                    }
                    F64X2 => {
                        let v1543 = constructor_put_in_vreg(ctx, v1539);
                        let v1542 = C::u8_from_uimm8(ctx, v1540);
                        let v1559 = constructor_pulley_fextractv64x2(ctx, v1543, v1542);
                        let v1560 = constructor_output_freg(ctx, v1559);
                        let v1561 = Some(v1560);
                        // Rule at src/isa/pulley_shared/lower.isle line 1690.
                        return v1561;
                    }
                    _ => {}
                }
            }
        }
        &InstructionData::Call {
            opcode: ref v106,
            args: v107,
            func_ref: v108,
        } => {
            match v106 {
                &Opcode::Call => {
                    let v110 = C::func_ref_data(ctx, v108);
                    let v109 = C::value_list_slice(ctx, v107);
                    let v114 = C::gen_call(ctx, v110.0, v110.1, v110.2, v109);
                    let v115 = Some(v114);
                    // Rule at src/isa/pulley_shared/lower.isle line 215.
                    return v115;
                }
                &Opcode::ReturnCall => {
                    let v110 = C::func_ref_data(ctx, v108);
                    let v109 = C::value_list_slice(ctx, v107);
                    let v126 = C::gen_return_call(ctx, v110.0, v110.1, v110.2, v109);
                    let v127 = Some(v126);
                    // Rule at src/isa/pulley_shared/lower.isle line 223.
                    return v127;
                }
                _ => {}
            }
        }
        &InstructionData::CallIndirect {
            opcode: ref v116,
            args: v117,
            sig_ref: v118,
        } => {
            match v116 {
                &Opcode::CallIndirect => {
                    let v119 = C::value_list_slice(ctx, v117);
                    let v120 = C::value_slice_unwrap(ctx, v119);
                    if let Some(v121) = v120 {
                        let v124 = C::gen_call_indirect(ctx, v118, v121.0, v121.1);
                        let v125 = Some(v124);
                        // Rule at src/isa/pulley_shared/lower.isle line 218.
                        return v125;
                    }
                }
                &Opcode::ReturnCallIndirect => {
                    let v119 = C::value_list_slice(ctx, v117);
                    let v120 = C::value_slice_unwrap(ctx, v119);
                    if let Some(v121) = v120 {
                        let v128 = C::gen_return_call_indirect(ctx, v118, v121.0, v121.1);
                        let v129 = Some(v128);
                        // Rule at src/isa/pulley_shared/lower.isle line 226.
                        return v129;
                    }
                }
                _ => {}
            }
        }
        &InstructionData::CondTrap {
            opcode: ref v7,
            arg: v8,
            code: ref v9,
        } => {
            match v7 {
                &Opcode::Trapz => {
                    let v10 = &constructor_lower_cond(ctx, v8);
                    let v11 = &C::cond_invert(ctx, v10);
                    let v12 = &constructor_pulley_trap_if(ctx, v11, v9);
                    let v13 = constructor_side_effect(ctx, v12);
                    let v14 = Some(v13);
                    // Rule at src/isa/pulley_shared/lower.isle line 115.
                    return v14;
                }
                &Opcode::Trapnz => {
                    let v18 = C::def_inst(ctx, v8);
                    if let Some(v19) = v18 {
                        let v20 = &C::inst_data(ctx, v19);
                        if let &InstructionData::IntCompare {
                            opcode: ref v21,
                            args: ref v22,
                            cond: ref v23,
                        } = v20 {
                            if let &Opcode::Icmp = v21 {
                                match v23 {
                                    &IntCC::UnsignedGreaterThan => {
                                        let v24 = C::unpack_value_array_2(ctx, v22);
                                        let v28 = C::def_inst(ctx, v24.1);
                                        if let Some(v29) = v28 {
                                            let v30 = &C::inst_data(ctx, v29);
                                            if let &InstructionData::Binary {
                                                opcode: ref v31,
                                                args: ref v32,
                                            } = v30 {
                                                if let &Opcode::Isub = v31 {
                                                    let v33 = C::unpack_value_array_2(ctx, v32);
                                                    let v36 = C::def_inst(ctx, v33.1);
                                                    if let Some(v37) = v36 {
                                                        let v38 = &C::inst_data(ctx, v37);
                                                        if let &InstructionData::UnaryImm {
                                                            opcode: ref v39,
                                                            imm: v40,
                                                        } = v38 {
                                                            if let &Opcode::Iconst = v39 {
                                                                let v41 = C::uimm8(ctx, v40);
                                                                if let Some(v42) = v41 {
                                                                    let v43 = &C::pointer_width(ctx);
                                                                    match v43 {
                                                                        &PointerWidth::PointerWidth32 => {
                                                                            let v27 = C::value_type(ctx, v24.0);
                                                                            if v27 == I32 {
                                                                                let v44 = &constructor_emit_xbc32(ctx, v24.0, v33.0, v42, v9);
                                                                                let v45 = constructor_side_effect(ctx, v44);
                                                                                let v46 = Some(v45);
                                                                                // Rule at src/isa/pulley_shared/lower.isle line 133.
                                                                                return v46;
                                                                            }
                                                                        }
                                                                        &PointerWidth::PointerWidth64 => {
                                                                            let v47 = C::def_inst(ctx, v24.0);
                                                                            if let Some(v48) = v47 {
                                                                                let v49 = &C::inst_data(ctx, v48);
                                                                                if let &InstructionData::Unary {
                                                                                    opcode: ref v66,
                                                                                    arg: v67,
                                                                                } = v49 {
                                                                                    if let &Opcode::Uextend = v66 {
                                                                                        let v68 = C::value_type(ctx, v67);
                                                                                        if v68 == I32 {
                                                                                            let v69 = &constructor_emit_xbc32(ctx, v67, v33.0, v42, v9);
                                                                                            let v70 = constructor_side_effect(ctx, v69);
                                                                                            let v71 = Some(v70);
                                                                                            // Rule at src/isa/pulley_shared/lower.isle line 141.
                                                                                            return v71;
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                        _ => {}
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    &IntCC::UnsignedGreaterThanOrEqual => {
                                        let v43 = &C::pointer_width(ctx);
                                        match v43 {
                                            &PointerWidth::PointerWidth32 => {
                                                let v24 = C::unpack_value_array_2(ctx, v22);
                                                let v27 = C::value_type(ctx, v24.0);
                                                if v27 == I32 {
                                                    let v78 = &constructor_emit_xbc32_strict(ctx, v24.0, v24.1, v9);
                                                    let v79 = constructor_side_effect(ctx, v78);
                                                    let v80 = Some(v79);
                                                    // Rule at src/isa/pulley_shared/lower.isle line 149.
                                                    return v80;
                                                }
                                            }
                                            &PointerWidth::PointerWidth64 => {
                                                let v24 = C::unpack_value_array_2(ctx, v22);
                                                let v47 = C::def_inst(ctx, v24.0);
                                                if let Some(v48) = v47 {
                                                    let v49 = &C::inst_data(ctx, v48);
                                                    if let &InstructionData::Unary {
                                                        opcode: ref v66,
                                                        arg: v67,
                                                    } = v49 {
                                                        if let &Opcode::Uextend = v66 {
                                                            let v68 = C::value_type(ctx, v67);
                                                            if v68 == I32 {
                                                                let v81 = &constructor_emit_xbc32_strict(ctx, v67, v24.1, v9);
                                                                let v82 = constructor_side_effect(ctx, v81);
                                                                let v83 = Some(v82);
                                                                // Rule at src/isa/pulley_shared/lower.isle line 153.
                                                                return v83;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                    &IntCC::UnsignedLessThan => {
                                        let v43 = &C::pointer_width(ctx);
                                        match v43 {
                                            &PointerWidth::PointerWidth32 => {
                                                let v24 = C::unpack_value_array_2(ctx, v22);
                                                let v47 = C::def_inst(ctx, v24.0);
                                                if let Some(v48) = v47 {
                                                    let v49 = &C::inst_data(ctx, v48);
                                                    if let &InstructionData::Binary {
                                                        opcode: ref v50,
                                                        args: ref v51,
                                                    } = v49 {
                                                        if let &Opcode::Isub = v50 {
                                                            let v52 = C::unpack_value_array_2(ctx, v51);
                                                            let v55 = C::def_inst(ctx, v52.1);
                                                            if let Some(v56) = v55 {
                                                                let v57 = &C::inst_data(ctx, v56);
                                                                if let &InstructionData::UnaryImm {
                                                                    opcode: ref v58,
                                                                    imm: v59,
                                                                } = v57 {
                                                                    if let &Opcode::Iconst = v58 {
                                                                        let v60 = C::uimm8(ctx, v59);
                                                                        if let Some(v61) = v60 {
                                                                            let v62 = C::value_type(ctx, v24.1);
                                                                            if v62 == I32 {
                                                                                let v63 = &constructor_emit_xbc32(ctx, v24.1, v52.0, v61, v9);
                                                                                let v64 = constructor_side_effect(ctx, v63);
                                                                                let v65 = Some(v64);
                                                                                // Rule at src/isa/pulley_shared/lower.isle line 137.
                                                                                return v65;
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            &PointerWidth::PointerWidth64 => {
                                                let v24 = C::unpack_value_array_2(ctx, v22);
                                                let v28 = C::def_inst(ctx, v24.1);
                                                if let Some(v29) = v28 {
                                                    let v30 = &C::inst_data(ctx, v29);
                                                    if let &InstructionData::Unary {
                                                        opcode: ref v72,
                                                        arg: v73,
                                                    } = v30 {
                                                        if let &Opcode::Uextend = v72 {
                                                            let v47 = C::def_inst(ctx, v24.0);
                                                            if let Some(v48) = v47 {
                                                                let v49 = &C::inst_data(ctx, v48);
                                                                if let &InstructionData::Binary {
                                                                    opcode: ref v50,
                                                                    args: ref v51,
                                                                } = v49 {
                                                                    if let &Opcode::Isub = v50 {
                                                                        let v52 = C::unpack_value_array_2(ctx, v51);
                                                                        let v55 = C::def_inst(ctx, v52.1);
                                                                        if let Some(v56) = v55 {
                                                                            let v57 = &C::inst_data(ctx, v56);
                                                                            if let &InstructionData::UnaryImm {
                                                                                opcode: ref v58,
                                                                                imm: v59,
                                                                            } = v57 {
                                                                                if let &Opcode::Iconst = v58 {
                                                                                    let v60 = C::uimm8(ctx, v59);
                                                                                    if let Some(v61) = v60 {
                                                                                        let v74 = C::value_type(ctx, v73);
                                                                                        if v74 == I32 {
                                                                                            let v75 = &constructor_emit_xbc32(ctx, v73, v52.0, v61, v9);
                                                                                            let v76 = constructor_side_effect(ctx, v75);
                                                                                            let v77 = Some(v76);
                                                                                            // Rule at src/isa/pulley_shared/lower.isle line 145.
                                                                                            return v77;
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                    &IntCC::UnsignedLessThanOrEqual => {
                                        let v43 = &C::pointer_width(ctx);
                                        match v43 {
                                            &PointerWidth::PointerWidth32 => {
                                                let v24 = C::unpack_value_array_2(ctx, v22);
                                                let v62 = C::value_type(ctx, v24.1);
                                                if v62 == I32 {
                                                    let v84 = &constructor_emit_xbc32_strict(ctx, v24.1, v24.0, v9);
                                                    let v85 = constructor_side_effect(ctx, v84);
                                                    let v86 = Some(v85);
                                                    // Rule at src/isa/pulley_shared/lower.isle line 157.
                                                    return v86;
                                                }
                                            }
                                            &PointerWidth::PointerWidth64 => {
                                                let v24 = C::unpack_value_array_2(ctx, v22);
                                                let v28 = C::def_inst(ctx, v24.1);
                                                if let Some(v29) = v28 {
                                                    let v30 = &C::inst_data(ctx, v29);
                                                    if let &InstructionData::Unary {
                                                        opcode: ref v72,
                                                        arg: v73,
                                                    } = v30 {
                                                        if let &Opcode::Uextend = v72 {
                                                            let v74 = C::value_type(ctx, v73);
                                                            if v74 == I32 {
                                                                let v87 = &constructor_emit_xbc32_strict(ctx, v73, v24.0, v9);
                                                                let v88 = constructor_side_effect(ctx, v87);
                                                                let v89 = Some(v88);
                                                                // Rule at src/isa/pulley_shared/lower.isle line 161.
                                                                return v89;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            _ => {}
                                        }
                                    }
                                    _ => {}
                                }
                            }
                        }
                    }
                    let v10 = &constructor_lower_cond(ctx, v8);
                    let v15 = &constructor_pulley_trap_if(ctx, v10, v9);
                    let v16 = constructor_side_effect(ctx, v15);
                    let v17 = Some(v16);
                    // Rule at src/isa/pulley_shared/lower.isle line 118.
                    return v17;
                }
                _ => {}
            }
        }
        &InstructionData::FloatCompare {
            opcode: ref v830,
            args: ref v831,
            cond: ref v832,
        } => {
            if let &Opcode::Fcmp = v830 {
                let v833 = C::unpack_value_array_2(ctx, v831);
                let v836 = C::value_type(ctx, v833.1);
                let v842 = C::ty_vec128(ctx, v836);
                if let Some(v843) = v842 {
                    let v844 = constructor_lower_vfcmp(ctx, v843, v832, v833.0, v833.1);
                    let v845 = constructor_output_vreg(ctx, v844);
                    let v846 = Some(v845);
                    // Rule at src/isa/pulley_shared/lower.isle line 892.
                    return v846;
                }
                let v837 = C::ty_scalar_float(ctx, v836);
                if let Some(v838) = v837 {
                    let v839 = constructor_lower_fcmp(ctx, v838, v832, v833.0, v833.1);
                    let v840 = constructor_output_xreg(ctx, v839);
                    let v841 = Some(v840);
                    // Rule at src/isa/pulley_shared/lower.isle line 889.
                    return v841;
                }
            }
        }
        &InstructionData::IntAddTrap {
            opcode: ref v1045,
            args: ref v1046,
            code: ref v1047,
        } => {
            if let &Opcode::UaddOverflowTrap = v1045 {
                let v130 = C::first_result(ctx, arg0);
                if let Some(v131) = v130 {
                    let v132 = C::value_type(ctx, v131);
                    match v132 {
                        I32 => {
                            let v1048 = C::unpack_value_array_2(ctx, v1046);
                            let v1051 = constructor_put_in_xreg(ctx, v1048.0);
                            let v1052 = constructor_put_in_xreg(ctx, v1048.1);
                            let v1053 = constructor_pulley_xadd32_uoverflow_trap(ctx, v1051, v1052, v1047);
                            let v1054 = constructor_output_xreg(ctx, v1053);
                            let v1055 = Some(v1054);
                            // Rule at src/isa/pulley_shared/lower.isle line 1236.
                            return v1055;
                        }
                        I64 => {
                            let v1048 = C::unpack_value_array_2(ctx, v1046);
                            let v1051 = constructor_put_in_xreg(ctx, v1048.0);
                            let v1052 = constructor_put_in_xreg(ctx, v1048.1);
                            let v1056 = constructor_pulley_xadd64_uoverflow_trap(ctx, v1051, v1052, v1047);
                            let v1057 = constructor_output_xreg(ctx, v1056);
                            let v1058 = Some(v1057);
                            // Rule at src/isa/pulley_shared/lower.isle line 1239.
                            return v1058;
                        }
                        _ => {}
                    }
                }
            }
        }
        &InstructionData::IntCompare {
            opcode: ref v812,
            args: ref v813,
            cond: ref v814,
        } => {
            if let &Opcode::Icmp = v812 {
                let v815 = C::unpack_value_array_2(ctx, v813);
                let v824 = C::value_type(ctx, v815.0);
                let v825 = C::ty_vec128(ctx, v824);
                if let Some(v826) = v825 {
                    let v827 = constructor_lower_vcmp(ctx, v826, v814, v815.0, v815.1);
                    let v828 = constructor_output_vreg(ctx, v827);
                    let v829 = Some(v828);
                    // Rule at src/isa/pulley_shared/lower.isle line 848.
                    return v829;
                }
                let v818 = C::value_type(ctx, v815.1);
                let v819 = C::ty_int(ctx, v818);
                if let Some(v820) = v819 {
                    let v821 = constructor_lower_icmp(ctx, v820, v814, v815.0, v815.1);
                    let v822 = constructor_output_xreg(ctx, v821);
                    let v823 = Some(v822);
                    // Rule at src/isa/pulley_shared/lower.isle line 739.
                    return v823;
                }
            }
        }
        &InstructionData::Load {
            opcode: ref v847,
            arg: v848,
            flags: v849,
            offset: v850,
        } => {
            match v847 {
                &Opcode::Load => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I128 {
                            let v861 = C::offset32_to_i32(ctx, v850);
                            let v863 = C::s32_add_fallible(ctx, v861, 8_i32);
                            if let Some(v864) = v863 {
                                let v857 = &constructor_amode(ctx, v848, v850);
                                let v866 = constructor_pulley_xload(ctx, v857, I64, v849, &ExtKind::None);
                                let v867 = C::i32_to_offset32(ctx, v864);
                                let v868 = &constructor_amode(ctx, v848, v867);
                                let v869 = constructor_pulley_xload(ctx, v868, I64, v849, &ExtKind::None);
                                let v870 = C::xreg_to_reg(ctx, v866);
                                let v871 = C::xreg_to_reg(ctx, v869);
                                let v872 = C::value_regs(ctx, v870, v871);
                                let v873 = C::output(ctx, v872);
                                let v874 = Some(v873);
                                // Rule at src/isa/pulley_shared/lower.isle line 960.
                                return v874;
                            }
                        }
                        let v614 = C::ty_vec128(ctx, v132);
                        if let Some(v615) = v614 {
                            let v857 = &constructor_amode(ctx, v848, v850);
                            let v916 = constructor_pulley_vload(ctx, v857, v615, v849, &VExtKind::None);
                            let v917 = constructor_output_vreg(ctx, v916);
                            let v918 = Some(v917);
                            // Rule at src/isa/pulley_shared/lower.isle line 1002.
                            return v918;
                        }
                        let v855 = C::ty_scalar_float(ctx, v132);
                        if let Some(v856) = v855 {
                            let v857 = &constructor_amode(ctx, v848, v850);
                            let v858 = constructor_pulley_fload(ctx, v857, v856, v849);
                            let v859 = constructor_output_freg(ctx, v858);
                            let v860 = Some(v859);
                            // Rule at src/isa/pulley_shared/lower.isle line 957.
                            return v860;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v156 = C::fits_in_64(ctx, v155);
                            if let Some(v157) = v156 {
                                let v852 = constructor_gen_xload(ctx, v848, v850, v849, v157, &ExtKind::None);
                                let v853 = constructor_output_xreg(ctx, v852);
                                let v854 = Some(v853);
                                // Rule at src/isa/pulley_shared/lower.isle line 954.
                                return v854;
                            }
                        }
                    }
                }
                &Opcode::Uload8 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v889 = constructor_gen_xload(ctx, v848, v850, v849, I8, &ExtKind::Zero64);
                            let v890 = constructor_output_xreg(ctx, v889);
                            let v891 = Some(v890);
                            // Rule at src/isa/pulley_shared/lower.isle line 975.
                            return v891;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v877 = constructor_gen_xload(ctx, v848, v850, v849, I8, &ExtKind::Zero32);
                                let v878 = constructor_output_xreg(ctx, v877);
                                let v879 = Some(v878);
                                // Rule at src/isa/pulley_shared/lower.isle line 966.
                                return v879;
                            }
                        }
                    }
                }
                &Opcode::Sload8 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v906 = constructor_gen_xload(ctx, v848, v850, v849, I8, &ExtKind::Sign64);
                            let v907 = constructor_output_xreg(ctx, v906);
                            let v908 = Some(v907);
                            // Rule at src/isa/pulley_shared/lower.isle line 993.
                            return v908;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v899 = constructor_gen_xload(ctx, v848, v850, v849, I8, &ExtKind::Sign32);
                                let v900 = constructor_output_xreg(ctx, v899);
                                let v901 = Some(v900);
                                // Rule at src/isa/pulley_shared/lower.isle line 984.
                                return v901;
                            }
                        }
                    }
                }
                &Opcode::Uload16 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v892 = constructor_gen_xload(ctx, v848, v850, v849, I16, &ExtKind::Zero64);
                            let v893 = constructor_output_xreg(ctx, v892);
                            let v894 = Some(v893);
                            // Rule at src/isa/pulley_shared/lower.isle line 978.
                            return v894;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v881 = constructor_gen_xload(ctx, v848, v850, v849, I16, &ExtKind::Zero32);
                                let v882 = constructor_output_xreg(ctx, v881);
                                let v883 = Some(v882);
                                // Rule at src/isa/pulley_shared/lower.isle line 969.
                                return v883;
                            }
                        }
                    }
                }
                &Opcode::Sload16 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v909 = constructor_gen_xload(ctx, v848, v850, v849, I16, &ExtKind::Sign64);
                            let v910 = constructor_output_xreg(ctx, v909);
                            let v911 = Some(v910);
                            // Rule at src/isa/pulley_shared/lower.isle line 996.
                            return v911;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v902 = constructor_gen_xload(ctx, v848, v850, v849, I16, &ExtKind::Sign32);
                                let v903 = constructor_output_xreg(ctx, v902);
                                let v904 = Some(v903);
                                // Rule at src/isa/pulley_shared/lower.isle line 987.
                                return v904;
                            }
                        }
                    }
                }
                &Opcode::Uload32 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v895 = constructor_gen_xload(ctx, v848, v850, v849, I32, &ExtKind::Zero64);
                            let v896 = constructor_output_xreg(ctx, v895);
                            let v897 = Some(v896);
                            // Rule at src/isa/pulley_shared/lower.isle line 981.
                            return v897;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v885 = constructor_gen_xload(ctx, v848, v850, v849, I32, &ExtKind::None);
                                let v886 = constructor_output_xreg(ctx, v885);
                                let v887 = Some(v886);
                                // Rule at src/isa/pulley_shared/lower.isle line 972.
                                return v887;
                            }
                        }
                    }
                }
                &Opcode::Sload32 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v912 = constructor_gen_xload(ctx, v848, v850, v849, I32, &ExtKind::Sign64);
                            let v913 = constructor_output_xreg(ctx, v912);
                            let v914 = Some(v913);
                            // Rule at src/isa/pulley_shared/lower.isle line 999.
                            return v914;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v885 = constructor_gen_xload(ctx, v848, v850, v849, I32, &ExtKind::None);
                                let v886 = constructor_output_xreg(ctx, v885);
                                let v887 = Some(v886);
                                // Rule at src/isa/pulley_shared/lower.isle line 990.
                                return v887;
                            }
                        }
                    }
                }
                &Opcode::Uload8x8 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v857 = &constructor_amode(ctx, v848, v850);
                        let v132 = C::value_type(ctx, v131);
                        let v924 = constructor_pulley_vload(ctx, v857, v132, v849, &VExtKind::U8x8);
                        let v925 = constructor_output_vreg(ctx, v924);
                        let v926 = Some(v925);
                        // Rule at src/isa/pulley_shared/lower.isle line 1008.
                        return v926;
                    }
                }
                &Opcode::Sload8x8 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v857 = &constructor_amode(ctx, v848, v850);
                        let v132 = C::value_type(ctx, v131);
                        let v920 = constructor_pulley_vload(ctx, v857, v132, v849, &VExtKind::S8x8);
                        let v921 = constructor_output_vreg(ctx, v920);
                        let v922 = Some(v921);
                        // Rule at src/isa/pulley_shared/lower.isle line 1005.
                        return v922;
                    }
                }
                &Opcode::Uload16x4 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v857 = &constructor_amode(ctx, v848, v850);
                        let v132 = C::value_type(ctx, v131);
                        let v932 = constructor_pulley_vload(ctx, v857, v132, v849, &VExtKind::U16x4);
                        let v933 = constructor_output_vreg(ctx, v932);
                        let v934 = Some(v933);
                        // Rule at src/isa/pulley_shared/lower.isle line 1014.
                        return v934;
                    }
                }
                &Opcode::Sload16x4 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v857 = &constructor_amode(ctx, v848, v850);
                        let v132 = C::value_type(ctx, v131);
                        let v928 = constructor_pulley_vload(ctx, v857, v132, v849, &VExtKind::S16x4);
                        let v929 = constructor_output_vreg(ctx, v928);
                        let v930 = Some(v929);
                        // Rule at src/isa/pulley_shared/lower.isle line 1011.
                        return v930;
                    }
                }
                &Opcode::Uload32x2 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v857 = &constructor_amode(ctx, v848, v850);
                        let v132 = C::value_type(ctx, v131);
                        let v940 = constructor_pulley_vload(ctx, v857, v132, v849, &VExtKind::U32x2);
                        let v941 = constructor_output_vreg(ctx, v940);
                        let v942 = Some(v941);
                        // Rule at src/isa/pulley_shared/lower.isle line 1020.
                        return v942;
                    }
                }
                &Opcode::Sload32x2 => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v857 = &constructor_amode(ctx, v848, v850);
                        let v132 = C::value_type(ctx, v131);
                        let v936 = constructor_pulley_vload(ctx, v857, v132, v849, &VExtKind::S32x2);
                        let v937 = constructor_output_vreg(ctx, v936);
                        let v938 = Some(v937);
                        // Rule at src/isa/pulley_shared/lower.isle line 1017.
                        return v938;
                    }
                }
                _ => {}
            }
        }
        &InstructionData::LoadNoOffset {
            opcode: ref v1082,
            arg: v1083,
            flags: v1084,
        } => {
            if let &Opcode::Bitcast = v1082 {
                let v130 = C::first_result(ctx, arg0);
                if let Some(v131) = v130 {
                    let v132 = C::value_type(ctx, v131);
                    let v1085 = C::value_type(ctx, v1083);
                    if v132 == v1085 {
                        let v1102 = constructor_output_value(ctx, v1083);
                        let v1103 = Some(v1102);
                        // Rule at src/isa/pulley_shared/lower.isle line 1339.
                        return v1103;
                    }
                    let v614 = C::ty_vec128(ctx, v132);
                    if let Some(v615) = v614 {
                        let v1100 = C::ty_vec128(ctx, v1085);
                        if let Some(v1101) = v1100 {
                            let v1102 = constructor_output_value(ctx, v1083);
                            let v1103 = Some(v1102);
                            // Rule at src/isa/pulley_shared/lower.isle line 1336.
                            return v1103;
                        }
                    }
                    match v132 {
                        I32 => {
                            if v1085 == F32 {
                                let v1093 = constructor_put_in_freg(ctx, v1083);
                                let v1094 = constructor_pulley_bitcast_int_from_float_32(ctx, v1093);
                                let v1095 = constructor_output_xreg(ctx, v1094);
                                let v1096 = Some(v1095);
                                // Rule at src/isa/pulley_shared/lower.isle line 1330.
                                return v1096;
                            }
                        }
                        I64 => {
                            if v1085 == F64 {
                                let v1093 = constructor_put_in_freg(ctx, v1083);
                                let v1097 = constructor_pulley_bitcast_int_from_float_64(ctx, v1093);
                                let v1098 = constructor_output_xreg(ctx, v1097);
                                let v1099 = Some(v1098);
                                // Rule at src/isa/pulley_shared/lower.isle line 1333.
                                return v1099;
                            }
                        }
                        F32 => {
                            if v1085 == I32 {
                                let v1086 = constructor_put_in_xreg(ctx, v1083);
                                let v1087 = constructor_pulley_bitcast_float_from_int_32(ctx, v1086);
                                let v1088 = constructor_output_freg(ctx, v1087);
                                let v1089 = Some(v1088);
                                // Rule at src/isa/pulley_shared/lower.isle line 1324.
                                return v1089;
                            }
                        }
                        F64 => {
                            if v1085 == I64 {
                                let v1086 = constructor_put_in_xreg(ctx, v1083);
                                let v1090 = constructor_pulley_bitcast_float_from_int_64(ctx, v1086);
                                let v1091 = constructor_output_freg(ctx, v1090);
                                let v1092 = Some(v1091);
                                // Rule at src/isa/pulley_shared/lower.isle line 1327.
                                return v1092;
                            }
                        }
                        _ => {}
                    }
                }
            }
        }
        &InstructionData::MultiAry {
            opcode: ref v101,
            args: v102,
        } => {
            if let &Opcode::Return = v101 {
                let v103 = C::value_list_slice(ctx, v102);
                let v104 = constructor_lower_return(ctx, v103);
                let v105 = Some(v104);
                // Rule at src/isa/pulley_shared/lower.isle line 210.
                return v105;
            }
        }
        &InstructionData::NullAry {
            opcode: ref v90,
        } => {
            match v90 {
                &Opcode::GetFramePointer => {
                    let v95 = constructor_pulley_xmov_fp(ctx);
                    let v96 = constructor_output_xreg(ctx, v95);
                    let v97 = Some(v96);
                    // Rule at src/isa/pulley_shared/lower.isle line 201.
                    return v97;
                }
                &Opcode::GetStackPointer => {
                    let v91 = C::sp_reg(ctx);
                    let v92 = constructor_pulley_get_special(ctx, v91);
                    let v93 = constructor_output_xreg(ctx, v92);
                    let v94 = Some(v93);
                    // Rule at src/isa/pulley_shared/lower.isle line 196.
                    return v94;
                }
                &Opcode::GetReturnAddress => {
                    let v98 = constructor_pulley_xmov_lr(ctx);
                    let v99 = constructor_output_xreg(ctx, v98);
                    let v100 = Some(v99);
                    // Rule at src/isa/pulley_shared/lower.isle line 205.
                    return v100;
                }
                _ => {}
            }
        }
        &InstructionData::Shuffle {
            opcode: ref v1614,
            args: ref v1615,
            imm: v1616,
        } => {
            if let &Opcode::Shuffle = v1614 {
                let v130 = C::first_result(ctx, arg0);
                if let Some(v131) = v130 {
                    let v132 = C::value_type(ctx, v131);
                    if v132 == I8X16 {
                        let v1620 = C::u128_from_immediate(ctx, v1616);
                        if let Some(v1621) = v1620 {
                            let v1617 = C::unpack_value_array_2(ctx, v1615);
                            let v1622 = constructor_put_in_vreg(ctx, v1617.0);
                            let v1623 = constructor_put_in_vreg(ctx, v1617.1);
                            let v1624 = constructor_pulley_vshuffle(ctx, v1622, v1623, v1621);
                            let v1625 = constructor_output_vreg(ctx, v1624);
                            let v1626 = Some(v1625);
                            // Rule at src/isa/pulley_shared/lower.isle line 1729.
                            return v1626;
                        }
                    }
                }
            }
        }
        &InstructionData::StackLoad {
            opcode: ref v992,
            stack_slot: v993,
            offset: v994,
        } => {
            if let &Opcode::StackAddr = v992 {
                let v995 = constructor_lower_stack_addr(ctx, v993, v994);
                let v996 = constructor_output_xreg(ctx, v995);
                let v997 = Some(v996);
                // Rule at src/isa/pulley_shared/lower.isle line 1183.
                return v997;
            }
        }
        &InstructionData::Store {
            opcode: ref v943,
            args: ref v944,
            flags: v945,
            offset: v946,
        } => {
            match v943 {
                &Opcode::Store => {
                    let v947 = C::unpack_value_array_2(ctx, v944);
                    let v950 = C::value_type(ctx, v947.0);
                    if v950 == I128 {
                        let v980 = C::put_in_regs(ctx, v947.0);
                        let v981 = C::value_regs_get(ctx, v980, 0x0_usize);
                        let v982 = C::xreg_new(ctx, v981);
                        let v983 = C::value_regs_get(ctx, v980, 0x1_usize);
                        let v984 = C::xreg_new(ctx, v983);
                        let v985 = constructor_put_in_xreg(ctx, v947.1);
                        let v988 = Amode::RegOffset {
                            base: v985,
                            offset: 0_i32,
                        };
                        let v986 = Amode::RegOffset {
                            base: v985,
                            offset: 8_i32,
                        };
                        let v989 = &constructor_emit_store_i128(ctx, v945, v982, v984, &v988, &v986);
                        let v990 = constructor_side_effect(ctx, v989);
                        let v991 = Some(v990);
                        // Rule at src/isa/pulley_shared/lower.isle line 1141.
                        return v991;
                    }
                    let v974 = C::ty_vec128(ctx, v950);
                    if let Some(v975) = v974 {
                        let v960 = &constructor_amode(ctx, v947.1, v946);
                        let v976 = constructor_put_in_vreg(ctx, v947.0);
                        let v977 = &constructor_pulley_vstore(ctx, v960, v976, v975, v945);
                        let v978 = constructor_side_effect(ctx, v977);
                        let v979 = Some(v978);
                        // Rule at src/isa/pulley_shared/lower.isle line 1136.
                        return v979;
                    }
                    let v958 = C::ty_scalar_float(ctx, v950);
                    if let Some(v959) = v958 {
                        let v960 = &constructor_amode(ctx, v947.1, v946);
                        let v961 = constructor_put_in_freg(ctx, v947.0);
                        let v962 = &constructor_pulley_fstore(ctx, v960, v961, v959, v945);
                        let v963 = constructor_side_effect(ctx, v962);
                        let v964 = Some(v963);
                        // Rule at src/isa/pulley_shared/lower.isle line 1124.
                        return v964;
                    }
                    let v951 = C::ty_int(ctx, v950);
                    if let Some(v952) = v951 {
                        let v953 = C::fits_in_64(ctx, v952);
                        if let Some(v954) = v953 {
                            let v955 = &constructor_gen_xstore(ctx, v947.0, v947.1, v946, v945, v954);
                            let v956 = constructor_side_effect(ctx, v955);
                            let v957 = Some(v956);
                            // Rule at src/isa/pulley_shared/lower.isle line 1121.
                            return v957;
                        }
                    }
                }
                &Opcode::Istore8 => {
                    let v947 = C::unpack_value_array_2(ctx, v944);
                    let v965 = &constructor_gen_xstore(ctx, v947.0, v947.1, v946, v945, I8);
                    let v966 = constructor_side_effect(ctx, v965);
                    let v967 = Some(v966);
                    // Rule at src/isa/pulley_shared/lower.isle line 1127.
                    return v967;
                }
                &Opcode::Istore16 => {
                    let v947 = C::unpack_value_array_2(ctx, v944);
                    let v968 = &constructor_gen_xstore(ctx, v947.0, v947.1, v946, v945, I16);
                    let v969 = constructor_side_effect(ctx, v968);
                    let v970 = Some(v969);
                    // Rule at src/isa/pulley_shared/lower.isle line 1130.
                    return v970;
                }
                &Opcode::Istore32 => {
                    let v947 = C::unpack_value_array_2(ctx, v944);
                    let v971 = &constructor_gen_xstore(ctx, v947.0, v947.1, v946, v945, I32);
                    let v972 = constructor_side_effect(ctx, v971);
                    let v973 = Some(v972);
                    // Rule at src/isa/pulley_shared/lower.isle line 1133.
                    return v973;
                }
                _ => {}
            }
        }
        &InstructionData::Ternary {
            opcode: ref v674,
            args: ref v675,
        } => {
            match v674 {
                &Opcode::Select => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        let v614 = C::ty_vec128(ctx, v132);
                        if let Some(v615) = v614 {
                            let v676 = C::unpack_value_array_3(ctx, v675);
                            let v1059 = &constructor_lower_cond(ctx, v676.0);
                            let v1060 = constructor_emit_cond(ctx, v1059);
                            let v1077 = constructor_put_in_vreg(ctx, v676.1);
                            let v1078 = constructor_put_in_vreg(ctx, v676.2);
                            let v1079 = constructor_pulley_vselect(ctx, v1060, v1077, v1078);
                            let v1080 = constructor_output_vreg(ctx, v1079);
                            let v1081 = Some(v1080);
                            // Rule at src/isa/pulley_shared/lower.isle line 1256.
                            return v1081;
                        }
                        match v132 {
                            I64 => {
                                let v676 = C::unpack_value_array_3(ctx, v675);
                                let v1059 = &constructor_lower_cond(ctx, v676.0);
                                let v1060 = constructor_emit_cond(ctx, v1059);
                                let v1061 = constructor_put_in_xreg(ctx, v676.1);
                                let v1062 = constructor_put_in_xreg(ctx, v676.2);
                                let v1066 = constructor_pulley_xselect64(ctx, v1060, v1061, v1062);
                                let v1067 = constructor_output_xreg(ctx, v1066);
                                let v1068 = Some(v1067);
                                // Rule at src/isa/pulley_shared/lower.isle line 1247.
                                return v1068;
                            }
                            F32 => {
                                let v676 = C::unpack_value_array_3(ctx, v675);
                                let v1059 = &constructor_lower_cond(ctx, v676.0);
                                let v1060 = constructor_emit_cond(ctx, v1059);
                                let v1069 = constructor_put_in_freg(ctx, v676.1);
                                let v1070 = constructor_put_in_freg(ctx, v676.2);
                                let v1071 = constructor_pulley_fselect32(ctx, v1060, v1069, v1070);
                                let v1072 = constructor_output_freg(ctx, v1071);
                                let v1073 = Some(v1072);
                                // Rule at src/isa/pulley_shared/lower.isle line 1250.
                                return v1073;
                            }
                            F64 => {
                                let v676 = C::unpack_value_array_3(ctx, v675);
                                let v1059 = &constructor_lower_cond(ctx, v676.0);
                                let v1060 = constructor_emit_cond(ctx, v1059);
                                let v1069 = constructor_put_in_freg(ctx, v676.1);
                                let v1070 = constructor_put_in_freg(ctx, v676.2);
                                let v1074 = constructor_pulley_fselect64(ctx, v1060, v1069, v1070);
                                let v1075 = constructor_output_freg(ctx, v1074);
                                let v1076 = Some(v1075);
                                // Rule at src/isa/pulley_shared/lower.isle line 1253.
                                return v1076;
                            }
                            _ => {}
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v676 = C::unpack_value_array_3(ctx, v675);
                                let v1059 = &constructor_lower_cond(ctx, v676.0);
                                let v1060 = constructor_emit_cond(ctx, v1059);
                                let v1061 = constructor_put_in_xreg(ctx, v676.1);
                                let v1062 = constructor_put_in_xreg(ctx, v676.2);
                                let v1063 = constructor_pulley_xselect32(ctx, v1060, v1061, v1062);
                                let v1064 = constructor_output_xreg(ctx, v1063);
                                let v1065 = Some(v1064);
                                // Rule at src/isa/pulley_shared/lower.isle line 1244.
                                return v1065;
                            }
                        }
                    }
                }
                &Opcode::Bitselect => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        let v614 = C::ty_vec128(ctx, v132);
                        if let Some(v615) = v614 {
                            let v676 = C::unpack_value_array_3(ctx, v675);
                            let v680 = constructor_put_in_vreg(ctx, v676.0);
                            let v681 = constructor_put_in_vreg(ctx, v676.1);
                            let v682 = constructor_put_in_vreg(ctx, v676.2);
                            let v683 = constructor_pulley_vbitselect128(ctx, v680, v681, v682);
                            let v684 = constructor_output_vreg(ctx, v683);
                            let v685 = Some(v684);
                            // Rule at src/isa/pulley_shared/lower.isle line 655.
                            return v685;
                        }
                    }
                }
                &Opcode::Fma => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32X4 => {
                                let v676 = C::unpack_value_array_3(ctx, v675);
                                let v680 = constructor_put_in_vreg(ctx, v676.0);
                                let v681 = constructor_put_in_vreg(ctx, v676.1);
                                let v682 = constructor_put_in_vreg(ctx, v676.2);
                                let v1630 = constructor_pulley_vfma32x4(ctx, v680, v681, v682);
                                let v1631 = constructor_output_vreg(ctx, v1630);
                                let v1632 = Some(v1631);
                                // Rule at src/isa/pulley_shared/lower.isle line 1738.
                                return v1632;
                            }
                            F64X2 => {
                                let v676 = C::unpack_value_array_3(ctx, v675);
                                let v680 = constructor_put_in_vreg(ctx, v676.0);
                                let v681 = constructor_put_in_vreg(ctx, v676.1);
                                let v682 = constructor_put_in_vreg(ctx, v676.2);
                                let v1633 = constructor_pulley_vfma64x2(ctx, v680, v681, v682);
                                let v1634 = constructor_output_vreg(ctx, v1633);
                                let v1635 = Some(v1634);
                                // Rule at src/isa/pulley_shared/lower.isle line 1739.
                                return v1635;
                            }
                            _ => {}
                        }
                    }
                }
                _ => {}
            }
        }
        &InstructionData::TernaryImm8 {
            opcode: ref v1562,
            args: ref v1563,
            imm: v1564,
        } => {
            if let &Opcode::Insertlane = v1562 {
                let v1565 = C::unpack_value_array_2(ctx, v1563);
                let v1568 = C::value_type(ctx, v1565.0);
                match v1568 {
                    I8X16 => {
                        let v1570 = constructor_put_in_vreg(ctx, v1565.0);
                        let v1571 = constructor_put_in_xreg(ctx, v1565.1);
                        let v1569 = C::u8_from_uimm8(ctx, v1564);
                        let v1572 = constructor_pulley_vinsertx8(ctx, v1570, v1571, v1569);
                        let v1573 = constructor_output_vreg(ctx, v1572);
                        let v1574 = Some(v1573);
                        // Rule at src/isa/pulley_shared/lower.isle line 1695.
                        return v1574;
                    }
                    I16X8 => {
                        let v1570 = constructor_put_in_vreg(ctx, v1565.0);
                        let v1571 = constructor_put_in_xreg(ctx, v1565.1);
                        let v1569 = C::u8_from_uimm8(ctx, v1564);
                        let v1575 = constructor_pulley_vinsertx16(ctx, v1570, v1571, v1569);
                        let v1576 = constructor_output_vreg(ctx, v1575);
                        let v1577 = Some(v1576);
                        // Rule at src/isa/pulley_shared/lower.isle line 1697.
                        return v1577;
                    }
                    I32X4 => {
                        let v1570 = constructor_put_in_vreg(ctx, v1565.0);
                        let v1571 = constructor_put_in_xreg(ctx, v1565.1);
                        let v1569 = C::u8_from_uimm8(ctx, v1564);
                        let v1578 = constructor_pulley_vinsertx32(ctx, v1570, v1571, v1569);
                        let v1579 = constructor_output_vreg(ctx, v1578);
                        let v1580 = Some(v1579);
                        // Rule at src/isa/pulley_shared/lower.isle line 1699.
                        return v1580;
                    }
                    I64X2 => {
                        let v1570 = constructor_put_in_vreg(ctx, v1565.0);
                        let v1571 = constructor_put_in_xreg(ctx, v1565.1);
                        let v1569 = C::u8_from_uimm8(ctx, v1564);
                        let v1581 = constructor_pulley_vinsertx64(ctx, v1570, v1571, v1569);
                        let v1582 = constructor_output_vreg(ctx, v1581);
                        let v1583 = Some(v1582);
                        // Rule at src/isa/pulley_shared/lower.isle line 1701.
                        return v1583;
                    }
                    F32X4 => {
                        let v1570 = constructor_put_in_vreg(ctx, v1565.0);
                        let v1584 = constructor_put_in_freg(ctx, v1565.1);
                        let v1569 = C::u8_from_uimm8(ctx, v1564);
                        let v1585 = constructor_pulley_vinsertf32(ctx, v1570, v1584, v1569);
                        let v1586 = constructor_output_vreg(ctx, v1585);
                        let v1587 = Some(v1586);
                        // Rule at src/isa/pulley_shared/lower.isle line 1703.
                        return v1587;
                    }
                    F64X2 => {
                        let v1570 = constructor_put_in_vreg(ctx, v1565.0);
                        let v1584 = constructor_put_in_freg(ctx, v1565.1);
                        let v1569 = C::u8_from_uimm8(ctx, v1564);
                        let v1588 = constructor_pulley_vinsertf64(ctx, v1570, v1584, v1569);
                        let v1589 = constructor_output_vreg(ctx, v1588);
                        let v1590 = Some(v1589);
                        // Rule at src/isa/pulley_shared/lower.isle line 1705.
                        return v1590;
                    }
                    _ => {}
                }
            }
        }
        &InstructionData::Trap {
            opcode: ref v2,
            code: ref v3,
        } => {
            if let &Opcode::Trap = v2 {
                let v4 = &constructor_pulley_trap(ctx, v3);
                let v5 = constructor_side_effect(ctx, v4);
                let v6 = Some(v5);
                // Rule at src/isa/pulley_shared/lower.isle line 110.
                return v6;
            }
        }
        &InstructionData::Unary {
            opcode: ref v661,
            arg: v662,
        } => {
            match v661 {
                &Opcode::Splat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8X16 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v1423 = constructor_pulley_vsplatx8(ctx, v663);
                                let v1424 = constructor_output_vreg(ctx, v1423);
                                let v1425 = Some(v1424);
                                // Rule at src/isa/pulley_shared/lower.isle line 1595.
                                return v1425;
                            }
                            I16X8 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v1426 = constructor_pulley_vsplatx16(ctx, v663);
                                let v1427 = constructor_output_vreg(ctx, v1426);
                                let v1428 = Some(v1427);
                                // Rule at src/isa/pulley_shared/lower.isle line 1596.
                                return v1428;
                            }
                            I32X4 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v1429 = constructor_pulley_vsplatx32(ctx, v663);
                                let v1430 = constructor_output_vreg(ctx, v1429);
                                let v1431 = Some(v1430);
                                // Rule at src/isa/pulley_shared/lower.isle line 1597.
                                return v1431;
                            }
                            I64X2 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v1432 = constructor_pulley_vsplatx64(ctx, v663);
                                let v1433 = constructor_output_vreg(ctx, v1432);
                                let v1434 = Some(v1433);
                                // Rule at src/isa/pulley_shared/lower.isle line 1598.
                                return v1434;
                            }
                            F32X4 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1435 = constructor_pulley_vsplatf32(ctx, v1104);
                                let v1436 = constructor_output_vreg(ctx, v1435);
                                let v1437 = Some(v1436);
                                // Rule at src/isa/pulley_shared/lower.isle line 1599.
                                return v1437;
                            }
                            F64X2 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1438 = constructor_pulley_vsplatf64(ctx, v1104);
                                let v1439 = constructor_output_vreg(ctx, v1438);
                                let v1440 = Some(v1439);
                                // Rule at src/isa/pulley_shared/lower.isle line 1600.
                                return v1440;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::VanyTrue => {
                    let v746 = C::value_type(ctx, v662);
                    match v746 {
                        I8X16 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1465 = constructor_pulley_vanytrue8x16(ctx, v670);
                            let v1466 = constructor_output_xreg(ctx, v1465);
                            let v1467 = Some(v1466);
                            // Rule at src/isa/pulley_shared/lower.isle line 1624.
                            return v1467;
                        }
                        I16X8 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1468 = constructor_pulley_vanytrue16x8(ctx, v670);
                            let v1469 = constructor_output_xreg(ctx, v1468);
                            let v1470 = Some(v1469);
                            // Rule at src/isa/pulley_shared/lower.isle line 1625.
                            return v1470;
                        }
                        I32X4 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1471 = constructor_pulley_vanytrue32x4(ctx, v670);
                            let v1472 = constructor_output_xreg(ctx, v1471);
                            let v1473 = Some(v1472);
                            // Rule at src/isa/pulley_shared/lower.isle line 1626.
                            return v1473;
                        }
                        I64X2 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1474 = constructor_pulley_vanytrue64x2(ctx, v670);
                            let v1475 = constructor_output_xreg(ctx, v1474);
                            let v1476 = Some(v1475);
                            // Rule at src/isa/pulley_shared/lower.isle line 1627.
                            return v1476;
                        }
                        F32X4 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1471 = constructor_pulley_vanytrue32x4(ctx, v670);
                            let v1472 = constructor_output_xreg(ctx, v1471);
                            let v1473 = Some(v1472);
                            // Rule at src/isa/pulley_shared/lower.isle line 1628.
                            return v1473;
                        }
                        F64X2 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1474 = constructor_pulley_vanytrue64x2(ctx, v670);
                            let v1475 = constructor_output_xreg(ctx, v1474);
                            let v1476 = Some(v1475);
                            // Rule at src/isa/pulley_shared/lower.isle line 1629.
                            return v1476;
                        }
                        _ => {}
                    }
                }
                &Opcode::VallTrue => {
                    let v746 = C::value_type(ctx, v662);
                    match v746 {
                        I8X16 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1453 = constructor_pulley_valltrue8x16(ctx, v670);
                            let v1454 = constructor_output_xreg(ctx, v1453);
                            let v1455 = Some(v1454);
                            // Rule at src/isa/pulley_shared/lower.isle line 1615.
                            return v1455;
                        }
                        I16X8 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1456 = constructor_pulley_valltrue16x8(ctx, v670);
                            let v1457 = constructor_output_xreg(ctx, v1456);
                            let v1458 = Some(v1457);
                            // Rule at src/isa/pulley_shared/lower.isle line 1616.
                            return v1458;
                        }
                        I32X4 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1459 = constructor_pulley_valltrue32x4(ctx, v670);
                            let v1460 = constructor_output_xreg(ctx, v1459);
                            let v1461 = Some(v1460);
                            // Rule at src/isa/pulley_shared/lower.isle line 1617.
                            return v1461;
                        }
                        I64X2 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1462 = constructor_pulley_valltrue64x2(ctx, v670);
                            let v1463 = constructor_output_xreg(ctx, v1462);
                            let v1464 = Some(v1463);
                            // Rule at src/isa/pulley_shared/lower.isle line 1618.
                            return v1464;
                        }
                        F32X4 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1459 = constructor_pulley_valltrue32x4(ctx, v670);
                            let v1460 = constructor_output_xreg(ctx, v1459);
                            let v1461 = Some(v1460);
                            // Rule at src/isa/pulley_shared/lower.isle line 1619.
                            return v1461;
                        }
                        F64X2 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1462 = constructor_pulley_valltrue64x2(ctx, v670);
                            let v1463 = constructor_output_xreg(ctx, v1462);
                            let v1464 = Some(v1463);
                            // Rule at src/isa/pulley_shared/lower.isle line 1620.
                            return v1464;
                        }
                        _ => {}
                    }
                }
                &Opcode::VhighBits => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v746 = C::value_type(ctx, v662);
                            match v746 {
                                I8X16 => {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1441 = constructor_pulley_vbitmask8x16(ctx, v670);
                                    let v1442 = constructor_output_xreg(ctx, v1441);
                                    let v1443 = Some(v1442);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1604.
                                    return v1443;
                                }
                                I16X8 => {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1444 = constructor_pulley_vbitmask16x8(ctx, v670);
                                    let v1445 = constructor_output_xreg(ctx, v1444);
                                    let v1446 = Some(v1445);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1606.
                                    return v1446;
                                }
                                I32X4 => {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1447 = constructor_pulley_vbitmask32x4(ctx, v670);
                                    let v1448 = constructor_output_xreg(ctx, v1447);
                                    let v1449 = Some(v1448);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1608.
                                    return v1449;
                                }
                                I64X2 => {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1450 = constructor_pulley_vbitmask64x2(ctx, v670);
                                    let v1451 = constructor_output_xreg(ctx, v1450);
                                    let v1452 = Some(v1451);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1610.
                                    return v1452;
                                }
                                _ => {}
                            }
                        }
                    }
                }
                &Opcode::Ineg => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v1362 = constructor_pulley_xneg64(ctx, v663);
                                let v1363 = constructor_output_xreg(ctx, v1362);
                                let v1364 = Some(v1363);
                                // Rule at src/isa/pulley_shared/lower.isle line 1556.
                                return v1364;
                            }
                            I8X16 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1365 = constructor_pulley_vneg8x16(ctx, v670);
                                let v1366 = constructor_output_vreg(ctx, v1365);
                                let v1367 = Some(v1366);
                                // Rule at src/isa/pulley_shared/lower.isle line 1560.
                                return v1367;
                            }
                            I16X8 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1368 = constructor_pulley_vneg16x8(ctx, v670);
                                let v1369 = constructor_output_vreg(ctx, v1368);
                                let v1370 = Some(v1369);
                                // Rule at src/isa/pulley_shared/lower.isle line 1561.
                                return v1370;
                            }
                            I32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1371 = constructor_pulley_vneg32x4(ctx, v670);
                                let v1372 = constructor_output_vreg(ctx, v1371);
                                let v1373 = Some(v1372);
                                // Rule at src/isa/pulley_shared/lower.isle line 1562.
                                return v1373;
                            }
                            I64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1374 = constructor_pulley_vneg64x2(ctx, v670);
                                let v1375 = constructor_output_vreg(ctx, v1374);
                                let v1376 = Some(v1375);
                                // Rule at src/isa/pulley_shared/lower.isle line 1563.
                                return v1376;
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v1008 = constructor_sext32(ctx, v662);
                            let v1359 = constructor_pulley_xneg32(ctx, v1008);
                            let v1360 = constructor_output_xreg(ctx, v1359);
                            let v1361 = Some(v1360);
                            // Rule at src/isa/pulley_shared/lower.isle line 1555.
                            return v1361;
                        }
                    }
                }
                &Opcode::Iabs => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v1408 = constructor_pulley_xabs64(ctx, v663);
                                let v1409 = constructor_output_xreg(ctx, v1408);
                                let v1410 = Some(v1409);
                                // Rule at src/isa/pulley_shared/lower.isle line 1587.
                                return v1410;
                            }
                            I8X16 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1411 = constructor_pulley_vabs8x16(ctx, v670);
                                let v1412 = constructor_output_vreg(ctx, v1411);
                                let v1413 = Some(v1412);
                                // Rule at src/isa/pulley_shared/lower.isle line 1588.
                                return v1413;
                            }
                            I16X8 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1414 = constructor_pulley_vabs16x8(ctx, v670);
                                let v1415 = constructor_output_vreg(ctx, v1414);
                                let v1416 = Some(v1415);
                                // Rule at src/isa/pulley_shared/lower.isle line 1589.
                                return v1416;
                            }
                            I32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1417 = constructor_pulley_vabs32x4(ctx, v670);
                                let v1418 = constructor_output_vreg(ctx, v1417);
                                let v1419 = Some(v1418);
                                // Rule at src/isa/pulley_shared/lower.isle line 1590.
                                return v1419;
                            }
                            I64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1420 = constructor_pulley_vabs64x2(ctx, v670);
                                let v1421 = constructor_output_vreg(ctx, v1420);
                                let v1422 = Some(v1421);
                                // Rule at src/isa/pulley_shared/lower.isle line 1591.
                                return v1422;
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v1008 = constructor_sext32(ctx, v662);
                            let v1405 = constructor_pulley_xabs32(ctx, v1008);
                            let v1406 = constructor_output_xreg(ctx, v1405);
                            let v1407 = Some(v1406);
                            // Rule at src/isa/pulley_shared/lower.isle line 1586.
                            return v1407;
                        }
                    }
                }
                &Opcode::Bnot => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        let v614 = C::ty_vec128(ctx, v132);
                        if let Some(v615) = v614 {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v671 = constructor_pulley_vbnot128(ctx, v670);
                            let v672 = constructor_output_vreg(ctx, v671);
                            let v673 = Some(v672);
                            // Rule at src/isa/pulley_shared/lower.isle line 650.
                            return v673;
                        }
                        if v132 == I64 {
                            let v663 = constructor_put_in_xreg(ctx, v662);
                            let v667 = constructor_pulley_xbnot64(ctx, v663);
                            let v668 = constructor_output_xreg(ctx, v667);
                            let v669 = Some(v668);
                            // Rule at src/isa/pulley_shared/lower.isle line 647.
                            return v669;
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v663 = constructor_put_in_xreg(ctx, v662);
                            let v664 = constructor_pulley_xbnot32(ctx, v663);
                            let v665 = constructor_output_xreg(ctx, v664);
                            let v666 = Some(v665);
                            // Rule at src/isa/pulley_shared/lower.isle line 644.
                            return v666;
                        }
                    }
                }
                &Opcode::Clz => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8 => {
                                let v749 = constructor_zext32(ctx, v662);
                                let v776 = constructor_pulley_xclz32(ctx, v749);
                                let v778 = constructor_pulley_xsub32_u8(ctx, v776, 0x18_u8);
                                let v779 = constructor_output_xreg(ctx, v778);
                                let v780 = Some(v779);
                                // Rule at src/isa/pulley_shared/lower.isle line 714.
                                return v780;
                            }
                            I16 => {
                                let v749 = constructor_zext32(ctx, v662);
                                let v776 = constructor_pulley_xclz32(ctx, v749);
                                let v782 = constructor_pulley_xsub32_u8(ctx, v776, 0x10_u8);
                                let v783 = constructor_output_xreg(ctx, v782);
                                let v784 = Some(v783);
                                // Rule at src/isa/pulley_shared/lower.isle line 716.
                                return v784;
                            }
                            I32 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v785 = constructor_pulley_xclz32(ctx, v663);
                                let v786 = constructor_output_xreg(ctx, v785);
                                let v787 = Some(v786);
                                // Rule at src/isa/pulley_shared/lower.isle line 718.
                                return v787;
                            }
                            I64 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v788 = constructor_pulley_xclz64(ctx, v663);
                                let v789 = constructor_output_xreg(ctx, v788);
                                let v790 = Some(v789);
                                // Rule at src/isa/pulley_shared/lower.isle line 719.
                                return v790;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ctz => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I8 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v761 = constructor_pulley_xbor32_s32(ctx, v663, 256_i32);
                                let v762 = constructor_pulley_xctz32(ctx, v761);
                                let v763 = constructor_output_xreg(ctx, v762);
                                let v764 = Some(v763);
                                // Rule at src/isa/pulley_shared/lower.isle line 705.
                                return v764;
                            }
                            I16 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v766 = constructor_pulley_xbor32_s32(ctx, v663, 65536_i32);
                                let v767 = constructor_pulley_xctz32(ctx, v766);
                                let v768 = constructor_output_xreg(ctx, v767);
                                let v769 = Some(v768);
                                // Rule at src/isa/pulley_shared/lower.isle line 707.
                                return v769;
                            }
                            I32 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v770 = constructor_pulley_xctz32(ctx, v663);
                                let v771 = constructor_output_xreg(ctx, v770);
                                let v772 = Some(v771);
                                // Rule at src/isa/pulley_shared/lower.isle line 709.
                                return v772;
                            }
                            I64 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v773 = constructor_pulley_xctz64(ctx, v663);
                                let v774 = constructor_output_xreg(ctx, v773);
                                let v775 = Some(v774);
                                // Rule at src/isa/pulley_shared/lower.isle line 710.
                                return v775;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Bswap => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I16 => {
                                let v428 = C::u64_as_u8(ctx, 0x10_u64);
                                let v429 = C::u6_from_u8(ctx, v428);
                                if let Some(v430) = v429 {
                                    let v663 = constructor_put_in_xreg(ctx, v662);
                                    let v1396 = constructor_pulley_bswap32(ctx, v663);
                                    let v1397 = constructor_pulley_xshr32_u_u6(ctx, v1396, v430);
                                    let v1398 = constructor_output_xreg(ctx, v1397);
                                    let v1399 = Some(v1398);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1578.
                                    return v1399;
                                }
                            }
                            I32 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v1396 = constructor_pulley_bswap32(ctx, v663);
                                let v1400 = constructor_output_xreg(ctx, v1396);
                                let v1401 = Some(v1400);
                                // Rule at src/isa/pulley_shared/lower.isle line 1581.
                                return v1401;
                            }
                            I64 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v1402 = constructor_pulley_bswap64(ctx, v663);
                                let v1403 = constructor_output_xreg(ctx, v1402);
                                let v1404 = Some(v1403);
                                // Rule at src/isa/pulley_shared/lower.isle line 1582.
                                return v1404;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Popcnt => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v663 = constructor_put_in_xreg(ctx, v662);
                                let v794 = constructor_pulley_xpopcnt64(ctx, v663);
                                let v795 = constructor_output_xreg(ctx, v794);
                                let v796 = Some(v795);
                                // Rule at src/isa/pulley_shared/lower.isle line 724.
                                return v796;
                            }
                            I8X16 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v797 = constructor_pulley_vpopcnt8x16(ctx, v670);
                                let v798 = constructor_output_vreg(ctx, v797);
                                let v799 = Some(v798);
                                // Rule at src/isa/pulley_shared/lower.isle line 725.
                                return v799;
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v749 = constructor_zext32(ctx, v662);
                            let v791 = constructor_pulley_xpopcnt32(ctx, v749);
                            let v792 = constructor_output_xreg(ctx, v791);
                            let v793 = Some(v792);
                            // Rule at src/isa/pulley_shared/lower.isle line 723.
                            return v793;
                        }
                    }
                }
                &Opcode::Sqrt => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1335 = constructor_pulley_fsqrt32(ctx, v1104);
                                let v1336 = constructor_output_freg(ctx, v1335);
                                let v1337 = Some(v1336);
                                // Rule at src/isa/pulley_shared/lower.isle line 1539.
                                return v1337;
                            }
                            F64 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1338 = constructor_pulley_fsqrt64(ctx, v1104);
                                let v1339 = constructor_output_freg(ctx, v1338);
                                let v1340 = Some(v1339);
                                // Rule at src/isa/pulley_shared/lower.isle line 1540.
                                return v1340;
                            }
                            F32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1341 = constructor_pulley_vsqrt32x4(ctx, v670);
                                let v1342 = constructor_output_vreg(ctx, v1341);
                                let v1343 = Some(v1342);
                                // Rule at src/isa/pulley_shared/lower.isle line 1541.
                                return v1343;
                            }
                            F64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1344 = constructor_pulley_vsqrt64x2(ctx, v670);
                                let v1345 = constructor_output_vreg(ctx, v1344);
                                let v1346 = Some(v1345);
                                // Rule at src/isa/pulley_shared/lower.isle line 1543.
                                return v1346;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fneg => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1347 = constructor_pulley_fneg32(ctx, v1104);
                                let v1348 = constructor_output_freg(ctx, v1347);
                                let v1349 = Some(v1348);
                                // Rule at src/isa/pulley_shared/lower.isle line 1548.
                                return v1349;
                            }
                            F64 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1350 = constructor_pulley_fneg64(ctx, v1104);
                                let v1351 = constructor_output_freg(ctx, v1350);
                                let v1352 = Some(v1351);
                                // Rule at src/isa/pulley_shared/lower.isle line 1549.
                                return v1352;
                            }
                            F32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1353 = constructor_pulley_vnegf32x4(ctx, v670);
                                let v1354 = constructor_output_vreg(ctx, v1353);
                                let v1355 = Some(v1354);
                                // Rule at src/isa/pulley_shared/lower.isle line 1550.
                                return v1355;
                            }
                            F64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1356 = constructor_pulley_vnegf64x2(ctx, v670);
                                let v1357 = constructor_output_vreg(ctx, v1356);
                                let v1358 = Some(v1357);
                                // Rule at src/isa/pulley_shared/lower.isle line 1551.
                                return v1358;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Fabs => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1377 = constructor_pulley_fabs32(ctx, v1104);
                                let v1378 = constructor_output_freg(ctx, v1377);
                                let v1379 = Some(v1378);
                                // Rule at src/isa/pulley_shared/lower.isle line 1567.
                                return v1379;
                            }
                            F64 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1380 = constructor_pulley_fabs64(ctx, v1104);
                                let v1381 = constructor_output_freg(ctx, v1380);
                                let v1382 = Some(v1381);
                                // Rule at src/isa/pulley_shared/lower.isle line 1568.
                                return v1382;
                            }
                            F32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1383 = constructor_pulley_vabsf32x4(ctx, v670);
                                let v1384 = constructor_output_vreg(ctx, v1383);
                                let v1385 = Some(v1384);
                                // Rule at src/isa/pulley_shared/lower.isle line 1569.
                                return v1385;
                            }
                            F64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1386 = constructor_pulley_vabsf64x2(ctx, v670);
                                let v1387 = constructor_output_vreg(ctx, v1386);
                                let v1388 = Some(v1387);
                                // Rule at src/isa/pulley_shared/lower.isle line 1570.
                                return v1388;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Ceil => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1311 = constructor_pulley_fceil32(ctx, v1104);
                                let v1312 = constructor_output_freg(ctx, v1311);
                                let v1313 = Some(v1312);
                                // Rule at src/isa/pulley_shared/lower.isle line 1521.
                                return v1313;
                            }
                            F64 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1314 = constructor_pulley_fceil64(ctx, v1104);
                                let v1315 = constructor_output_freg(ctx, v1314);
                                let v1316 = Some(v1315);
                                // Rule at src/isa/pulley_shared/lower.isle line 1522.
                                return v1316;
                            }
                            F32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1320 = constructor_pulley_vceil32x4(ctx, v670);
                                let v1321 = constructor_output_vreg(ctx, v1320);
                                let v1322 = Some(v1321);
                                // Rule at src/isa/pulley_shared/lower.isle line 1525.
                                return v1322;
                            }
                            F64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1317 = constructor_pulley_vceil64x2(ctx, v670);
                                let v1318 = constructor_output_vreg(ctx, v1317);
                                let v1319 = Some(v1318);
                                // Rule at src/isa/pulley_shared/lower.isle line 1523.
                                return v1319;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Floor => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1299 = constructor_pulley_ffloor32(ctx, v1104);
                                let v1300 = constructor_output_freg(ctx, v1299);
                                let v1301 = Some(v1300);
                                // Rule at src/isa/pulley_shared/lower.isle line 1512.
                                return v1301;
                            }
                            F64 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1302 = constructor_pulley_ffloor64(ctx, v1104);
                                let v1303 = constructor_output_freg(ctx, v1302);
                                let v1304 = Some(v1303);
                                // Rule at src/isa/pulley_shared/lower.isle line 1513.
                                return v1304;
                            }
                            F32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1305 = constructor_pulley_vfloor32x4(ctx, v670);
                                let v1306 = constructor_output_vreg(ctx, v1305);
                                let v1307 = Some(v1306);
                                // Rule at src/isa/pulley_shared/lower.isle line 1514.
                                return v1307;
                            }
                            F64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1308 = constructor_pulley_vfloor64x2(ctx, v670);
                                let v1309 = constructor_output_vreg(ctx, v1308);
                                let v1310 = Some(v1309);
                                // Rule at src/isa/pulley_shared/lower.isle line 1516.
                                return v1310;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Trunc => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1287 = constructor_pulley_ftrunc32(ctx, v1104);
                                let v1288 = constructor_output_freg(ctx, v1287);
                                let v1289 = Some(v1288);
                                // Rule at src/isa/pulley_shared/lower.isle line 1505.
                                return v1289;
                            }
                            F64 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1290 = constructor_pulley_ftrunc64(ctx, v1104);
                                let v1291 = constructor_output_freg(ctx, v1290);
                                let v1292 = Some(v1291);
                                // Rule at src/isa/pulley_shared/lower.isle line 1506.
                                return v1292;
                            }
                            F32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1293 = constructor_pulley_vtrunc32x4(ctx, v670);
                                let v1294 = constructor_output_vreg(ctx, v1293);
                                let v1295 = Some(v1294);
                                // Rule at src/isa/pulley_shared/lower.isle line 1507.
                                return v1295;
                            }
                            F64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1296 = constructor_pulley_vtrunc64x2(ctx, v670);
                                let v1297 = constructor_output_vreg(ctx, v1296);
                                let v1298 = Some(v1297);
                                // Rule at src/isa/pulley_shared/lower.isle line 1508.
                                return v1298;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Nearest => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1323 = constructor_pulley_fnearest32(ctx, v1104);
                                let v1324 = constructor_output_freg(ctx, v1323);
                                let v1325 = Some(v1324);
                                // Rule at src/isa/pulley_shared/lower.isle line 1530.
                                return v1325;
                            }
                            F64 => {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1326 = constructor_pulley_fnearest64(ctx, v1104);
                                let v1327 = constructor_output_freg(ctx, v1326);
                                let v1328 = Some(v1327);
                                // Rule at src/isa/pulley_shared/lower.isle line 1531.
                                return v1328;
                            }
                            F32X4 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1329 = constructor_pulley_vnearest32x4(ctx, v670);
                                let v1330 = constructor_output_vreg(ctx, v1329);
                                let v1331 = Some(v1330);
                                // Rule at src/isa/pulley_shared/lower.isle line 1532.
                                return v1331;
                            }
                            F64X2 => {
                                let v670 = constructor_put_in_vreg(ctx, v662);
                                let v1332 = constructor_pulley_vnearest64x2(ctx, v670);
                                let v1333 = constructor_output_vreg(ctx, v1332);
                                let v1334 = Some(v1333);
                                // Rule at src/isa/pulley_shared/lower.isle line 1534.
                                return v1334;
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::ScalarToVector => {
                    let v746 = C::value_type(ctx, v662);
                    match v746 {
                        I8 => {
                            let v1592 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1593 = constructor_put_in_xreg(ctx, v662);
                            let v1595 = constructor_pulley_vinsertx8(ctx, v1592, v1593, 0x0_u8);
                            let v1596 = constructor_output_vreg(ctx, v1595);
                            let v1597 = Some(v1596);
                            // Rule at src/isa/pulley_shared/lower.isle line 1714.
                            return v1597;
                        }
                        I16 => {
                            let v1592 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1593 = constructor_put_in_xreg(ctx, v662);
                            let v1598 = constructor_pulley_vinsertx16(ctx, v1592, v1593, 0x0_u8);
                            let v1599 = constructor_output_vreg(ctx, v1598);
                            let v1600 = Some(v1599);
                            // Rule at src/isa/pulley_shared/lower.isle line 1716.
                            return v1600;
                        }
                        I32 => {
                            let v1592 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1593 = constructor_put_in_xreg(ctx, v662);
                            let v1601 = constructor_pulley_vinsertx32(ctx, v1592, v1593, 0x0_u8);
                            let v1602 = constructor_output_vreg(ctx, v1601);
                            let v1603 = Some(v1602);
                            // Rule at src/isa/pulley_shared/lower.isle line 1718.
                            return v1603;
                        }
                        I64 => {
                            let v1592 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1593 = constructor_put_in_xreg(ctx, v662);
                            let v1604 = constructor_pulley_vinsertx64(ctx, v1592, v1593, 0x0_u8);
                            let v1605 = constructor_output_vreg(ctx, v1604);
                            let v1606 = Some(v1605);
                            // Rule at src/isa/pulley_shared/lower.isle line 1720.
                            return v1606;
                        }
                        F32 => {
                            let v1592 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1607 = constructor_put_in_freg(ctx, v662);
                            let v1608 = constructor_pulley_vinsertf32(ctx, v1592, v1607, 0x0_u8);
                            let v1609 = constructor_output_vreg(ctx, v1608);
                            let v1610 = Some(v1609);
                            // Rule at src/isa/pulley_shared/lower.isle line 1722.
                            return v1610;
                        }
                        F64 => {
                            let v1592 = constructor_pulley_vconst128(ctx, 0x0_u128);
                            let v1607 = constructor_put_in_freg(ctx, v662);
                            let v1611 = constructor_pulley_vinsertf64(ctx, v1592, v1607, 0x0_u8);
                            let v1612 = constructor_output_vreg(ctx, v1611);
                            let v1613 = Some(v1612);
                            // Rule at src/isa/pulley_shared/lower.isle line 1724.
                            return v1613;
                        }
                        _ => {}
                    }
                }
                &Opcode::Bmask => {
                    let v746 = C::value_type(ctx, v662);
                    if v746 == I64 {
                        let v663 = constructor_put_in_xreg(ctx, v662);
                        let v757 = constructor_pulley_xbmask64(ctx, v663);
                        let v758 = constructor_output_xreg(ctx, v757);
                        let v759 = Some(v758);
                        // Rule at src/isa/pulley_shared/lower.isle line 700.
                        return v759;
                    }
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == I64 {
                            let v753 = constructor_zext64(ctx, v662);
                            let v754 = constructor_pulley_xbmask64(ctx, v753);
                            let v755 = constructor_output_xreg(ctx, v754);
                            let v756 = Some(v755);
                            // Rule at src/isa/pulley_shared/lower.isle line 698.
                            return v756;
                        }
                        let v154 = C::ty_int(ctx, v132);
                        if let Some(v155) = v154 {
                            let v171 = C::fits_in_32(ctx, v155);
                            if let Some(v172) = v171 {
                                let v747 = C::fits_in_32(ctx, v746);
                                if let Some(v748) = v747 {
                                    let v749 = constructor_zext32(ctx, v662);
                                    let v750 = constructor_pulley_xbmask32(ctx, v749);
                                    let v751 = constructor_output_xreg(ctx, v750);
                                    let v752 = Some(v751);
                                    // Rule at src/isa/pulley_shared/lower.isle line 696.
                                    return v752;
                                }
                            }
                        }
                    }
                }
                &Opcode::Ireduce => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        let v1024 = C::fits_in_64(ctx, v132);
                        if let Some(v1025) = v1024 {
                            let v1026 = constructor_output_value(ctx, v662);
                            let v1027 = Some(v1026);
                            // Rule at src/isa/pulley_shared/lower.isle line 1219.
                            return v1027;
                        }
                    }
                }
                &Opcode::SwidenLow => {
                    let v746 = C::value_type(ctx, v662);
                    match v746 {
                        I8X16 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1477 = constructor_pulley_vwidenlow8x16_s(ctx, v670);
                            let v1478 = constructor_output_vreg(ctx, v1477);
                            let v1479 = Some(v1478);
                            // Rule at src/isa/pulley_shared/lower.isle line 1633.
                            return v1479;
                        }
                        I16X8 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1480 = constructor_pulley_vwidenlow16x8_s(ctx, v670);
                            let v1481 = constructor_output_vreg(ctx, v1480);
                            let v1482 = Some(v1481);
                            // Rule at src/isa/pulley_shared/lower.isle line 1634.
                            return v1482;
                        }
                        I32X4 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1483 = constructor_pulley_vwidenlow32x4_s(ctx, v670);
                            let v1484 = constructor_output_vreg(ctx, v1483);
                            let v1485 = Some(v1484);
                            // Rule at src/isa/pulley_shared/lower.isle line 1635.
                            return v1485;
                        }
                        _ => {}
                    }
                }
                &Opcode::SwidenHigh => {
                    let v746 = C::value_type(ctx, v662);
                    match v746 {
                        I8X16 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1486 = constructor_pulley_vwidenhigh8x16_s(ctx, v670);
                            let v1487 = constructor_output_vreg(ctx, v1486);
                            let v1488 = Some(v1487);
                            // Rule at src/isa/pulley_shared/lower.isle line 1639.
                            return v1488;
                        }
                        I16X8 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1489 = constructor_pulley_vwidenhigh16x8_s(ctx, v670);
                            let v1490 = constructor_output_vreg(ctx, v1489);
                            let v1491 = Some(v1490);
                            // Rule at src/isa/pulley_shared/lower.isle line 1640.
                            return v1491;
                        }
                        I32X4 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1492 = constructor_pulley_vwidenhigh32x4_s(ctx, v670);
                            let v1493 = constructor_output_vreg(ctx, v1492);
                            let v1494 = Some(v1493);
                            // Rule at src/isa/pulley_shared/lower.isle line 1641.
                            return v1494;
                        }
                        _ => {}
                    }
                }
                &Opcode::UwidenLow => {
                    let v746 = C::value_type(ctx, v662);
                    match v746 {
                        I8X16 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1495 = constructor_pulley_vwidenlow8x16_u(ctx, v670);
                            let v1496 = constructor_output_vreg(ctx, v1495);
                            let v1497 = Some(v1496);
                            // Rule at src/isa/pulley_shared/lower.isle line 1645.
                            return v1497;
                        }
                        I16X8 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1498 = constructor_pulley_vwidenlow16x8_u(ctx, v670);
                            let v1499 = constructor_output_vreg(ctx, v1498);
                            let v1500 = Some(v1499);
                            // Rule at src/isa/pulley_shared/lower.isle line 1646.
                            return v1500;
                        }
                        I32X4 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1501 = constructor_pulley_vwidenlow32x4_u(ctx, v670);
                            let v1502 = constructor_output_vreg(ctx, v1501);
                            let v1503 = Some(v1502);
                            // Rule at src/isa/pulley_shared/lower.isle line 1647.
                            return v1503;
                        }
                        _ => {}
                    }
                }
                &Opcode::UwidenHigh => {
                    let v746 = C::value_type(ctx, v662);
                    match v746 {
                        I8X16 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1504 = constructor_pulley_vwidenhigh8x16_u(ctx, v670);
                            let v1505 = constructor_output_vreg(ctx, v1504);
                            let v1506 = Some(v1505);
                            // Rule at src/isa/pulley_shared/lower.isle line 1651.
                            return v1506;
                        }
                        I16X8 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1507 = constructor_pulley_vwidenhigh16x8_u(ctx, v670);
                            let v1508 = constructor_output_vreg(ctx, v1507);
                            let v1509 = Some(v1508);
                            // Rule at src/isa/pulley_shared/lower.isle line 1652.
                            return v1509;
                        }
                        I32X4 => {
                            let v670 = constructor_put_in_vreg(ctx, v662);
                            let v1510 = constructor_pulley_vwidenhigh32x4_u(ctx, v670);
                            let v1511 = constructor_output_vreg(ctx, v1510);
                            let v1512 = Some(v1511);
                            // Rule at src/isa/pulley_shared/lower.isle line 1653.
                            return v1512;
                        }
                        _ => {}
                    }
                }
                &Opcode::Uextend => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v753 = constructor_zext64(ctx, v662);
                                let v1000 = constructor_output_xreg(ctx, v753);
                                let v1001 = Some(v1000);
                                // Rule at src/isa/pulley_shared/lower.isle line 1197.
                                return v1001;
                            }
                            I128 => {
                                let v753 = constructor_zext64(ctx, v662);
                                let v1003 = constructor_pulley_xzero(ctx);
                                let v1002 = C::xreg_to_reg(ctx, v753);
                                let v1004 = C::xreg_to_reg(ctx, v1003);
                                let v1005 = C::value_regs(ctx, v1002, v1004);
                                let v1006 = C::output(ctx, v1005);
                                let v1007 = Some(v1006);
                                // Rule at src/isa/pulley_shared/lower.isle line 1200.
                                return v1007;
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v749 = constructor_zext32(ctx, v662);
                            let v998 = constructor_output_xreg(ctx, v749);
                            let v999 = Some(v998);
                            // Rule at src/isa/pulley_shared/lower.isle line 1194.
                            return v999;
                        }
                    }
                }
                &Opcode::Sextend => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I64 => {
                                let v1011 = constructor_sext64(ctx, v662);
                                let v1012 = constructor_output_xreg(ctx, v1011);
                                let v1013 = Some(v1012);
                                // Rule at src/isa/pulley_shared/lower.isle line 1208.
                                return v1013;
                            }
                            I128 => {
                                let v1015 = C::u64_as_u8(ctx, 0x3f_u64);
                                let v1016 = C::u6_from_u8(ctx, v1015);
                                if let Some(v1017) = v1016 {
                                    let v1011 = constructor_sext64(ctx, v662);
                                    let v1018 = constructor_pulley_xshr64_s_u6(ctx, v1011, v1017);
                                    let v1019 = C::xreg_to_reg(ctx, v1011);
                                    let v1020 = C::xreg_to_reg(ctx, v1018);
                                    let v1021 = C::value_regs(ctx, v1019, v1020);
                                    let v1022 = C::output(ctx, v1021);
                                    let v1023 = Some(v1022);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1211.
                                    return v1023;
                                }
                            }
                            _ => {}
                        }
                        let v468 = C::fits_in_32(ctx, v132);
                        if let Some(v469) = v468 {
                            let v1008 = constructor_sext32(ctx, v662);
                            let v1009 = constructor_output_xreg(ctx, v1008);
                            let v1010 = Some(v1009);
                            // Rule at src/isa/pulley_shared/lower.isle line 1205.
                            return v1010;
                        }
                    }
                }
                &Opcode::Fpromote => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == F64 {
                            let v746 = C::value_type(ctx, v662);
                            if v746 == F32 {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1204 = constructor_pulley_f64_from_f32(ctx, v1104);
                                let v1205 = constructor_output_freg(ctx, v1204);
                                let v1206 = Some(v1205);
                                // Rule at src/isa/pulley_shared/lower.isle line 1450.
                                return v1206;
                            }
                        }
                    }
                }
                &Opcode::Fdemote => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        if v132 == F32 {
                            let v746 = C::value_type(ctx, v662);
                            if v746 == F64 {
                                let v1104 = constructor_put_in_freg(ctx, v662);
                                let v1201 = constructor_pulley_f32_from_f64(ctx, v1104);
                                let v1202 = constructor_output_freg(ctx, v1201);
                                let v1203 = Some(v1202);
                                // Rule at src/isa/pulley_shared/lower.isle line 1445.
                                return v1203;
                            }
                        }
                    }
                }
                &Opcode::Fvdemote => {
                    let v746 = C::value_type(ctx, v662);
                    if v746 == F64X2 {
                        let v670 = constructor_put_in_vreg(ctx, v662);
                        let v1535 = constructor_pulley_vfdemote(ctx, v670);
                        let v1536 = constructor_output_vreg(ctx, v1535);
                        let v1537 = Some(v1536);
                        // Rule at src/isa/pulley_shared/lower.isle line 1676.
                        return v1537;
                    }
                }
                &Opcode::FvpromoteLow => {
                    let v746 = C::value_type(ctx, v662);
                    if v746 == F32X4 {
                        let v670 = constructor_put_in_vreg(ctx, v662);
                        let v1532 = constructor_pulley_vfpromotelow(ctx, v670);
                        let v1533 = constructor_output_vreg(ctx, v1532);
                        let v1534 = Some(v1533);
                        // Rule at src/isa/pulley_shared/lower.isle line 1672.
                        return v1534;
                    }
                }
                &Opcode::FcvtToUint => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I32 => {
                                let v746 = C::value_type(ctx, v662);
                                match v746 {
                                    F32 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1105 = constructor_pulley_x32_from_f32_u(ctx, v1104);
                                        let v1106 = constructor_output_xreg(ctx, v1105);
                                        let v1107 = Some(v1106);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1343.
                                        return v1107;
                                    }
                                    F64 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1108 = constructor_pulley_x32_from_f64_u(ctx, v1104);
                                        let v1109 = constructor_output_xreg(ctx, v1108);
                                        let v1110 = Some(v1109);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1346.
                                        return v1110;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v746 = C::value_type(ctx, v662);
                                match v746 {
                                    F32 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1111 = constructor_pulley_x64_from_f32_u(ctx, v1104);
                                        let v1112 = constructor_output_xreg(ctx, v1111);
                                        let v1113 = Some(v1112);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1349.
                                        return v1113;
                                    }
                                    F64 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1114 = constructor_pulley_x64_from_f64_u(ctx, v1104);
                                        let v1115 = constructor_output_xreg(ctx, v1114);
                                        let v1116 = Some(v1115);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1352.
                                        return v1116;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToSint => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I32 => {
                                let v746 = C::value_type(ctx, v662);
                                match v746 {
                                    F32 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1117 = constructor_pulley_x32_from_f32_s(ctx, v1104);
                                        let v1118 = constructor_output_xreg(ctx, v1117);
                                        let v1119 = Some(v1118);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1355.
                                        return v1119;
                                    }
                                    F64 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1120 = constructor_pulley_x32_from_f64_s(ctx, v1104);
                                        let v1121 = constructor_output_xreg(ctx, v1120);
                                        let v1122 = Some(v1121);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1358.
                                        return v1122;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v746 = C::value_type(ctx, v662);
                                match v746 {
                                    F32 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1123 = constructor_pulley_x64_from_f32_s(ctx, v1104);
                                        let v1124 = constructor_output_xreg(ctx, v1123);
                                        let v1125 = Some(v1124);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1361.
                                        return v1125;
                                    }
                                    F64 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1126 = constructor_pulley_x64_from_f64_s(ctx, v1104);
                                        let v1127 = constructor_output_xreg(ctx, v1126);
                                        let v1128 = Some(v1127);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1364.
                                        return v1128;
                                    }
                                    _ => {}
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToUintSat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I32 => {
                                let v746 = C::value_type(ctx, v662);
                                match v746 {
                                    F32 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1165 = constructor_pulley_x32_from_f32_u_sat(ctx, v1104);
                                        let v1166 = constructor_output_xreg(ctx, v1165);
                                        let v1167 = Some(v1166);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1407.
                                        return v1167;
                                    }
                                    F64 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1168 = constructor_pulley_x32_from_f64_u_sat(ctx, v1104);
                                        let v1169 = constructor_output_xreg(ctx, v1168);
                                        let v1170 = Some(v1169);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1410.
                                        return v1170;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v746 = C::value_type(ctx, v662);
                                match v746 {
                                    F32 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1171 = constructor_pulley_x64_from_f32_u_sat(ctx, v1104);
                                        let v1172 = constructor_output_xreg(ctx, v1171);
                                        let v1173 = Some(v1172);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1413.
                                        return v1173;
                                    }
                                    F64 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1174 = constructor_pulley_x64_from_f64_u_sat(ctx, v1104);
                                        let v1175 = constructor_output_xreg(ctx, v1174);
                                        let v1176 = Some(v1175);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1416.
                                        return v1176;
                                    }
                                    _ => {}
                                }
                            }
                            I32X4 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == F32X4 {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1192 = constructor_pulley_vi32x4_from_f32x4_u(ctx, v670);
                                    let v1193 = constructor_output_vreg(ctx, v1192);
                                    let v1194 = Some(v1193);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1434.
                                    return v1194;
                                }
                            }
                            I64X2 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == F64X2 {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1198 = constructor_pulley_vi64x2_from_f64x2_u(ctx, v670);
                                    let v1199 = constructor_output_vreg(ctx, v1198);
                                    let v1200 = Some(v1199);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1440.
                                    return v1200;
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtToSintSat => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            I32 => {
                                let v746 = C::value_type(ctx, v662);
                                match v746 {
                                    F32 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1177 = constructor_pulley_x32_from_f32_s_sat(ctx, v1104);
                                        let v1178 = constructor_output_xreg(ctx, v1177);
                                        let v1179 = Some(v1178);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1419.
                                        return v1179;
                                    }
                                    F64 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1180 = constructor_pulley_x32_from_f64_s_sat(ctx, v1104);
                                        let v1181 = constructor_output_xreg(ctx, v1180);
                                        let v1182 = Some(v1181);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1422.
                                        return v1182;
                                    }
                                    _ => {}
                                }
                            }
                            I64 => {
                                let v746 = C::value_type(ctx, v662);
                                match v746 {
                                    F32 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1183 = constructor_pulley_x64_from_f32_s_sat(ctx, v1104);
                                        let v1184 = constructor_output_xreg(ctx, v1183);
                                        let v1185 = Some(v1184);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1425.
                                        return v1185;
                                    }
                                    F64 => {
                                        let v1104 = constructor_put_in_freg(ctx, v662);
                                        let v1186 = constructor_pulley_x64_from_f64_s_sat(ctx, v1104);
                                        let v1187 = constructor_output_xreg(ctx, v1186);
                                        let v1188 = Some(v1187);
                                        // Rule at src/isa/pulley_shared/lower.isle line 1428.
                                        return v1188;
                                    }
                                    _ => {}
                                }
                            }
                            I32X4 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == F32X4 {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1189 = constructor_pulley_vi32x4_from_f32x4_s(ctx, v670);
                                    let v1190 = constructor_output_vreg(ctx, v1189);
                                    let v1191 = Some(v1190);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1431.
                                    return v1191;
                                }
                            }
                            I64X2 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == F64X2 {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1195 = constructor_pulley_vi64x2_from_f64x2_s(ctx, v670);
                                    let v1196 = constructor_output_vreg(ctx, v1195);
                                    let v1197 = Some(v1196);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1437.
                                    return v1197;
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtFromUint => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == I64 {
                                    let v663 = constructor_put_in_xreg(ctx, v662);
                                    let v1132 = constructor_pulley_f32_from_x64_u(ctx, v663);
                                    let v1133 = constructor_output_freg(ctx, v1132);
                                    let v1134 = Some(v1133);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1372.
                                    return v1134;
                                }
                                let v747 = C::fits_in_32(ctx, v746);
                                if let Some(v748) = v747 {
                                    let v749 = constructor_zext32(ctx, v662);
                                    let v1129 = constructor_pulley_f32_from_x32_u(ctx, v749);
                                    let v1130 = constructor_output_freg(ctx, v1129);
                                    let v1131 = Some(v1130);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1369.
                                    return v1131;
                                }
                            }
                            F64 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == I64 {
                                    let v663 = constructor_put_in_xreg(ctx, v662);
                                    let v1138 = constructor_pulley_f64_from_x64_u(ctx, v663);
                                    let v1139 = constructor_output_freg(ctx, v1138);
                                    let v1140 = Some(v1139);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1378.
                                    return v1140;
                                }
                                let v747 = C::fits_in_32(ctx, v746);
                                if let Some(v748) = v747 {
                                    let v749 = constructor_zext32(ctx, v662);
                                    let v1135 = constructor_pulley_f64_from_x32_u(ctx, v749);
                                    let v1136 = constructor_output_freg(ctx, v1135);
                                    let v1137 = Some(v1136);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1375.
                                    return v1137;
                                }
                            }
                            F32X4 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == I32X4 {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1156 = constructor_pulley_vf32x4_from_i32x4_u(ctx, v670);
                                    let v1157 = constructor_output_vreg(ctx, v1156);
                                    let v1158 = Some(v1157);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1396.
                                    return v1158;
                                }
                            }
                            F64X2 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == I64X2 {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1162 = constructor_pulley_vf64x2_from_i64x2_u(ctx, v670);
                                    let v1163 = constructor_output_vreg(ctx, v1162);
                                    let v1164 = Some(v1163);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1402.
                                    return v1164;
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::FcvtFromSint => {
                    let v130 = C::first_result(ctx, arg0);
                    if let Some(v131) = v130 {
                        let v132 = C::value_type(ctx, v131);
                        match v132 {
                            F32 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == I64 {
                                    let v663 = constructor_put_in_xreg(ctx, v662);
                                    let v1144 = constructor_pulley_f32_from_x64_s(ctx, v663);
                                    let v1145 = constructor_output_freg(ctx, v1144);
                                    let v1146 = Some(v1145);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1384.
                                    return v1146;
                                }
                                let v747 = C::fits_in_32(ctx, v746);
                                if let Some(v748) = v747 {
                                    let v1008 = constructor_sext32(ctx, v662);
                                    let v1141 = constructor_pulley_f32_from_x32_s(ctx, v1008);
                                    let v1142 = constructor_output_freg(ctx, v1141);
                                    let v1143 = Some(v1142);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1381.
                                    return v1143;
                                }
                            }
                            F64 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == I64 {
                                    let v663 = constructor_put_in_xreg(ctx, v662);
                                    let v1150 = constructor_pulley_f64_from_x64_s(ctx, v663);
                                    let v1151 = constructor_output_freg(ctx, v1150);
                                    let v1152 = Some(v1151);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1390.
                                    return v1152;
                                }
                                let v747 = C::fits_in_32(ctx, v746);
                                if let Some(v748) = v747 {
                                    let v1008 = constructor_sext32(ctx, v662);
                                    let v1147 = constructor_pulley_f64_from_x32_s(ctx, v1008);
                                    let v1148 = constructor_output_freg(ctx, v1147);
                                    let v1149 = Some(v1148);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1387.
                                    return v1149;
                                }
                            }
                            F32X4 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == I32X4 {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1153 = constructor_pulley_vf32x4_from_i32x4_s(ctx, v670);
                                    let v1154 = constructor_output_vreg(ctx, v1153);
                                    let v1155 = Some(v1154);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1393.
                                    return v1155;
                                }
                            }
                            F64X2 => {
                                let v746 = C::value_type(ctx, v662);
                                if v746 == I64X2 {
                                    let v670 = constructor_put_in_vreg(ctx, v662);
                                    let v1159 = constructor_pulley_vf64x2_from_i64x2_s(ctx, v670);
                                    let v1160 = constructor_output_vreg(ctx, v1159);
                                    let v1161 = Some(v1160);
                                    // Rule at src/isa/pulley_shared/lower.isle line 1399.
                                    return v1161;
                                }
                            }
                            _ => {}
                        }
                    }
                }
                &Opcode::Isplit => {
                    let v746 = C::value_type(ctx, v662);
                    if v746 == I128 {
                        let v1033 = C::put_in_regs(ctx, v662);
                        let v1034 = C::value_regs_get(ctx, v1033, 0x0_usize);
                        let v1035 = C::xreg_new(ctx, v1034);
                        let v1036 = C::put_in_regs(ctx, v662);
                        let v1037 = C::value_regs_get(ctx, v1036, 0x1_usize);
                        let v1038 = C::xreg_new(ctx, v1037);
                        let v1039 = C::xreg_to_reg(ctx, v1035);
                        let v1040 = C::value_reg(ctx, v1039);
                        let v1041 = C::xreg_to_reg(ctx, v1038);
                        let v1042 = C::value_reg(ctx, v1041);
                        let v1043 = C::output_pair(ctx, v1040, v1042);
                        let v1044 = Some(v1043);
                        // Rule at src/isa/pulley_shared/lower.isle line 1229.
                        return v1044;
                    }
                }
                _ => {}
            }
        }
        &InstructionData::UnaryConst {
            opcode: ref v1389,
            constant_handle: v1390,
        } => {
            if let &Opcode::Vconst = v1389 {
                let v130 = C::first_result(ctx, arg0);
                if let Some(v131) = v130 {
                    let v132 = C::value_type(ctx, v131);
                    let v614 = C::ty_vec128(ctx, v132);
                    if let Some(v615) = v614 {
                        let v1391 = C::u128_from_constant(ctx, v1390);
                        if let Some(v1392) = v1391 {
                            let v1393 = constructor_pulley_vconst128(ctx, v1392);
                            let v1394 = constructor_output_vreg(ctx, v1393);
                            let v1395 = Some(v1394);
                            // Rule at src/isa/pulley_shared/lower.isle line 1574.
                            return v1395;
                        }
                    }
                }
            }
        }
        &InstructionData::UnaryIeee32 {
            opcode: ref v139,
            imm: v140,
        } => {
            if let &Opcode::F32const = v139 {
                let v141 = C::u32_from_ieee32(ctx, v140);
                let v143 = C::u32_as_u64(ctx, v141);
                let v144 = constructor_imm(ctx, F32, v143);
                let v145 = constructor_output_reg(ctx, v144);
                let v146 = Some(v145);
                // Rule at src/isa/pulley_shared/lower.isle line 236.
                return v146;
            }
        }
        &InstructionData::UnaryIeee64 {
            opcode: ref v147,
            imm: v148,
        } => {
            if let &Opcode::F64const = v147 {
                let v149 = C::u64_from_ieee64(ctx, v148);
                let v151 = constructor_imm(ctx, F64, v149);
                let v152 = constructor_output_reg(ctx, v151);
                let v153 = Some(v152);
                // Rule at src/isa/pulley_shared/lower.isle line 240.
                return v153;
            }
        }
        &InstructionData::UnaryImm {
            opcode: ref v133,
            imm: v134,
        } => {
            if let &Opcode::Iconst = v133 {
                let v130 = C::first_result(ctx, arg0);
                if let Some(v131) = v130 {
                    let v132 = C::value_type(ctx, v131);
                    let v135 = C::u64_from_imm64(ctx, v134);
                    let v136 = constructor_imm(ctx, v132, v135);
                    let v137 = constructor_output_reg(ctx, v136);
                    let v138 = Some(v137);
                    // Rule at src/isa/pulley_shared/lower.isle line 231.
                    return v138;
                }
            }
        }
        _ => {}
    }
    None
}

// Generated as internal constructor for term lower_cond.
pub fn constructor_lower_cond<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Cond {
    let v9 = C::def_inst(ctx, arg0);
    if let Some(v10) = v9 {
        let v11 = &C::inst_data(ctx, v10);
        match v11 {
            &InstructionData::IntCompare {
                opcode: ref v15,
                args: ref v16,
                cond: ref v17,
            } => {
                if let &Opcode::Icmp = v15 {
                    let v18 = C::unpack_value_array_2(ctx, v16);
                    let v21 = C::value_type(ctx, v18.1);
                    match v21 {
                        I32 => {
                            let v22 = &constructor_lower_cond_icmp32(ctx, v17, v18.0, v18.1);
                            // Rule at src/isa/pulley_shared/lower.isle line 21.
                            return v22.clone();
                        }
                        I64 => {
                            let v23 = &constructor_lower_cond_icmp64(ctx, v17, v18.0, v18.1);
                            // Rule at src/isa/pulley_shared/lower.isle line 22.
                            return v23.clone();
                        }
                        _ => {}
                    }
                }
            }
            &InstructionData::Unary {
                opcode: ref v12,
                arg: v13,
            } => {
                if let &Opcode::Uextend = v12 {
                    let v14 = &constructor_lower_cond(ctx, v13);
                    // Rule at src/isa/pulley_shared/lower.isle line 19.
                    return v14.clone();
                }
            }
            _ => {}
        }
    }
    let v1 = C::value_type(ctx, arg0);
    if v1 == I64 {
        let v6 = constructor_put_in_xreg(ctx, arg0);
        let v8 = Cond::IfXneq64I32 {
            src1: v6,
            src2: 0_i32,
        };
        // Rule at src/isa/pulley_shared/lower.isle line 15.
        return v8;
    }
    let v2 = C::fits_in_32(ctx, v1);
    if let Some(v3) = v2 {
        let v4 = constructor_zext32(ctx, arg0);
        let v5 = Cond::If32 {
            reg: v4,
        };
        // Rule at src/isa/pulley_shared/lower.isle line 14.
        return v5;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_cond", "src/isa/pulley_shared/lower.isle line 13")
}

// Generated as internal constructor for term lower_cond_icmp32.
pub fn constructor_lower_cond_icmp32<C: Context>(
    ctx: &mut C,
    arg0: &IntCC,
    arg1: Value,
    arg2: Value,
) -> Cond {
    match arg0 {
        &IntCC::Equal => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v19 = Cond::IfXeq32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 37.
                return v19;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v5 = Cond::IfXeq32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 25.
            return v5;
        }
        &IntCC::NotEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v20 = Cond::IfXneq32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 39.
                return v20;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v6 = Cond::IfXneq32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 26.
            return v6;
        }
        &IntCC::SignedGreaterThan => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v23 = Cond::IfXsgt32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 45.
                return v23;
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v13 = Cond::IfXslt32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 32.
            return v13;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v24 = Cond::IfXsgteq32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 47.
                return v24;
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v14 = Cond::IfXslteq32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 33.
            return v14;
        }
        &IntCC::SignedLessThan => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v21 = Cond::IfXslt32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 41.
                return v21;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v7 = Cond::IfXslt32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 27.
            return v7;
        }
        &IntCC::SignedLessThanOrEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v22 = Cond::IfXslteq32I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 43.
                return v22;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v8 = Cond::IfXslteq32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 28.
            return v8;
        }
        &IntCC::UnsignedGreaterThan => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v35 = Cond::IfXugt32I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 53.
                            return v35;
                        }
                    }
                }
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v15 = Cond::IfXult32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 34.
            return v15;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v36 = Cond::IfXugteq32I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 55.
                            return v36;
                        }
                    }
                }
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v16 = Cond::IfXulteq32 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 35.
            return v16;
        }
        &IntCC::UnsignedLessThan => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v33 = Cond::IfXult32I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 49.
                            return v33;
                        }
                    }
                }
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v9 = Cond::IfXult32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 29.
            return v9;
        }
        &IntCC::UnsignedLessThanOrEqual => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v34 = Cond::IfXulteq32I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 51.
                            return v34;
                        }
                    }
                }
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v10 = Cond::IfXulteq32 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 30.
            return v10;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_cond_icmp32", "src/isa/pulley_shared/lower.isle line 24")
}

// Generated as internal constructor for term lower_cond_icmp64.
pub fn constructor_lower_cond_icmp64<C: Context>(
    ctx: &mut C,
    arg0: &IntCC,
    arg1: Value,
    arg2: Value,
) -> Cond {
    match arg0 {
        &IntCC::Equal => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v19 = Cond::IfXeq64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 71.
                return v19;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v5 = Cond::IfXeq64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 59.
            return v5;
        }
        &IntCC::NotEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v20 = Cond::IfXneq64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 73.
                return v20;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v6 = Cond::IfXneq64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 60.
            return v6;
        }
        &IntCC::SignedGreaterThan => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v23 = Cond::IfXsgt64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 79.
                return v23;
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v13 = Cond::IfXslt64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 66.
            return v13;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v24 = Cond::IfXsgteq64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 81.
                return v24;
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v14 = Cond::IfXslteq64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 67.
            return v14;
        }
        &IntCC::SignedLessThan => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v21 = Cond::IfXslt64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 75.
                return v21;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v7 = Cond::IfXslt64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 61.
            return v7;
        }
        &IntCC::SignedLessThanOrEqual => {
            let v17 = C::i32_from_iconst(ctx, arg2);
            if let Some(v18) = v17 {
                let v3 = constructor_put_in_xreg(ctx, arg1);
                let v22 = Cond::IfXslteq64I32 {
                    src1: v3,
                    src2: v18,
                };
                // Rule at src/isa/pulley_shared/lower.isle line 77.
                return v22;
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v8 = Cond::IfXslteq64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 62.
            return v8;
        }
        &IntCC::UnsignedGreaterThan => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v35 = Cond::IfXugt64I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 87.
                            return v35;
                        }
                    }
                }
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v15 = Cond::IfXult64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 68.
            return v15;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v36 = Cond::IfXugteq64I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 89.
                            return v36;
                        }
                    }
                }
            }
            let v11 = constructor_put_in_xreg(ctx, arg2);
            let v12 = constructor_put_in_xreg(ctx, arg1);
            let v16 = Cond::IfXulteq64 {
                src1: v11,
                src2: v12,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 69.
            return v16;
        }
        &IntCC::UnsignedLessThan => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v33 = Cond::IfXult64I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 83.
                            return v33;
                        }
                    }
                }
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v9 = Cond::IfXult64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 63.
            return v9;
        }
        &IntCC::UnsignedLessThanOrEqual => {
            let v25 = C::def_inst(ctx, arg2);
            if let Some(v26) = v25 {
                let v27 = &C::inst_data(ctx, v26);
                if let &InstructionData::UnaryImm {
                    opcode: ref v28,
                    imm: v29,
                } = v27 {
                    if let &Opcode::Iconst = v28 {
                        let v30 = C::u64_from_imm64(ctx, v29);
                        let v31 = C::u64_as_u32(ctx, v30);
                        if let Some(v32) = v31 {
                            let v3 = constructor_put_in_xreg(ctx, arg1);
                            let v34 = Cond::IfXulteq64I32 {
                                src1: v3,
                                src2: v32,
                            };
                            // Rule at src/isa/pulley_shared/lower.isle line 85.
                            return v34;
                        }
                    }
                }
            }
            let v3 = constructor_put_in_xreg(ctx, arg1);
            let v4 = constructor_put_in_xreg(ctx, arg2);
            let v10 = Cond::IfXulteq64 {
                src1: v3,
                src2: v4,
            };
            // Rule at src/isa/pulley_shared/lower.isle line 64.
            return v10;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_cond_icmp64", "src/isa/pulley_shared/lower.isle line 58")
}

// Generated as internal constructor for term lower_branch.
pub fn constructor_lower_branch<C: Context>(
    ctx: &mut C,
    arg0: Inst,
    arg1: &MachLabelSlice,
) -> Option<Unit> {
    let v1 = &C::inst_data(ctx, arg0);
    match v1 {
        &InstructionData::BranchTable {
            opcode: ref v24,
            arg: v25,
            table: v26,
        } => {
            if let &Opcode::BrTable = v24 {
                let v27 = C::jump_table_targets(ctx, arg1);
                if let Some(v28) = v27 {
                    let v31 = constructor_put_in_xreg(ctx, v25);
                    let v32 = constructor_gen_br_table(ctx, v31, v28.0, &v28.1);
                    let v33 = Some(v32);
                    // Rule at src/isa/pulley_shared/lower.isle line 105.
                    return v33;
                }
            }
        }
        &InstructionData::Brif {
            opcode: ref v10,
            arg: v11,
            blocks: ref v12,
        } => {
            if let &Opcode::Brif = v10 {
                let v16 = C::two_targets(ctx, arg1);
                if let Some(v17) = v16 {
                    let v20 = &constructor_lower_cond(ctx, v11);
                    let v21 = &constructor_pulley_br_if(ctx, v20, v17.0, v17.1);
                    let v22 = constructor_emit_side_effect(ctx, v21);
                    let v23 = Some(v22);
                    // Rule at src/isa/pulley_shared/lower.isle line 101.
                    return v23;
                }
            }
        }
        &InstructionData::Jump {
            opcode: ref v2,
            destination: v3,
        } => {
            if let &Opcode::Jump = v2 {
                let v5 = C::single_target(ctx, arg1);
                if let Some(v6) = v5 {
                    let v7 = &constructor_pulley_jump(ctx, v6);
                    let v8 = constructor_emit_side_effect(ctx, v7);
                    let v9 = Some(v8);
                    // Rule at src/isa/pulley_shared/lower.isle line 97.
                    return v9;
                }
            }
        }
        _ => {}
    }
    None
}

// Generated as internal constructor for term emit_xbc32.
pub fn constructor_emit_xbc32<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Value,
    arg2: u8,
    arg3: &TrapCode,
) -> SideEffectNoResult {
    let v7 = &constructor_sinkable_load(ctx, arg1);
    if let Some(v8) = v7 {
        let v9 = &constructor_sink_load(ctx, v8);
        let v10 = &constructor_emit_xbc32_sunk(ctx, arg0, v9, arg2, arg3);
        // Rule at src/isa/pulley_shared/lower.isle line 175.
        return v10.clone();
    }
    let v4 = constructor_put_in_xreg(ctx, arg0);
    let v5 = constructor_put_in_xreg(ctx, arg1);
    let v6 = &constructor_pulley_xbc32_bound_trap(ctx, v4, v5, arg2, arg3);
    // Rule at src/isa/pulley_shared/lower.isle line 173.
    return v6.clone();
}

// Generated as internal constructor for term emit_xbc32_sunk.
pub fn constructor_emit_xbc32_sunk<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: &SunkLoad,
    arg2: u8,
    arg3: &TrapCode,
) -> SideEffectNoResult {
    if let &SunkLoad::Load {
        ty: v2,
        addr: v3,
        offset: v4,
    } = arg1 {
        let v7 = constructor_put_in_xreg(ctx, arg0);
        let v8 = constructor_put_in_xreg(ctx, v3);
        let v9 = &constructor_pulley_xbc32_boundne_trap(ctx, v7, v8, v4, arg2, arg3);
        // Rule at src/isa/pulley_shared/lower.isle line 180.
        return v9.clone();
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_xbc32_sunk", "src/isa/pulley_shared/lower.isle line 179")
}

// Generated as internal constructor for term emit_xbc32_strict.
pub fn constructor_emit_xbc32_strict<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Value,
    arg2: &TrapCode,
) -> SideEffectNoResult {
    let v6 = &constructor_sinkable_load(ctx, arg1);
    if let Some(v7) = v6 {
        let v8 = &constructor_sink_load(ctx, v7);
        let v9 = &constructor_emit_xbc32_strict_sunk(ctx, arg0, v8, arg2);
        // Rule at src/isa/pulley_shared/lower.isle line 186.
        return v9.clone();
    }
    let v3 = constructor_put_in_xreg(ctx, arg0);
    let v4 = constructor_put_in_xreg(ctx, arg1);
    let v5 = &constructor_pulley_xbc32_strict_bound_trap(ctx, v3, v4, arg2);
    // Rule at src/isa/pulley_shared/lower.isle line 184.
    return v5.clone();
}

// Generated as internal constructor for term emit_xbc32_strict_sunk.
pub fn constructor_emit_xbc32_strict_sunk<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: &SunkLoad,
    arg2: &TrapCode,
) -> SideEffectNoResult {
    if let &SunkLoad::Load {
        ty: v2,
        addr: v3,
        offset: v4,
    } = arg1 {
        let v6 = constructor_put_in_xreg(ctx, arg0);
        let v7 = constructor_put_in_xreg(ctx, v3);
        let v8 = &constructor_pulley_xbc32_strict_boundne_trap(ctx, v6, v7, v4, arg2);
        // Rule at src/isa/pulley_shared/lower.isle line 191.
        return v8.clone();
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_xbc32_strict_sunk", "src/isa/pulley_shared/lower.isle line 190")
}

// Generated as internal constructor for term u8_from_negated_iconst.
pub fn constructor_u8_from_negated_iconst<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<u8> {
    let v1 = C::i32_from_iconst(ctx, arg0);
    if let Some(v2) = v1 {
        let v3 = C::i32_as_i64(ctx, v2);
        let v4 = C::i64_neg(ctx, v3);
        let v5 = C::u64_try_from_i64(ctx, v4);
        if let Some(v6) = v5 {
            let v7 = C::u8_try_from_u64(ctx, v6);
            if let Some(v8) = v7 {
                let v9 = Some(v8);
                // Rule at src/isa/pulley_shared/lower.isle line 275.
                return v9;
            }
        }
    }
    None
}

// Generated as internal constructor for term u32_from_negated_iconst.
pub fn constructor_u32_from_negated_iconst<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<u32> {
    let v1 = C::i32_from_iconst(ctx, arg0);
    if let Some(v2) = v1 {
        let v3 = C::i32_as_i64(ctx, v2);
        let v4 = C::i64_neg(ctx, v3);
        let v5 = C::u64_try_from_i64(ctx, v4);
        if let Some(v6) = v5 {
            let v7 = C::u32_try_from_u64(ctx, v6);
            if let Some(v8) = v7 {
                let v9 = Some(v8);
                // Rule at src/isa/pulley_shared/lower.isle line 284.
                return v9;
            }
        }
    }
    None
}

// Generated as internal constructor for term u6_shift_from_iconst.
pub fn constructor_u6_shift_from_iconst<C: Context>(
    ctx: &mut C,
    arg0: Value,
) -> Option<U6> {
    let v1 = C::def_inst(ctx, arg0);
    if let Some(v2) = v1 {
        let v3 = &C::inst_data(ctx, v2);
        if let &InstructionData::UnaryImm {
            opcode: ref v4,
            imm: v5,
        } = v3 {
            if let &Opcode::Iconst = v4 {
                let v6 = C::u64_from_imm64(ctx, v5);
                let v8 = C::u64_and(ctx, v6, 0x3f_u64);
                let v9 = C::u64_as_u8(ctx, v8);
                let v10 = C::u6_from_u8(ctx, v9);
                if let Some(v11) = v10 {
                    let v12 = Some(v11);
                    // Rule at src/isa/pulley_shared/lower.isle line 526.
                    return v12;
                }
            }
        }
    }
    None
}

// Generated as internal constructor for term lower_icmp.
pub fn constructor_lower_icmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &IntCC,
    arg2: Value,
    arg3: Value,
) -> XReg {
    if arg0 == I128 {
        let v58 = &C::intcc_unsigned(ctx, arg1);
        if let &IntCC::UnsignedLessThan = v58 {
            let v32 = C::put_in_regs(ctx, arg2);
            let v34 = C::value_regs_get(ctx, v32, 0x0_usize);
            let v35 = C::xreg_new(ctx, v34);
            let v59 = C::put_in_regs(ctx, arg2);
            let v60 = C::value_regs_get(ctx, v59, 0x1_usize);
            let v61 = C::xreg_new(ctx, v60);
            let v62 = C::put_in_regs(ctx, arg3);
            let v63 = C::value_regs_get(ctx, v62, 0x0_usize);
            let v64 = C::xreg_new(ctx, v63);
            let v65 = C::put_in_regs(ctx, arg3);
            let v66 = C::value_regs_get(ctx, v65, 0x1_usize);
            let v67 = C::xreg_new(ctx, v66);
            let v68 = constructor_lower_icmp128_hi(ctx, arg1, v61, v67);
            let v69 = constructor_pulley_xult64(ctx, v35, v64);
            let v70 = constructor_pulley_xbxor64(ctx, v61, v67);
            let v50 = constructor_pulley_xconst8(ctx, 0_i8);
            let v71 = constructor_pulley_xeq64(ctx, v70, v50);
            let v72 = constructor_pulley_xselect32(ctx, v71, v69, v68);
            // Rule at src/isa/pulley_shared/lower.isle line 829.
            return v72;
        }
        match arg1 {
            &IntCC::SignedGreaterThanOrEqual => {
                let v54 = &C::intcc_complement(ctx, arg1);
                let v55 = constructor_lower_icmp(ctx, I128, v54, arg2, arg3);
                let v57 = constructor_pulley_xbxor32_s8(ctx, v55, 1_i8);
                // Rule at src/isa/pulley_shared/lower.isle line 818.
                return v57;
            }
            &IntCC::SignedLessThanOrEqual => {
                let v54 = &C::intcc_complement(ctx, arg1);
                let v55 = constructor_lower_icmp(ctx, I128, v54, arg2, arg3);
                let v57 = constructor_pulley_xbxor32_s8(ctx, v55, 1_i8);
                // Rule at src/isa/pulley_shared/lower.isle line 816.
                return v57;
            }
            &IntCC::UnsignedGreaterThanOrEqual => {
                let v54 = &C::intcc_complement(ctx, arg1);
                let v55 = constructor_lower_icmp(ctx, I128, v54, arg2, arg3);
                let v57 = constructor_pulley_xbxor32_s8(ctx, v55, 1_i8);
                // Rule at src/isa/pulley_shared/lower.isle line 822.
                return v57;
            }
            &IntCC::UnsignedLessThanOrEqual => {
                let v54 = &C::intcc_complement(ctx, arg1);
                let v55 = constructor_lower_icmp(ctx, I128, v54, arg2, arg3);
                let v57 = constructor_pulley_xbxor32_s8(ctx, v55, 1_i8);
                // Rule at src/isa/pulley_shared/lower.isle line 820.
                return v57;
            }
            _ => {}
        }
    }
    match arg1 {
        &IntCC::Equal => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v14 = constructor_zext32(ctx, arg2);
                let v15 = constructor_zext32(ctx, arg3);
                let v16 = constructor_pulley_xeq32(ctx, v14, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 762.
                return v16;
            }
            match arg0 {
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v6 = constructor_pulley_xeq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 744.
                    return v6;
                }
                I128 => {
                    let v32 = C::put_in_regs(ctx, arg2);
                    let v34 = C::value_regs_get(ctx, v32, 0x0_usize);
                    let v35 = C::xreg_new(ctx, v34);
                    let v36 = C::put_in_regs(ctx, arg3);
                    let v37 = C::value_regs_get(ctx, v36, 0x0_usize);
                    let v38 = C::xreg_new(ctx, v37);
                    let v39 = constructor_pulley_xbxor64(ctx, v35, v38);
                    let v40 = C::put_in_regs(ctx, arg2);
                    let v42 = C::value_regs_get(ctx, v40, 0x1_usize);
                    let v43 = C::xreg_new(ctx, v42);
                    let v44 = C::put_in_regs(ctx, arg3);
                    let v45 = C::value_regs_get(ctx, v44, 0x1_usize);
                    let v46 = C::xreg_new(ctx, v45);
                    let v47 = constructor_pulley_xbxor64(ctx, v43, v46);
                    let v48 = constructor_pulley_xbor64(ctx, v39, v47);
                    let v50 = constructor_pulley_xconst8(ctx, 0_i8);
                    let v51 = constructor_pulley_xeq64(ctx, v48, v50);
                    // Rule at src/isa/pulley_shared/lower.isle line 800.
                    return v51;
                }
                _ => {}
            }
        }
        &IntCC::NotEqual => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v14 = constructor_zext32(ctx, arg2);
                let v15 = constructor_zext32(ctx, arg3);
                let v17 = constructor_pulley_xneq32(ctx, v14, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 765.
                return v17;
            }
            match arg0 {
                I64 => {
                    let v4 = constructor_put_in_xreg(ctx, arg2);
                    let v5 = constructor_put_in_xreg(ctx, arg3);
                    let v7 = constructor_pulley_xneq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 747.
                    return v7;
                }
                I128 => {
                    let v32 = C::put_in_regs(ctx, arg2);
                    let v34 = C::value_regs_get(ctx, v32, 0x0_usize);
                    let v35 = C::xreg_new(ctx, v34);
                    let v36 = C::put_in_regs(ctx, arg3);
                    let v37 = C::value_regs_get(ctx, v36, 0x0_usize);
                    let v38 = C::xreg_new(ctx, v37);
                    let v39 = constructor_pulley_xbxor64(ctx, v35, v38);
                    let v40 = C::put_in_regs(ctx, arg2);
                    let v42 = C::value_regs_get(ctx, v40, 0x1_usize);
                    let v43 = C::xreg_new(ctx, v42);
                    let v44 = C::put_in_regs(ctx, arg3);
                    let v45 = C::value_regs_get(ctx, v44, 0x1_usize);
                    let v46 = C::xreg_new(ctx, v45);
                    let v47 = constructor_pulley_xbxor64(ctx, v43, v46);
                    let v48 = constructor_pulley_xbor64(ctx, v39, v47);
                    let v50 = constructor_pulley_xconst8(ctx, 0_i8);
                    let v52 = constructor_pulley_xneq64(ctx, v48, v50);
                    // Rule at src/isa/pulley_shared/lower.isle line 804.
                    return v52;
                }
                _ => {}
            }
        }
        &IntCC::SignedGreaterThan => {
            let v25 = constructor_lower_icmp(ctx, arg0, &IntCC::SignedLessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 782.
            return v25;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v27 = constructor_lower_icmp(ctx, arg0, &IntCC::SignedLessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 784.
            return v27;
        }
        &IntCC::SignedLessThan => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v18 = constructor_sext32(ctx, arg2);
                let v19 = constructor_sext32(ctx, arg3);
                let v20 = constructor_pulley_xslt32(ctx, v18, v19);
                // Rule at src/isa/pulley_shared/lower.isle line 768.
                return v20;
            }
            if arg0 == I64 {
                let v4 = constructor_put_in_xreg(ctx, arg2);
                let v5 = constructor_put_in_xreg(ctx, arg3);
                let v8 = constructor_pulley_xslt64(ctx, v4, v5);
                // Rule at src/isa/pulley_shared/lower.isle line 750.
                return v8;
            }
        }
        &IntCC::SignedLessThanOrEqual => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v18 = constructor_sext32(ctx, arg2);
                let v19 = constructor_sext32(ctx, arg3);
                let v21 = constructor_pulley_xslteq32(ctx, v18, v19);
                // Rule at src/isa/pulley_shared/lower.isle line 771.
                return v21;
            }
            if arg0 == I64 {
                let v4 = constructor_put_in_xreg(ctx, arg2);
                let v5 = constructor_put_in_xreg(ctx, arg3);
                let v9 = constructor_pulley_xslteq64(ctx, v4, v5);
                // Rule at src/isa/pulley_shared/lower.isle line 753.
                return v9;
            }
        }
        &IntCC::UnsignedGreaterThan => {
            let v29 = constructor_lower_icmp(ctx, arg0, &IntCC::UnsignedLessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 786.
            return v29;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v31 = constructor_lower_icmp(ctx, arg0, &IntCC::UnsignedLessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 788.
            return v31;
        }
        &IntCC::UnsignedLessThan => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v14 = constructor_zext32(ctx, arg2);
                let v15 = constructor_zext32(ctx, arg3);
                let v22 = constructor_pulley_xult32(ctx, v14, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 774.
                return v22;
            }
            if arg0 == I64 {
                let v4 = constructor_put_in_xreg(ctx, arg2);
                let v5 = constructor_put_in_xreg(ctx, arg3);
                let v10 = constructor_pulley_xult64(ctx, v4, v5);
                // Rule at src/isa/pulley_shared/lower.isle line 756.
                return v10;
            }
        }
        &IntCC::UnsignedLessThanOrEqual => {
            let v12 = C::fits_in_32(ctx, arg0);
            if let Some(v13) = v12 {
                let v14 = constructor_zext32(ctx, arg2);
                let v15 = constructor_zext32(ctx, arg3);
                let v23 = constructor_pulley_xulteq32(ctx, v14, v15);
                // Rule at src/isa/pulley_shared/lower.isle line 777.
                return v23;
            }
            if arg0 == I64 {
                let v4 = constructor_put_in_xreg(ctx, arg2);
                let v5 = constructor_put_in_xreg(ctx, arg3);
                let v11 = constructor_pulley_xulteq64(ctx, v4, v5);
                // Rule at src/isa/pulley_shared/lower.isle line 759.
                return v11;
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_icmp", "src/isa/pulley_shared/lower.isle line 742")
}

// Generated as internal constructor for term lower_icmp128_hi.
pub fn constructor_lower_icmp128_hi<C: Context>(
    ctx: &mut C,
    arg0: &IntCC,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    match arg0 {
        &IntCC::SignedLessThan => {
            let v3 = constructor_pulley_xslt64(ctx, arg1, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 843.
            return v3;
        }
        &IntCC::UnsignedLessThan => {
            let v4 = constructor_pulley_xult64(ctx, arg1, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 844.
            return v4;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_icmp128_hi", "src/isa/pulley_shared/lower.isle line 842")
}

// Generated as internal constructor for term lower_vcmp.
pub fn constructor_lower_vcmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &IntCC,
    arg2: Value,
    arg3: Value,
) -> VReg {
    match arg1 {
        &IntCC::Equal => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v6 = constructor_pulley_veq8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 852.
                    return v6;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v12 = constructor_pulley_veq16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 858.
                    return v12;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v18 = constructor_pulley_veq32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 864.
                    return v18;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v24 = constructor_pulley_veq64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 870.
                    return v24;
                }
                _ => {}
            }
        }
        &IntCC::NotEqual => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v7 = constructor_pulley_vneq8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 853.
                    return v7;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v13 = constructor_pulley_vneq16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 859.
                    return v13;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v19 = constructor_pulley_vneq32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 865.
                    return v19;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v25 = constructor_pulley_vneq64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 871.
                    return v25;
                }
                _ => {}
            }
        }
        &IntCC::SignedGreaterThan => {
            let v30 = &C::intcc_swap_args(ctx, arg1);
            let v31 = constructor_lower_vcmp(ctx, arg0, v30, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 878.
            return v31;
        }
        &IntCC::SignedGreaterThanOrEqual => {
            let v30 = &C::intcc_swap_args(ctx, arg1);
            let v31 = constructor_lower_vcmp(ctx, arg0, v30, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 880.
            return v31;
        }
        &IntCC::SignedLessThan => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v8 = constructor_pulley_vslt8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 854.
                    return v8;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v14 = constructor_pulley_vslt16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 860.
                    return v14;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v20 = constructor_pulley_vslt32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 866.
                    return v20;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v26 = constructor_pulley_vslt64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 872.
                    return v26;
                }
                _ => {}
            }
        }
        &IntCC::SignedLessThanOrEqual => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v9 = constructor_pulley_vslteq8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 855.
                    return v9;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v15 = constructor_pulley_vslteq16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 861.
                    return v15;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v21 = constructor_pulley_vslteq32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 867.
                    return v21;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v27 = constructor_pulley_vslteq64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 873.
                    return v27;
                }
                _ => {}
            }
        }
        &IntCC::UnsignedGreaterThan => {
            let v30 = &C::intcc_swap_args(ctx, arg1);
            let v31 = constructor_lower_vcmp(ctx, arg0, v30, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 882.
            return v31;
        }
        &IntCC::UnsignedGreaterThanOrEqual => {
            let v30 = &C::intcc_swap_args(ctx, arg1);
            let v31 = constructor_lower_vcmp(ctx, arg0, v30, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 884.
            return v31;
        }
        &IntCC::UnsignedLessThan => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v10 = constructor_pulley_vult8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 856.
                    return v10;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v16 = constructor_pulley_vult16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 862.
                    return v16;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v22 = constructor_pulley_vult32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 868.
                    return v22;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v28 = constructor_pulley_vult64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 874.
                    return v28;
                }
                _ => {}
            }
        }
        &IntCC::UnsignedLessThanOrEqual => {
            match arg0 {
                I8X16 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v11 = constructor_pulley_vulteq8x16(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 857.
                    return v11;
                }
                I16X8 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v17 = constructor_pulley_vulteq16x8(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 863.
                    return v17;
                }
                I32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v23 = constructor_pulley_vulteq32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 869.
                    return v23;
                }
                I64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v29 = constructor_pulley_vulteq64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 875.
                    return v29;
                }
                _ => {}
            }
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_vcmp", "src/isa/pulley_shared/lower.isle line 851")
}

// Generated as internal constructor for term lower_fcmp.
pub fn constructor_lower_fcmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &FloatCC,
    arg2: Value,
    arg3: Value,
) -> XReg {
    match arg1 {
        &FloatCC::Equal => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v6 = constructor_pulley_feq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 897.
                    return v6;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v7 = constructor_pulley_feq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 898.
                    return v7;
                }
                _ => {}
            }
        }
        &FloatCC::GreaterThan => {
            let v23 = constructor_lower_fcmp(ctx, arg0, &FloatCC::LessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 916.
            return v23;
        }
        &FloatCC::GreaterThanOrEqual => {
            let v25 = constructor_lower_fcmp(ctx, arg0, &FloatCC::LessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 918.
            return v25;
        }
        &FloatCC::LessThan => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v10 = constructor_pulley_flt32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 901.
                    return v10;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v11 = constructor_pulley_flt64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 902.
                    return v11;
                }
                _ => {}
            }
        }
        &FloatCC::LessThanOrEqual => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v12 = constructor_pulley_flteq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 903.
                    return v12;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v13 = constructor_pulley_flteq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 904.
                    return v13;
                }
                _ => {}
            }
        }
        &FloatCC::NotEqual => {
            match arg0 {
                F32 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v8 = constructor_pulley_fneq32(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 899.
                    return v8;
                }
                F64 => {
                    let v4 = constructor_put_in_freg(ctx, arg2);
                    let v5 = constructor_put_in_freg(ctx, arg3);
                    let v9 = constructor_pulley_fneq64(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 900.
                    return v9;
                }
                _ => {}
            }
        }
        &FloatCC::Ordered => {
            let v15 = constructor_lower_fcmp(ctx, arg0, &FloatCC::Equal, arg2, arg2);
            let v16 = constructor_lower_fcmp(ctx, arg0, &FloatCC::Equal, arg3, arg3);
            let v17 = constructor_pulley_xband32(ctx, v15, v16);
            // Rule at src/isa/pulley_shared/lower.isle line 907.
            return v17;
        }
        &FloatCC::OrderedNotEqual => {
            let v19 = constructor_lower_fcmp(ctx, arg0, &FloatCC::LessThan, arg2, arg3);
            let v21 = constructor_lower_fcmp(ctx, arg0, &FloatCC::GreaterThan, arg2, arg3);
            let v22 = constructor_pulley_xbor32(ctx, v19, v21);
            // Rule at src/isa/pulley_shared/lower.isle line 911.
            return v22;
        }
        _ => {}
    }
    let v26 = C::floatcc_unordered(ctx, arg1);
    if v26 == true {
        let v27 = &C::floatcc_complement(ctx, arg1);
        let v28 = constructor_lower_fcmp(ctx, arg0, v27, arg2, arg3);
        let v30 = constructor_pulley_xbxor32_s8(ctx, v28, 1_i8);
        // Rule at src/isa/pulley_shared/lower.isle line 922.
        return v30;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_fcmp", "src/isa/pulley_shared/lower.isle line 895")
}

// Generated as internal constructor for term lower_vfcmp.
pub fn constructor_lower_vfcmp<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &FloatCC,
    arg2: Value,
    arg3: Value,
) -> VReg {
    match arg1 {
        &FloatCC::Equal => {
            match arg0 {
                F32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v6 = constructor_pulley_veqf32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 928.
                    return v6;
                }
                F64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v7 = constructor_pulley_veqf64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 929.
                    return v7;
                }
                _ => {}
            }
        }
        &FloatCC::GreaterThan => {
            let v19 = constructor_lower_vfcmp(ctx, arg0, &FloatCC::LessThan, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 947.
            return v19;
        }
        &FloatCC::GreaterThanOrEqual => {
            let v21 = constructor_lower_vfcmp(ctx, arg0, &FloatCC::LessThanOrEqual, arg3, arg2);
            // Rule at src/isa/pulley_shared/lower.isle line 949.
            return v21;
        }
        &FloatCC::LessThan => {
            match arg0 {
                F32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v10 = constructor_pulley_vltf32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 932.
                    return v10;
                }
                F64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v11 = constructor_pulley_vltf64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 933.
                    return v11;
                }
                _ => {}
            }
        }
        &FloatCC::LessThanOrEqual => {
            match arg0 {
                F32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v12 = constructor_pulley_vlteqf32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 934.
                    return v12;
                }
                F64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v13 = constructor_pulley_vlteqf64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 935.
                    return v13;
                }
                _ => {}
            }
        }
        &FloatCC::NotEqual => {
            match arg0 {
                F32X4 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v8 = constructor_pulley_vneqf32x4(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 930.
                    return v8;
                }
                F64X2 => {
                    let v4 = constructor_put_in_vreg(ctx, arg2);
                    let v5 = constructor_put_in_vreg(ctx, arg3);
                    let v9 = constructor_pulley_vneqf64x2(ctx, v4, v5);
                    // Rule at src/isa/pulley_shared/lower.isle line 931.
                    return v9;
                }
                _ => {}
            }
        }
        &FloatCC::Unordered => {
            let v15 = constructor_lower_vfcmp(ctx, arg0, &FloatCC::NotEqual, arg2, arg2);
            let v16 = constructor_lower_vfcmp(ctx, arg0, &FloatCC::NotEqual, arg3, arg3);
            let v17 = constructor_pulley_vbor128(ctx, v15, v16);
            // Rule at src/isa/pulley_shared/lower.isle line 937.
            return v17;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "lower_vfcmp", "src/isa/pulley_shared/lower.isle line 926")
}

// Generated as internal constructor for term gen_xload.
pub fn constructor_gen_xload<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
    arg2: MemFlags,
    arg3: Type,
    arg4: &ExtKind,
) -> XReg {
    let v7 = &C::endianness(ctx, arg2);
    if let &Endianness::Little = v7 {
        let v8 = &constructor_xload_g32_kind(ctx, arg3, arg4);
        if let Some(v9) = v8 {
            let v10 = &constructor_amode_special(ctx, arg0, arg1);
            if let Some(v11) = v10 {
                if let &AmodeSpecial::G32 {
                    base: v12,
                    addr: v13,
                    offset: v14,
                } = v11 {
                    let v15 = constructor_put_in_xreg(ctx, v12);
                    let v16 = constructor_zext32(ctx, v13);
                    let v17 = constructor_emit_xload_g32(ctx, v9, v15, v16, v14);
                    // Rule at src/isa/pulley_shared/lower.isle line 1034.
                    return v17;
                }
            }
        }
    }
    let v5 = &constructor_amode(ctx, arg0, arg1);
    let v6 = constructor_pulley_xload(ctx, v5, arg3, arg2, arg4);
    // Rule at src/isa/pulley_shared/lower.isle line 1030.
    return v6;
}

// Generated as internal constructor for term emit_xload_g32.
pub fn constructor_emit_xload_g32<C: Context>(
    ctx: &mut C,
    arg0: &XLoadG32,
    arg1: XReg,
    arg2: XReg,
    arg3: u8,
) -> XReg {
    match arg0 {
        &XLoadG32::U8 => {
            let v4 = constructor_pulley_xload8_u32_g32(ctx, arg1, arg2, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1041.
            return v4;
        }
        &XLoadG32::S8 => {
            let v5 = constructor_pulley_xload8_s32_g32(ctx, arg1, arg2, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1042.
            return v5;
        }
        &XLoadG32::U16 => {
            let v6 = constructor_pulley_xload16le_u32_g32(ctx, arg1, arg2, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1043.
            return v6;
        }
        &XLoadG32::S16 => {
            let v7 = constructor_pulley_xload16le_s32_g32(ctx, arg1, arg2, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1044.
            return v7;
        }
        &XLoadG32::U32 => {
            let v8 = constructor_pulley_xload32le_g32(ctx, arg1, arg2, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1045.
            return v8;
        }
        &XLoadG32::U64 => {
            let v9 = constructor_pulley_xload64le_g32(ctx, arg1, arg2, arg3);
            // Rule at src/isa/pulley_shared/lower.isle line 1046.
            return v9;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_xload_g32", "src/isa/pulley_shared/lower.isle line 1040")
}

// Generated as internal constructor for term xload_g32_kind.
pub fn constructor_xload_g32_kind<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: &ExtKind,
) -> Option<XLoadG32> {
    match arg0 {
        I8 => {
            match arg1 {
                &ExtKind::None => {
                    let v3 = Some(XLoadG32::U8);
                    // Rule at src/isa/pulley_shared/lower.isle line 1058.
                    return v3;
                }
                &ExtKind::Sign32 => {
                    let v5 = Some(XLoadG32::S8);
                    // Rule at src/isa/pulley_shared/lower.isle line 1060.
                    return v5;
                }
                &ExtKind::Zero32 => {
                    let v3 = Some(XLoadG32::U8);
                    // Rule at src/isa/pulley_shared/lower.isle line 1059.
                    return v3;
                }
                _ => {}
            }
        }
        I16 => {
            match arg1 {
                &ExtKind::None => {
                    let v7 = Some(XLoadG32::U16);
                    // Rule at src/isa/pulley_shared/lower.isle line 1061.
                    return v7;
                }
                &ExtKind::Sign32 => {
                    let v9 = Some(XLoadG32::S16);
                    // Rule at src/isa/pulley_shared/lower.isle line 1063.
                    return v9;
                }
                &ExtKind::Zero32 => {
                    let v7 = Some(XLoadG32::U16);
                    // Rule at src/isa/pulley_shared/lower.isle line 1062.
                    return v7;
                }
                _ => {}
            }
        }
        I32 => {
            match arg1 {
                &ExtKind::None => {
                    let v11 = Some(XLoadG32::U32);
                    // Rule at src/isa/pulley_shared/lower.isle line 1064.
                    return v11;
                }
                &ExtKind::Sign32 => {
                    let v11 = Some(XLoadG32::U32);
                    // Rule at src/isa/pulley_shared/lower.isle line 1066.
                    return v11;
                }
                &ExtKind::Zero32 => {
                    let v11 = Some(XLoadG32::U32);
                    // Rule at src/isa/pulley_shared/lower.isle line 1065.
                    return v11;
                }
                _ => {}
            }
        }
        I64 => {
            let v13 = Some(XLoadG32::U64);
            // Rule at src/isa/pulley_shared/lower.isle line 1067.
            return v13;
        }
        _ => {}
    }
    None
}

// Generated as internal constructor for term amode.
pub fn constructor_amode<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
) -> Amode {
    let v2 = &constructor_amode_base(ctx, arg0, arg1);
    if let &ValueOffset::Both {
        value: v3,
        offset: v4,
    } = v2 {
        let v5 = constructor_put_in_xreg(ctx, v3);
        let v6 = Amode::RegOffset {
            base: v5,
            offset: v4,
        };
        // Rule at src/isa/pulley_shared/lower.isle line 1070.
        return v6;
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "amode", "src/isa/pulley_shared/lower.isle line 1069")
}

// Generated as internal constructor for term amode_base.
pub fn constructor_amode_base<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
) -> ValueOffset {
    let v4 = C::def_inst(ctx, arg0);
    if let Some(v5) = v4 {
        let v6 = &C::inst_data(ctx, v5);
        if let &InstructionData::Binary {
            opcode: ref v7,
            args: ref v8,
        } = v6 {
            if let &Opcode::Iadd = v7 {
                let v9 = C::unpack_value_array_2(ctx, v8);
                let v12 = C::i32_from_iconst(ctx, v9.1);
                if let Some(v13) = v12 {
                    let v2 = C::offset32(ctx, arg1);
                    let v14 = C::s32_add_fallible(ctx, v13, v2);
                    if let Some(v15) = v14 {
                        let v16 = ValueOffset::Both {
                            value: v9.0,
                            offset: v15,
                        };
                        // Rule at src/isa/pulley_shared/lower.isle line 1083.
                        return v16;
                    }
                }
            }
        }
    }
    let v2 = C::offset32(ctx, arg1);
    let v3 = ValueOffset::Both {
        value: arg0,
        offset: v2,
    };
    // Rule at src/isa/pulley_shared/lower.isle line 1082.
    return v3;
}

// Generated as internal constructor for term amode_special.
pub fn constructor_amode_special<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Offset32,
) -> Option<AmodeSpecial> {
    let v2 = &constructor_amode_base(ctx, arg0, arg1);
    if let &ValueOffset::Both {
        value: v3,
        offset: v4,
    } = v2 {
        let v5 = C::def_inst(ctx, v3);
        if let Some(v6) = v5 {
            let v7 = &C::inst_data(ctx, v6);
            if let &InstructionData::Binary {
                opcode: ref v8,
                args: ref v9,
            } = v7 {
                if let &Opcode::Iadd = v8 {
                    let v18 = C::u8_try_from_i32(ctx, v4);
                    if let Some(v19) = v18 {
                        let v10 = C::unpack_value_array_2(ctx, v9);
                        let v22 = C::maybe_uextend(ctx, v10.0);
                        if let Some(v23) = v22 {
                            let v24 = C::value_type(ctx, v23);
                            let v25 = C::fits_in_32(ctx, v24);
                            if let Some(v26) = v25 {
                                let v27 = AmodeSpecial::G32 {
                                    base: v10.1,
                                    addr: v23,
                                    offset: v19,
                                };
                                let v28 = Some(v27);
                                // Rule at src/isa/pulley_shared/lower.isle line 1112.
                                return v28;
                            }
                        }
                        let v13 = C::maybe_uextend(ctx, v10.1);
                        if let Some(v14) = v13 {
                            let v15 = C::value_type(ctx, v14);
                            let v16 = C::fits_in_32(ctx, v15);
                            if let Some(v17) = v16 {
                                let v20 = AmodeSpecial::G32 {
                                    base: v10.0,
                                    addr: v14,
                                    offset: v19,
                                };
                                let v21 = Some(v20);
                                // Rule at src/isa/pulley_shared/lower.isle line 1106.
                                return v21;
                            }
                        }
                    }
                }
            }
        }
    }
    None
}

// Generated as internal constructor for term emit_store_i128.
pub fn constructor_emit_store_i128<C: Context>(
    ctx: &mut C,
    arg0: MemFlags,
    arg1: XReg,
    arg2: XReg,
    arg3: &Amode,
    arg4: &Amode,
) -> SideEffectNoResult {
    let v5 = &C::endianness(ctx, arg0);
    match v5 {
        &Endianness::Little => {
            let v7 = &constructor_pulley_xstore(ctx, arg3, arg1, I64, arg0);
            let v8 = constructor_side_effect(ctx, v7);
            let v9 = &constructor_pulley_xstore(ctx, arg4, arg2, I64, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1153.
            return v9.clone();
        }
        &Endianness::Big => {
            let v10 = &constructor_pulley_xstore(ctx, arg3, arg2, I64, arg0);
            let v11 = constructor_side_effect(ctx, v10);
            let v12 = &constructor_pulley_xstore(ctx, arg4, arg1, I64, arg0);
            // Rule at src/isa/pulley_shared/lower.isle line 1157.
            return v12.clone();
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_store_i128", "src/isa/pulley_shared/lower.isle line 1152")
}

// Generated as internal constructor for term gen_xstore.
pub fn constructor_gen_xstore<C: Context>(
    ctx: &mut C,
    arg0: Value,
    arg1: Value,
    arg2: Offset32,
    arg3: MemFlags,
    arg4: Type,
) -> SideEffectNoResult {
    let v8 = &C::endianness(ctx, arg3);
    if let &Endianness::Little = v8 {
        let v9 = &constructor_amode_special(ctx, arg1, arg2);
        if let Some(v10) = v9 {
            if let &AmodeSpecial::G32 {
                base: v11,
                addr: v12,
                offset: v13,
            } = v10 {
                let v14 = constructor_put_in_xreg(ctx, v11);
                let v15 = constructor_zext32(ctx, v12);
                let v16 = constructor_put_in_xreg(ctx, arg0);
                let v17 = &constructor_emit_xstore_g32(ctx, arg4, v14, v15, v13, v16);
                // Rule at src/isa/pulley_shared/lower.isle line 1170.
                return v17.clone();
            }
        }
    }
    let v5 = &constructor_amode(ctx, arg1, arg2);
    let v6 = constructor_put_in_xreg(ctx, arg0);
    let v7 = &constructor_pulley_xstore(ctx, v5, v6, arg4, arg3);
    // Rule at src/isa/pulley_shared/lower.isle line 1166.
    return v7.clone();
}

// Generated as internal constructor for term emit_xstore_g32.
pub fn constructor_emit_xstore_g32<C: Context>(
    ctx: &mut C,
    arg0: Type,
    arg1: XReg,
    arg2: XReg,
    arg3: u8,
    arg4: XReg,
) -> SideEffectNoResult {
    match arg0 {
        I8 => {
            let v5 = &constructor_pulley_xstore8_g32(ctx, arg1, arg2, arg3, arg4);
            // Rule at src/isa/pulley_shared/lower.isle line 1176.
            return v5.clone();
        }
        I16 => {
            let v6 = &constructor_pulley_xstore16le_g32(ctx, arg1, arg2, arg3, arg4);
            // Rule at src/isa/pulley_shared/lower.isle line 1177.
            return v6.clone();
        }
        I32 => {
            let v7 = &constructor_pulley_xstore32le_g32(ctx, arg1, arg2, arg3, arg4);
            // Rule at src/isa/pulley_shared/lower.isle line 1178.
            return v7.clone();
        }
        I64 => {
            let v8 = &constructor_pulley_xstore64le_g32(ctx, arg1, arg2, arg3, arg4);
            // Rule at src/isa/pulley_shared/lower.isle line 1179.
            return v8.clone();
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_xstore_g32", "src/isa/pulley_shared/lower.isle line 1175")
}

// Generated as internal constructor for term lower_stack_addr.
pub fn constructor_lower_stack_addr<C: Context>(
    ctx: &mut C,
    arg0: StackSlot,
    arg1: Offset32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = C::writable_xreg_to_writable_reg(ctx, v2);
    let v4 = &C::abi_stackslot_addr(ctx, v3, arg0, arg1);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at src/isa/pulley_shared/lower.isle line 1187.
    return v6;
}

// Generated as internal constructor for term emit_cond.
pub fn constructor_emit_cond<C: Context>(
    ctx: &mut C,
    arg0: &Cond,
) -> XReg {
    match arg0 {
        &Cond::If32 {
            reg: v1,
        } => {
            // Rule at src/isa/pulley_shared/lower.isle line 1261.
            return v1;
        }
        &Cond::IfNot32 {
            reg: v2,
        } => {
            let v4 = constructor_pulley_xconst8(ctx, 0_i8);
            let v5 = constructor_pulley_xeq32(ctx, v2, v4);
            // Rule at src/isa/pulley_shared/lower.isle line 1262.
            return v5;
        }
        &Cond::IfXeq32 {
            src1: v6,
            src2: v7,
        } => {
            let v8 = constructor_pulley_xeq32(ctx, v6, v7);
            // Rule at src/isa/pulley_shared/lower.isle line 1263.
            return v8;
        }
        &Cond::IfXneq32 {
            src1: v9,
            src2: v10,
        } => {
            let v11 = constructor_pulley_xneq32(ctx, v9, v10);
            // Rule at src/isa/pulley_shared/lower.isle line 1264.
            return v11;
        }
        &Cond::IfXslt32 {
            src1: v12,
            src2: v13,
        } => {
            let v14 = constructor_pulley_xslt32(ctx, v12, v13);
            // Rule at src/isa/pulley_shared/lower.isle line 1265.
            return v14;
        }
        &Cond::IfXslteq32 {
            src1: v15,
            src2: v16,
        } => {
            let v17 = constructor_pulley_xslteq32(ctx, v15, v16);
            // Rule at src/isa/pulley_shared/lower.isle line 1266.
            return v17;
        }
        &Cond::IfXult32 {
            src1: v18,
            src2: v19,
        } => {
            let v20 = constructor_pulley_xult32(ctx, v18, v19);
            // Rule at src/isa/pulley_shared/lower.isle line 1267.
            return v20;
        }
        &Cond::IfXulteq32 {
            src1: v21,
            src2: v22,
        } => {
            let v23 = constructor_pulley_xulteq32(ctx, v21, v22);
            // Rule at src/isa/pulley_shared/lower.isle line 1268.
            return v23;
        }
        &Cond::IfXeq32I32 {
            src1: v42,
            src2: v43,
        } => {
            let v45 = C::i32_as_i64(ctx, v43);
            let v46 = C::i64_as_u64(ctx, v45);
            let v47 = constructor_imm(ctx, I32, v46);
            let v48 = C::xreg_new(ctx, v47);
            let v49 = constructor_pulley_xeq32(ctx, v42, v48);
            // Rule at src/isa/pulley_shared/lower.isle line 1276.
            return v49;
        }
        &Cond::IfXneq32I32 {
            src1: v50,
            src2: v51,
        } => {
            let v52 = C::i32_as_i64(ctx, v51);
            let v53 = C::i64_as_u64(ctx, v52);
            let v54 = constructor_imm(ctx, I32, v53);
            let v55 = C::xreg_new(ctx, v54);
            let v56 = constructor_pulley_xneq32(ctx, v50, v55);
            // Rule at src/isa/pulley_shared/lower.isle line 1278.
            return v56;
        }
        &Cond::IfXslt32I32 {
            src1: v57,
            src2: v58,
        } => {
            let v59 = C::i32_as_i64(ctx, v58);
            let v60 = C::i64_as_u64(ctx, v59);
            let v61 = constructor_imm(ctx, I32, v60);
            let v62 = C::xreg_new(ctx, v61);
            let v63 = constructor_pulley_xslt32(ctx, v57, v62);
            // Rule at src/isa/pulley_shared/lower.isle line 1280.
            return v63;
        }
        &Cond::IfXslteq32I32 {
            src1: v64,
            src2: v65,
        } => {
            let v66 = C::i32_as_i64(ctx, v65);
            let v67 = C::i64_as_u64(ctx, v66);
            let v68 = constructor_imm(ctx, I32, v67);
            let v69 = C::xreg_new(ctx, v68);
            let v70 = constructor_pulley_xslteq32(ctx, v64, v69);
            // Rule at src/isa/pulley_shared/lower.isle line 1282.
            return v70;
        }
        &Cond::IfXult32I32 {
            src1: v71,
            src2: v72,
        } => {
            let v73 = C::u32_as_u64(ctx, v72);
            let v74 = constructor_imm(ctx, I32, v73);
            let v75 = C::xreg_new(ctx, v74);
            let v76 = constructor_pulley_xult32(ctx, v71, v75);
            // Rule at src/isa/pulley_shared/lower.isle line 1284.
            return v76;
        }
        &Cond::IfXulteq32I32 {
            src1: v77,
            src2: v78,
        } => {
            let v79 = C::u32_as_u64(ctx, v78);
            let v80 = constructor_imm(ctx, I32, v79);
            let v81 = C::xreg_new(ctx, v80);
            let v82 = constructor_pulley_xulteq32(ctx, v77, v81);
            // Rule at src/isa/pulley_shared/lower.isle line 1286.
            return v82;
        }
        &Cond::IfXsgt32I32 {
            src1: v83,
            src2: v84,
        } => {
            let v85 = C::i32_as_i64(ctx, v84);
            let v86 = C::i64_as_u64(ctx, v85);
            let v87 = constructor_imm(ctx, I32, v86);
            let v88 = C::xreg_new(ctx, v87);
            let v89 = constructor_pulley_xslt32(ctx, v88, v83);
            // Rule at src/isa/pulley_shared/lower.isle line 1290.
            return v89;
        }
        &Cond::IfXsgteq32I32 {
            src1: v90,
            src2: v91,
        } => {
            let v92 = C::i32_as_i64(ctx, v91);
            let v93 = C::i64_as_u64(ctx, v92);
            let v94 = constructor_imm(ctx, I32, v93);
            let v95 = C::xreg_new(ctx, v94);
            let v96 = constructor_pulley_xslteq32(ctx, v95, v90);
            // Rule at src/isa/pulley_shared/lower.isle line 1292.
            return v96;
        }
        &Cond::IfXugt32I32 {
            src1: v97,
            src2: v98,
        } => {
            let v99 = C::u32_as_u64(ctx, v98);
            let v100 = constructor_imm(ctx, I32, v99);
            let v101 = C::xreg_new(ctx, v100);
            let v102 = constructor_pulley_xult32(ctx, v101, v97);
            // Rule at src/isa/pulley_shared/lower.isle line 1294.
            return v102;
        }
        &Cond::IfXugteq32I32 {
            src1: v103,
            src2: v104,
        } => {
            let v105 = C::u32_as_u64(ctx, v104);
            let v106 = constructor_imm(ctx, I32, v105);
            let v107 = C::xreg_new(ctx, v106);
            let v108 = constructor_pulley_xulteq32(ctx, v107, v103);
            // Rule at src/isa/pulley_shared/lower.isle line 1296.
            return v108;
        }
        &Cond::IfXeq64 {
            src1: v24,
            src2: v25,
        } => {
            let v26 = constructor_pulley_xeq64(ctx, v24, v25);
            // Rule at src/isa/pulley_shared/lower.isle line 1269.
            return v26;
        }
        &Cond::IfXneq64 {
            src1: v27,
            src2: v28,
        } => {
            let v29 = constructor_pulley_xneq64(ctx, v27, v28);
            // Rule at src/isa/pulley_shared/lower.isle line 1270.
            return v29;
        }
        &Cond::IfXslt64 {
            src1: v30,
            src2: v31,
        } => {
            let v32 = constructor_pulley_xslt64(ctx, v30, v31);
            // Rule at src/isa/pulley_shared/lower.isle line 1271.
            return v32;
        }
        &Cond::IfXslteq64 {
            src1: v33,
            src2: v34,
        } => {
            let v35 = constructor_pulley_xslteq64(ctx, v33, v34);
            // Rule at src/isa/pulley_shared/lower.isle line 1272.
            return v35;
        }
        &Cond::IfXult64 {
            src1: v36,
            src2: v37,
        } => {
            let v38 = constructor_pulley_xult64(ctx, v36, v37);
            // Rule at src/isa/pulley_shared/lower.isle line 1273.
            return v38;
        }
        &Cond::IfXulteq64 {
            src1: v39,
            src2: v40,
        } => {
            let v41 = constructor_pulley_xulteq64(ctx, v39, v40);
            // Rule at src/isa/pulley_shared/lower.isle line 1274.
            return v41;
        }
        &Cond::IfXeq64I32 {
            src1: v109,
            src2: v110,
        } => {
            let v112 = C::i32_as_i64(ctx, v110);
            let v113 = C::i64_as_u64(ctx, v112);
            let v114 = constructor_imm(ctx, I64, v113);
            let v115 = C::xreg_new(ctx, v114);
            let v116 = constructor_pulley_xeq64(ctx, v109, v115);
            // Rule at src/isa/pulley_shared/lower.isle line 1299.
            return v116;
        }
        &Cond::IfXneq64I32 {
            src1: v117,
            src2: v118,
        } => {
            let v119 = C::i32_as_i64(ctx, v118);
            let v120 = C::i64_as_u64(ctx, v119);
            let v121 = constructor_imm(ctx, I64, v120);
            let v122 = C::xreg_new(ctx, v121);
            let v123 = constructor_pulley_xneq64(ctx, v117, v122);
            // Rule at src/isa/pulley_shared/lower.isle line 1301.
            return v123;
        }
        &Cond::IfXslt64I32 {
            src1: v124,
            src2: v125,
        } => {
            let v126 = C::i32_as_i64(ctx, v125);
            let v127 = C::i64_as_u64(ctx, v126);
            let v128 = constructor_imm(ctx, I64, v127);
            let v129 = C::xreg_new(ctx, v128);
            let v130 = constructor_pulley_xslt64(ctx, v124, v129);
            // Rule at src/isa/pulley_shared/lower.isle line 1303.
            return v130;
        }
        &Cond::IfXslteq64I32 {
            src1: v131,
            src2: v132,
        } => {
            let v133 = C::i32_as_i64(ctx, v132);
            let v134 = C::i64_as_u64(ctx, v133);
            let v135 = constructor_imm(ctx, I64, v134);
            let v136 = C::xreg_new(ctx, v135);
            let v137 = constructor_pulley_xslteq64(ctx, v131, v136);
            // Rule at src/isa/pulley_shared/lower.isle line 1305.
            return v137;
        }
        &Cond::IfXult64I32 {
            src1: v138,
            src2: v139,
        } => {
            let v140 = C::u32_as_u64(ctx, v139);
            let v141 = constructor_imm(ctx, I64, v140);
            let v142 = C::xreg_new(ctx, v141);
            let v143 = constructor_pulley_xult64(ctx, v138, v142);
            // Rule at src/isa/pulley_shared/lower.isle line 1307.
            return v143;
        }
        &Cond::IfXulteq64I32 {
            src1: v144,
            src2: v145,
        } => {
            let v146 = C::u32_as_u64(ctx, v145);
            let v147 = constructor_imm(ctx, I64, v146);
            let v148 = C::xreg_new(ctx, v147);
            let v149 = constructor_pulley_xulteq64(ctx, v144, v148);
            // Rule at src/isa/pulley_shared/lower.isle line 1309.
            return v149;
        }
        &Cond::IfXsgt64I32 {
            src1: v150,
            src2: v151,
        } => {
            let v152 = C::i32_as_i64(ctx, v151);
            let v153 = C::i64_as_u64(ctx, v152);
            let v154 = constructor_imm(ctx, I64, v153);
            let v155 = C::xreg_new(ctx, v154);
            let v156 = constructor_pulley_xslt64(ctx, v155, v150);
            // Rule at src/isa/pulley_shared/lower.isle line 1313.
            return v156;
        }
        &Cond::IfXsgteq64I32 {
            src1: v157,
            src2: v158,
        } => {
            let v159 = C::i32_as_i64(ctx, v158);
            let v160 = C::i64_as_u64(ctx, v159);
            let v161 = constructor_imm(ctx, I64, v160);
            let v162 = C::xreg_new(ctx, v161);
            let v163 = constructor_pulley_xslteq64(ctx, v162, v157);
            // Rule at src/isa/pulley_shared/lower.isle line 1315.
            return v163;
        }
        &Cond::IfXugt64I32 {
            src1: v164,
            src2: v165,
        } => {
            let v166 = C::u32_as_u64(ctx, v165);
            let v167 = constructor_imm(ctx, I64, v166);
            let v168 = C::xreg_new(ctx, v167);
            let v169 = constructor_pulley_xult64(ctx, v168, v164);
            // Rule at src/isa/pulley_shared/lower.isle line 1317.
            return v169;
        }
        &Cond::IfXugteq64I32 {
            src1: v170,
            src2: v171,
        } => {
            let v172 = C::u32_as_u64(ctx, v171);
            let v173 = constructor_imm(ctx, I64, v172);
            let v174 = C::xreg_new(ctx, v173);
            let v175 = constructor_pulley_xulteq64(ctx, v174, v170);
            // Rule at src/isa/pulley_shared/lower.isle line 1319.
            return v175;
        }
        _ => {}
    }
    unreachable!("no rule matched for term {} at {}; should it be partial?", "emit_cond", "src/isa/pulley_shared/lower.isle line 1260")
}

// Generated as internal constructor for term pulley_ret.
pub fn constructor_pulley_ret<C: Context>(
    ctx: &mut C,
) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::Ret);
    let v2 = SideEffectNoResult::Inst {
        inst: v1.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1718.
    return v2;
}

// Generated as internal constructor for term pulley_xjump.
pub fn constructor_pulley_xjump<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> SideEffectNoResult {
    let v1 = RawInst::XJump {
        reg: arg0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst {
        inst: v2.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1720.
    return v3;
}

// Generated as internal constructor for term pulley_xmov.
pub fn constructor_pulley_xmov<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xmov {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1722.
    return v5;
}

// Generated as internal constructor for term pulley_xzero.
pub fn constructor_pulley_xzero<C: Context>(
    ctx: &mut C,
) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::Xzero {
        dst: v0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1729.
    return v4;
}

// Generated as internal constructor for term pulley_xone.
pub fn constructor_pulley_xone<C: Context>(
    ctx: &mut C,
) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::Xone {
        dst: v0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1736.
    return v4;
}

// Generated as internal constructor for term pulley_xconst8.
pub fn constructor_pulley_xconst8<C: Context>(
    ctx: &mut C,
    arg0: i8,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst8 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1743.
    return v5;
}

// Generated as internal constructor for term pulley_xconst16.
pub fn constructor_pulley_xconst16<C: Context>(
    ctx: &mut C,
    arg0: i16,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst16 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1750.
    return v5;
}

// Generated as internal constructor for term pulley_xconst32.
pub fn constructor_pulley_xconst32<C: Context>(
    ctx: &mut C,
    arg0: i32,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst32 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1757.
    return v5;
}

// Generated as internal constructor for term pulley_xconst64.
pub fn constructor_pulley_xconst64<C: Context>(
    ctx: &mut C,
    arg0: i64,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xconst64 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1764.
    return v5;
}

// Generated as internal constructor for term pulley_xadd32.
pub fn constructor_pulley_xadd32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1771.
    return v6;
}

// Generated as internal constructor for term pulley_xadd32_u8.
pub fn constructor_pulley_xadd32_u8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd32U8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1778.
    return v6;
}

// Generated as internal constructor for term pulley_xadd32_u32.
pub fn constructor_pulley_xadd32_u32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd32U32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1785.
    return v6;
}

// Generated as internal constructor for term pulley_xadd64.
pub fn constructor_pulley_xadd64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1792.
    return v6;
}

// Generated as internal constructor for term pulley_xadd64_u8.
pub fn constructor_pulley_xadd64_u8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd64U8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1799.
    return v6;
}

// Generated as internal constructor for term pulley_xadd64_u32.
pub fn constructor_pulley_xadd64_u32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xadd64U32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1806.
    return v6;
}

// Generated as internal constructor for term pulley_xmadd32.
pub fn constructor_pulley_xmadd32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xmadd32 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        src3: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1813.
    return v7;
}

// Generated as internal constructor for term pulley_xmadd64.
pub fn constructor_pulley_xmadd64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xmadd64 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        src3: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1820.
    return v7;
}

// Generated as internal constructor for term pulley_xsub32.
pub fn constructor_pulley_xsub32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1827.
    return v6;
}

// Generated as internal constructor for term pulley_xsub32_u8.
pub fn constructor_pulley_xsub32_u8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub32U8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1834.
    return v6;
}

// Generated as internal constructor for term pulley_xsub32_u32.
pub fn constructor_pulley_xsub32_u32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub32U32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1841.
    return v6;
}

// Generated as internal constructor for term pulley_xsub64.
pub fn constructor_pulley_xsub64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1848.
    return v6;
}

// Generated as internal constructor for term pulley_xsub64_u8.
pub fn constructor_pulley_xsub64_u8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub64U8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1855.
    return v6;
}

// Generated as internal constructor for term pulley_xsub64_u32.
pub fn constructor_pulley_xsub64_u32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xsub64U32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1862.
    return v6;
}

// Generated as internal constructor for term pulley_xmul32.
pub fn constructor_pulley_xmul32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMul32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1869.
    return v6;
}

// Generated as internal constructor for term pulley_xmul32_s8.
pub fn constructor_pulley_xmul32_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmul32S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1876.
    return v6;
}

// Generated as internal constructor for term pulley_xmul32_s32.
pub fn constructor_pulley_xmul32_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmul32S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1883.
    return v6;
}

// Generated as internal constructor for term pulley_xmul64.
pub fn constructor_pulley_xmul64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMul64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1890.
    return v6;
}

// Generated as internal constructor for term pulley_xmul64_s8.
pub fn constructor_pulley_xmul64_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmul64S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1897.
    return v6;
}

// Generated as internal constructor for term pulley_xmul64_s32.
pub fn constructor_pulley_xmul64_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmul64S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1904.
    return v6;
}

// Generated as internal constructor for term pulley_xctz32.
pub fn constructor_pulley_xctz32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xctz32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1911.
    return v5;
}

// Generated as internal constructor for term pulley_xctz64.
pub fn constructor_pulley_xctz64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xctz64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1918.
    return v5;
}

// Generated as internal constructor for term pulley_xclz32.
pub fn constructor_pulley_xclz32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xclz32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1925.
    return v5;
}

// Generated as internal constructor for term pulley_xclz64.
pub fn constructor_pulley_xclz64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xclz64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1932.
    return v5;
}

// Generated as internal constructor for term pulley_xpopcnt32.
pub fn constructor_pulley_xpopcnt32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xpopcnt32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1939.
    return v5;
}

// Generated as internal constructor for term pulley_xpopcnt64.
pub fn constructor_pulley_xpopcnt64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xpopcnt64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1946.
    return v5;
}

// Generated as internal constructor for term pulley_xrotl32.
pub fn constructor_pulley_xrotl32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotl32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1953.
    return v6;
}

// Generated as internal constructor for term pulley_xrotl64.
pub fn constructor_pulley_xrotl64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotl64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1960.
    return v6;
}

// Generated as internal constructor for term pulley_xrotr32.
pub fn constructor_pulley_xrotr32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotr32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1967.
    return v6;
}

// Generated as internal constructor for term pulley_xrotr64.
pub fn constructor_pulley_xrotr64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xrotr64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1974.
    return v6;
}

// Generated as internal constructor for term pulley_xshl32.
pub fn constructor_pulley_xshl32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1981.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_s.
pub fn constructor_pulley_xshr32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1988.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_u.
pub fn constructor_pulley_xshr32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 1995.
    return v6;
}

// Generated as internal constructor for term pulley_xshl64.
pub fn constructor_pulley_xshl64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2002.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_s.
pub fn constructor_pulley_xshr64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2009.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_u.
pub fn constructor_pulley_xshr64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2016.
    return v6;
}

// Generated as internal constructor for term pulley_xshl32_u6.
pub fn constructor_pulley_xshl32_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl32U6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2023.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_s_u6.
pub fn constructor_pulley_xshr32_s_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32SU6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2030.
    return v6;
}

// Generated as internal constructor for term pulley_xshr32_u_u6.
pub fn constructor_pulley_xshr32_u_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr32UU6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2037.
    return v6;
}

// Generated as internal constructor for term pulley_xshl64_u6.
pub fn constructor_pulley_xshl64_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshl64U6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2044.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_s_u6.
pub fn constructor_pulley_xshr64_s_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64SU6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2051.
    return v6;
}

// Generated as internal constructor for term pulley_xshr64_u_u6.
pub fn constructor_pulley_xshr64_u_u6<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: U6,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xshr64UU6 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2058.
    return v6;
}

// Generated as internal constructor for term pulley_xneg32.
pub fn constructor_pulley_xneg32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xneg32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2065.
    return v5;
}

// Generated as internal constructor for term pulley_xneg64.
pub fn constructor_pulley_xneg64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xneg64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2072.
    return v5;
}

// Generated as internal constructor for term pulley_xeq64.
pub fn constructor_pulley_xeq64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xeq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2079.
    return v6;
}

// Generated as internal constructor for term pulley_xneq64.
pub fn constructor_pulley_xneq64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xneq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2086.
    return v6;
}

// Generated as internal constructor for term pulley_xslt64.
pub fn constructor_pulley_xslt64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslt64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2093.
    return v6;
}

// Generated as internal constructor for term pulley_xslteq64.
pub fn constructor_pulley_xslteq64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2100.
    return v6;
}

// Generated as internal constructor for term pulley_xult64.
pub fn constructor_pulley_xult64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xult64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2107.
    return v6;
}

// Generated as internal constructor for term pulley_xulteq64.
pub fn constructor_pulley_xulteq64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xulteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2114.
    return v6;
}

// Generated as internal constructor for term pulley_xeq32.
pub fn constructor_pulley_xeq32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xeq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2121.
    return v6;
}

// Generated as internal constructor for term pulley_xneq32.
pub fn constructor_pulley_xneq32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xneq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2128.
    return v6;
}

// Generated as internal constructor for term pulley_xslt32.
pub fn constructor_pulley_xslt32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslt32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2135.
    return v6;
}

// Generated as internal constructor for term pulley_xslteq32.
pub fn constructor_pulley_xslteq32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xslteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2142.
    return v6;
}

// Generated as internal constructor for term pulley_xult32.
pub fn constructor_pulley_xult32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xult32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2149.
    return v6;
}

// Generated as internal constructor for term pulley_xulteq32.
pub fn constructor_pulley_xulteq32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xulteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2156.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_u32_offset32.
pub fn constructor_pulley_xload8_u32_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8U32Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2163.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_s32_offset32.
pub fn constructor_pulley_xload8_s32_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8S32Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2170.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_u32_offset32.
pub fn constructor_pulley_xload16le_u32_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeU32Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2177.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_s32_offset32.
pub fn constructor_pulley_xload16le_s32_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeS32Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2184.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_offset32.
pub fn constructor_pulley_xload32le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2191.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_u64_offset32.
pub fn constructor_pulley_xload8_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8U64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2198.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_s64_offset32.
pub fn constructor_pulley_xload8_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8S64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2205.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_u64_offset32.
pub fn constructor_pulley_xload16le_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeU64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2212.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_s64_offset32.
pub fn constructor_pulley_xload16le_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeS64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2219.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_u64_offset32.
pub fn constructor_pulley_xload32le_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeU64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2226.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_s64_offset32.
pub fn constructor_pulley_xload32le_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeS64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2233.
    return v6;
}

// Generated as internal constructor for term pulley_xload64le_offset32.
pub fn constructor_pulley_xload64le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad64LeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2240.
    return v6;
}

// Generated as internal constructor for term pulley_xstore8_offset32.
pub fn constructor_pulley_xstore8_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore8Offset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2247.
    return v5;
}

// Generated as internal constructor for term pulley_xstore16le_offset32.
pub fn constructor_pulley_xstore16le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore16LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2249.
    return v5;
}

// Generated as internal constructor for term pulley_xstore32le_offset32.
pub fn constructor_pulley_xstore32le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore32LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2251.
    return v5;
}

// Generated as internal constructor for term pulley_xstore64le_offset32.
pub fn constructor_pulley_xstore64le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore64LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2253.
    return v5;
}

// Generated as internal constructor for term pulley_xload8_u32_offset8.
pub fn constructor_pulley_xload8_u32_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8U32Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2255.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_s32_offset8.
pub fn constructor_pulley_xload8_s32_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8S32Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2262.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_u32_offset8.
pub fn constructor_pulley_xload16le_u32_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeU32Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2269.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_s32_offset8.
pub fn constructor_pulley_xload16le_s32_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeS32Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2276.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_offset8.
pub fn constructor_pulley_xload32le_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeOffset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2283.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_u64_offset8.
pub fn constructor_pulley_xload8_u64_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8U64Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2290.
    return v6;
}

// Generated as internal constructor for term pulley_xload8_s64_offset8.
pub fn constructor_pulley_xload8_s64_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad8S64Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2297.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_u64_offset8.
pub fn constructor_pulley_xload16le_u64_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeU64Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2304.
    return v6;
}

// Generated as internal constructor for term pulley_xload16le_s64_offset8.
pub fn constructor_pulley_xload16le_s64_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16LeS64Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2311.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_u64_offset8.
pub fn constructor_pulley_xload32le_u64_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeU64Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2318.
    return v6;
}

// Generated as internal constructor for term pulley_xload32le_s64_offset8.
pub fn constructor_pulley_xload32le_s64_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32LeS64Offset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2325.
    return v6;
}

// Generated as internal constructor for term pulley_xload64le_offset8.
pub fn constructor_pulley_xload64le_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad64LeOffset8 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2332.
    return v6;
}

// Generated as internal constructor for term pulley_xstore8_offset8.
pub fn constructor_pulley_xstore8_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore8Offset8 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2339.
    return v5;
}

// Generated as internal constructor for term pulley_xstore16le_offset8.
pub fn constructor_pulley_xstore16le_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore16LeOffset8 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2341.
    return v5;
}

// Generated as internal constructor for term pulley_xstore32le_offset8.
pub fn constructor_pulley_xstore32le_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore32LeOffset8 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2343.
    return v5;
}

// Generated as internal constructor for term pulley_xstore64le_offset8.
pub fn constructor_pulley_xstore64le_offset8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: u8,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore64LeOffset8 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2345.
    return v5;
}

// Generated as internal constructor for term pulley_xload8_u32_g32.
pub fn constructor_pulley_xload8_u32_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XLoad8U32G32 {
        dst: v3,
        base: arg0,
        addr: arg1,
        offset: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2347.
    return v7;
}

// Generated as internal constructor for term pulley_xload8_s32_g32.
pub fn constructor_pulley_xload8_s32_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XLoad8S32G32 {
        dst: v3,
        base: arg0,
        addr: arg1,
        offset: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2354.
    return v7;
}

// Generated as internal constructor for term pulley_xload16le_u32_g32.
pub fn constructor_pulley_xload16le_u32_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XLoad16LeU32G32 {
        dst: v3,
        base: arg0,
        addr: arg1,
        offset: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2361.
    return v7;
}

// Generated as internal constructor for term pulley_xload16le_s32_g32.
pub fn constructor_pulley_xload16le_s32_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XLoad16LeS32G32 {
        dst: v3,
        base: arg0,
        addr: arg1,
        offset: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2368.
    return v7;
}

// Generated as internal constructor for term pulley_xload32le_g32.
pub fn constructor_pulley_xload32le_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XLoad32LeG32 {
        dst: v3,
        base: arg0,
        addr: arg1,
        offset: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2375.
    return v7;
}

// Generated as internal constructor for term pulley_xload64le_g32.
pub fn constructor_pulley_xload64le_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XLoad64LeG32 {
        dst: v3,
        base: arg0,
        addr: arg1,
        offset: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2382.
    return v7;
}

// Generated as internal constructor for term pulley_xstore8_g32.
pub fn constructor_pulley_xstore8_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
    arg3: XReg,
) -> SideEffectNoResult {
    let v4 = RawInst::XStore8G32 {
        base: arg0,
        addr: arg1,
        offset: arg2,
        src: arg3,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = SideEffectNoResult::Inst {
        inst: v5.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2389.
    return v6;
}

// Generated as internal constructor for term pulley_xstore16le_g32.
pub fn constructor_pulley_xstore16le_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
    arg3: XReg,
) -> SideEffectNoResult {
    let v4 = RawInst::XStore16LeG32 {
        base: arg0,
        addr: arg1,
        offset: arg2,
        src: arg3,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = SideEffectNoResult::Inst {
        inst: v5.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2391.
    return v6;
}

// Generated as internal constructor for term pulley_xstore32le_g32.
pub fn constructor_pulley_xstore32le_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
    arg3: XReg,
) -> SideEffectNoResult {
    let v4 = RawInst::XStore32LeG32 {
        base: arg0,
        addr: arg1,
        offset: arg2,
        src: arg3,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = SideEffectNoResult::Inst {
        inst: v5.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2393.
    return v6;
}

// Generated as internal constructor for term pulley_xstore64le_g32.
pub fn constructor_pulley_xstore64le_g32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
    arg3: XReg,
) -> SideEffectNoResult {
    let v4 = RawInst::XStore64LeG32 {
        base: arg0,
        addr: arg1,
        offset: arg2,
        src: arg3,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = SideEffectNoResult::Inst {
        inst: v5.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2395.
    return v6;
}

// Generated as internal constructor for term pulley_push_frame.
pub fn constructor_pulley_push_frame<C: Context>(
    ctx: &mut C,
) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::PushFrame);
    let v2 = SideEffectNoResult::Inst {
        inst: v1.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2397.
    return v2;
}

// Generated as internal constructor for term pulley_pop_frame.
pub fn constructor_pulley_pop_frame<C: Context>(
    ctx: &mut C,
) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::PopFrame);
    let v2 = SideEffectNoResult::Inst {
        inst: v1.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2399.
    return v2;
}

// Generated as internal constructor for term pulley_push_frame_save.
pub fn constructor_pulley_push_frame_save<C: Context>(
    ctx: &mut C,
    arg0: u16,
    arg1: UpperXRegSet,
) -> SideEffectNoResult {
    let v2 = RawInst::PushFrameSave {
        amt: arg0,
        regs: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2401.
    return v4;
}

// Generated as internal constructor for term pulley_pop_frame_restore.
pub fn constructor_pulley_pop_frame_restore<C: Context>(
    ctx: &mut C,
    arg0: u16,
    arg1: UpperXRegSet,
) -> SideEffectNoResult {
    let v2 = RawInst::PopFrameRestore {
        amt: arg0,
        regs: arg1,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = SideEffectNoResult::Inst {
        inst: v3.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2403.
    return v4;
}

// Generated as internal constructor for term pulley_stack_alloc32.
pub fn constructor_pulley_stack_alloc32<C: Context>(
    ctx: &mut C,
    arg0: u32,
) -> SideEffectNoResult {
    let v1 = RawInst::StackAlloc32 {
        amt: arg0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst {
        inst: v2.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2405.
    return v3;
}

// Generated as internal constructor for term pulley_stack_free32.
pub fn constructor_pulley_stack_free32<C: Context>(
    ctx: &mut C,
    arg0: u32,
) -> SideEffectNoResult {
    let v1 = RawInst::StackFree32 {
        amt: arg0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst {
        inst: v2.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2407.
    return v3;
}

// Generated as internal constructor for term pulley_zext8.
pub fn constructor_pulley_zext8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2409.
    return v5;
}

// Generated as internal constructor for term pulley_zext16.
pub fn constructor_pulley_zext16<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2416.
    return v5;
}

// Generated as internal constructor for term pulley_zext32.
pub fn constructor_pulley_zext32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Zext32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2423.
    return v5;
}

// Generated as internal constructor for term pulley_sext8.
pub fn constructor_pulley_sext8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2430.
    return v5;
}

// Generated as internal constructor for term pulley_sext16.
pub fn constructor_pulley_sext16<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2437.
    return v5;
}

// Generated as internal constructor for term pulley_sext32.
pub fn constructor_pulley_sext32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Sext32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2444.
    return v5;
}

// Generated as internal constructor for term pulley_xabs32.
pub fn constructor_pulley_xabs32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XAbs32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2451.
    return v5;
}

// Generated as internal constructor for term pulley_xabs64.
pub fn constructor_pulley_xabs64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XAbs64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2458.
    return v5;
}

// Generated as internal constructor for term pulley_xdiv32_s.
pub fn constructor_pulley_xdiv32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2465.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv64_s.
pub fn constructor_pulley_xdiv64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2472.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv32_u.
pub fn constructor_pulley_xdiv32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2479.
    return v6;
}

// Generated as internal constructor for term pulley_xdiv64_u.
pub fn constructor_pulley_xdiv64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XDiv64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2486.
    return v6;
}

// Generated as internal constructor for term pulley_xrem32_s.
pub fn constructor_pulley_xrem32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2493.
    return v6;
}

// Generated as internal constructor for term pulley_xrem64_s.
pub fn constructor_pulley_xrem64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2500.
    return v6;
}

// Generated as internal constructor for term pulley_xrem32_u.
pub fn constructor_pulley_xrem32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2507.
    return v6;
}

// Generated as internal constructor for term pulley_xrem64_u.
pub fn constructor_pulley_xrem64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XRem64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2514.
    return v6;
}

// Generated as internal constructor for term pulley_xband32.
pub fn constructor_pulley_xband32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBand32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2521.
    return v6;
}

// Generated as internal constructor for term pulley_xband32_s8.
pub fn constructor_pulley_xband32_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xband32S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2528.
    return v6;
}

// Generated as internal constructor for term pulley_xband32_s32.
pub fn constructor_pulley_xband32_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xband32S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2535.
    return v6;
}

// Generated as internal constructor for term pulley_xband64.
pub fn constructor_pulley_xband64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBand64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2542.
    return v6;
}

// Generated as internal constructor for term pulley_xband64_s8.
pub fn constructor_pulley_xband64_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xband64S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2549.
    return v6;
}

// Generated as internal constructor for term pulley_xband64_s32.
pub fn constructor_pulley_xband64_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xband64S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2556.
    return v6;
}

// Generated as internal constructor for term pulley_xbor32.
pub fn constructor_pulley_xbor32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBor32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2563.
    return v6;
}

// Generated as internal constructor for term pulley_xbor32_s8.
pub fn constructor_pulley_xbor32_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbor32S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2570.
    return v6;
}

// Generated as internal constructor for term pulley_xbor32_s32.
pub fn constructor_pulley_xbor32_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbor32S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2577.
    return v6;
}

// Generated as internal constructor for term pulley_xbor64.
pub fn constructor_pulley_xbor64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBor64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2584.
    return v6;
}

// Generated as internal constructor for term pulley_xbor64_s8.
pub fn constructor_pulley_xbor64_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbor64S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2591.
    return v6;
}

// Generated as internal constructor for term pulley_xbor64_s32.
pub fn constructor_pulley_xbor64_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbor64S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2598.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor32.
pub fn constructor_pulley_xbxor32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBxor32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2605.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor32_s8.
pub fn constructor_pulley_xbxor32_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbxor32S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2612.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor32_s32.
pub fn constructor_pulley_xbxor32_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbxor32S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2619.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor64.
pub fn constructor_pulley_xbxor64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XBxor64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2626.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor64_s8.
pub fn constructor_pulley_xbxor64_s8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbxor64S8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2633.
    return v6;
}

// Generated as internal constructor for term pulley_xbxor64_s32.
pub fn constructor_pulley_xbxor64_s32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xbxor64S32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2640.
    return v6;
}

// Generated as internal constructor for term pulley_xbnot32.
pub fn constructor_pulley_xbnot32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XBnot32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2647.
    return v5;
}

// Generated as internal constructor for term pulley_xbnot64.
pub fn constructor_pulley_xbnot64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::XBnot64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2654.
    return v5;
}

// Generated as internal constructor for term pulley_xmin32_u.
pub fn constructor_pulley_xmin32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmin32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2661.
    return v6;
}

// Generated as internal constructor for term pulley_xmin32_s.
pub fn constructor_pulley_xmin32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmin32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2668.
    return v6;
}

// Generated as internal constructor for term pulley_xmax32_u.
pub fn constructor_pulley_xmax32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmax32U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2675.
    return v6;
}

// Generated as internal constructor for term pulley_xmax32_s.
pub fn constructor_pulley_xmax32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmax32S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2682.
    return v6;
}

// Generated as internal constructor for term pulley_xmin64_u.
pub fn constructor_pulley_xmin64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmin64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2689.
    return v6;
}

// Generated as internal constructor for term pulley_xmin64_s.
pub fn constructor_pulley_xmin64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmin64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2696.
    return v6;
}

// Generated as internal constructor for term pulley_xmax64_u.
pub fn constructor_pulley_xmax64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmax64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2703.
    return v6;
}

// Generated as internal constructor for term pulley_xmax64_s.
pub fn constructor_pulley_xmax64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Xmax64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2710.
    return v6;
}

// Generated as internal constructor for term pulley_xselect32.
pub fn constructor_pulley_xselect32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XSelect32 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2717.
    return v7;
}

// Generated as internal constructor for term pulley_xselect64.
pub fn constructor_pulley_xselect64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::XSelect64 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2724.
    return v7;
}

// Generated as internal constructor for term pulley_xbc32_bound_trap.
pub fn constructor_pulley_xbc32_bound_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
    arg3: &TrapCode,
) -> SideEffectNoResult {
    let v4 = RawInst::XBc32BoundTrap {
        addr: arg0,
        bound: arg1,
        size: arg2,
        code: arg3.clone(),
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = SideEffectNoResult::Inst {
        inst: v5.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2731.
    return v6;
}

// Generated as internal constructor for term pulley_xbc32_boundne_trap.
pub fn constructor_pulley_xbc32_boundne_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
    arg3: u8,
    arg4: &TrapCode,
) -> SideEffectNoResult {
    let v5 = RawInst::XBc32BoundNeTrap {
        addr: arg0,
        bound_ptr: arg1,
        bound_off: arg2,
        size: arg3,
        code: arg4.clone(),
    };
    let v6 = &constructor_raw_inst_to_inst(ctx, &v5);
    let v7 = SideEffectNoResult::Inst {
        inst: v6.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2733.
    return v7;
}

// Generated as internal constructor for term pulley_xbc32_strict_bound_trap.
pub fn constructor_pulley_xbc32_strict_bound_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: &TrapCode,
) -> SideEffectNoResult {
    let v3 = RawInst::XBc32StrictBoundTrap {
        addr: arg0,
        bound: arg1,
        code: arg2.clone(),
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2735.
    return v5;
}

// Generated as internal constructor for term pulley_xbc32_strict_boundne_trap.
pub fn constructor_pulley_xbc32_strict_boundne_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: u8,
    arg3: &TrapCode,
) -> SideEffectNoResult {
    let v4 = RawInst::XBc32StrictBoundNeTrap {
        addr: arg0,
        bound_ptr: arg1,
        bound_off: arg2,
        code: arg3.clone(),
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = SideEffectNoResult::Inst {
        inst: v5.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2737.
    return v6;
}

// Generated as internal constructor for term pulley_trap.
pub fn constructor_pulley_trap<C: Context>(
    ctx: &mut C,
    arg0: &TrapCode,
) -> SideEffectNoResult {
    let v1 = RawInst::Trap {
        code: arg0.clone(),
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = SideEffectNoResult::Inst {
        inst: v2.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2739.
    return v3;
}

// Generated as internal constructor for term pulley_nop.
pub fn constructor_pulley_nop<C: Context>(
    ctx: &mut C,
) -> SideEffectNoResult {
    let v1 = &constructor_raw_inst_to_inst(ctx, &RawInst::Nop);
    let v2 = SideEffectNoResult::Inst {
        inst: v1.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2741.
    return v2;
}

// Generated as internal constructor for term pulley_xmov_fp.
pub fn constructor_pulley_xmov_fp<C: Context>(
    ctx: &mut C,
) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::XmovFp {
        dst: v0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2743.
    return v4;
}

// Generated as internal constructor for term pulley_xmov_lr.
pub fn constructor_pulley_xmov_lr<C: Context>(
    ctx: &mut C,
) -> XReg {
    let v0 = constructor_temp_writable_xreg(ctx);
    let v1 = RawInst::XmovLr {
        dst: v0,
    };
    let v2 = &constructor_raw_inst_to_inst(ctx, &v1);
    let v3 = C::emit(ctx, v2);
    let v4 = C::writable_xreg_to_xreg(ctx, v0);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2750.
    return v4;
}

// Generated as internal constructor for term pulley_bswap32.
pub fn constructor_pulley_bswap32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Bswap32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2757.
    return v5;
}

// Generated as internal constructor for term pulley_bswap64.
pub fn constructor_pulley_bswap64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Bswap64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2764.
    return v5;
}

// Generated as internal constructor for term pulley_xadd32_uoverflow_trap.
pub fn constructor_pulley_xadd32_uoverflow_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: &TrapCode,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xadd32UoverflowTrap {
        dst: v3,
        src1: arg0,
        src2: arg1,
        code: arg2.clone(),
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2771.
    return v7;
}

// Generated as internal constructor for term pulley_xadd64_uoverflow_trap.
pub fn constructor_pulley_xadd64_uoverflow_trap<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: &TrapCode,
) -> XReg {
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xadd64UoverflowTrap {
        dst: v3,
        src1: arg0,
        src2: arg1,
        code: arg2.clone(),
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_xreg_to_xreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2778.
    return v7;
}

// Generated as internal constructor for term pulley_xmulhi64_s.
pub fn constructor_pulley_xmulhi64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMulHi64S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2785.
    return v6;
}

// Generated as internal constructor for term pulley_xmulhi64_u.
pub fn constructor_pulley_xmulhi64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XMulHi64U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2792.
    return v6;
}

// Generated as internal constructor for term pulley_xbmask32.
pub fn constructor_pulley_xbmask32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xbmask32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2799.
    return v5;
}

// Generated as internal constructor for term pulley_xbmask64.
pub fn constructor_pulley_xbmask64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Xbmask64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2806.
    return v5;
}

// Generated as internal constructor for term pulley_xload16be_u64_offset32.
pub fn constructor_pulley_xload16be_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16BeU64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2813.
    return v6;
}

// Generated as internal constructor for term pulley_xload16be_s64_offset32.
pub fn constructor_pulley_xload16be_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad16BeS64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2820.
    return v6;
}

// Generated as internal constructor for term pulley_xload32be_u64_offset32.
pub fn constructor_pulley_xload32be_u64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32BeU64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2827.
    return v6;
}

// Generated as internal constructor for term pulley_xload32be_s64_offset32.
pub fn constructor_pulley_xload32be_s64_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad32BeS64Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2834.
    return v6;
}

// Generated as internal constructor for term pulley_xload64be_offset32.
pub fn constructor_pulley_xload64be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XLoad64BeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2841.
    return v6;
}

// Generated as internal constructor for term pulley_xstore16be_offset32.
pub fn constructor_pulley_xstore16be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore16BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2848.
    return v5;
}

// Generated as internal constructor for term pulley_xstore32be_offset32.
pub fn constructor_pulley_xstore32be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore32BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2850.
    return v5;
}

// Generated as internal constructor for term pulley_xstore64be_offset32.
pub fn constructor_pulley_xstore64be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: XReg,
) -> SideEffectNoResult {
    let v3 = RawInst::XStore64BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2852.
    return v5;
}

// Generated as internal constructor for term pulley_fload32be_offset32.
pub fn constructor_pulley_fload32be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fload32BeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2854.
    return v6;
}

// Generated as internal constructor for term pulley_fload64be_offset32.
pub fn constructor_pulley_fload64be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fload64BeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2861.
    return v6;
}

// Generated as internal constructor for term pulley_fstore32be_offset32.
pub fn constructor_pulley_fstore32be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: FReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Fstore32BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2868.
    return v5;
}

// Generated as internal constructor for term pulley_fstore64be_offset32.
pub fn constructor_pulley_fstore64be_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: FReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Fstore64BeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2870.
    return v5;
}

// Generated as internal constructor for term pulley_fload32le_offset32.
pub fn constructor_pulley_fload32le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fload32LeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2872.
    return v6;
}

// Generated as internal constructor for term pulley_fload64le_offset32.
pub fn constructor_pulley_fload64le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fload64LeOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2879.
    return v6;
}

// Generated as internal constructor for term pulley_fstore32le_offset32.
pub fn constructor_pulley_fstore32le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: FReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Fstore32LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2886.
    return v5;
}

// Generated as internal constructor for term pulley_fstore64le_offset32.
pub fn constructor_pulley_fstore64le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: FReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Fstore64LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2888.
    return v5;
}

// Generated as internal constructor for term pulley_vload128le_offset32.
pub fn constructor_pulley_vload128le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VLoad128Offset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2890.
    return v6;
}

// Generated as internal constructor for term pulley_vstore128le_offset32.
pub fn constructor_pulley_vstore128le_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
    arg2: VReg,
) -> SideEffectNoResult {
    let v3 = RawInst::Vstore128LeOffset32 {
        ptr: arg0,
        offset: arg1,
        src: arg2,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = SideEffectNoResult::Inst {
        inst: v4.clone(),
    };
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2897.
    return v5;
}

// Generated as internal constructor for term pulley_fmov.
pub fn constructor_pulley_fmov<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fmov {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2899.
    return v5;
}

// Generated as internal constructor for term pulley_vmov.
pub fn constructor_pulley_vmov<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vmov {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2906.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_int_from_float_32.
pub fn constructor_pulley_bitcast_int_from_float_32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::BitcastIntFromFloat32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2913.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_int_from_float_64.
pub fn constructor_pulley_bitcast_int_from_float_64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::BitcastIntFromFloat64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2920.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_float_from_int_32.
pub fn constructor_pulley_bitcast_float_from_int_32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::BitcastFloatFromInt32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2927.
    return v5;
}

// Generated as internal constructor for term pulley_bitcast_float_from_int_64.
pub fn constructor_pulley_bitcast_float_from_int_64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::BitcastFloatFromInt64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2934.
    return v5;
}

// Generated as internal constructor for term pulley_fconst32.
pub fn constructor_pulley_fconst32<C: Context>(
    ctx: &mut C,
    arg0: u32,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::FConst32 {
        dst: v1,
        bits: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2941.
    return v5;
}

// Generated as internal constructor for term pulley_fconst64.
pub fn constructor_pulley_fconst64<C: Context>(
    ctx: &mut C,
    arg0: u64,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::FConst64 {
        dst: v1,
        bits: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2948.
    return v5;
}

// Generated as internal constructor for term pulley_feq32.
pub fn constructor_pulley_feq32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Feq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2955.
    return v6;
}

// Generated as internal constructor for term pulley_fneq32.
pub fn constructor_pulley_fneq32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Fneq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2962.
    return v6;
}

// Generated as internal constructor for term pulley_flt32.
pub fn constructor_pulley_flt32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flt32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2969.
    return v6;
}

// Generated as internal constructor for term pulley_flteq32.
pub fn constructor_pulley_flteq32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flteq32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2976.
    return v6;
}

// Generated as internal constructor for term pulley_feq64.
pub fn constructor_pulley_feq64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Feq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2983.
    return v6;
}

// Generated as internal constructor for term pulley_fneq64.
pub fn constructor_pulley_fneq64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Fneq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2990.
    return v6;
}

// Generated as internal constructor for term pulley_flt64.
pub fn constructor_pulley_flt64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flt64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 2997.
    return v6;
}

// Generated as internal constructor for term pulley_flteq64.
pub fn constructor_pulley_flteq64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::Flteq64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3004.
    return v6;
}

// Generated as internal constructor for term pulley_fselect32.
pub fn constructor_pulley_fselect32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: FReg,
    arg2: FReg,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = RawInst::FSelect32 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_freg_to_freg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3011.
    return v7;
}

// Generated as internal constructor for term pulley_fselect64.
pub fn constructor_pulley_fselect64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: FReg,
    arg2: FReg,
) -> FReg {
    let v3 = constructor_temp_writable_freg(ctx);
    let v4 = RawInst::FSelect64 {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_freg_to_freg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3018.
    return v7;
}

// Generated as internal constructor for term pulley_f32_from_f64.
pub fn constructor_pulley_f32_from_f64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromF64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3025.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_f32.
pub fn constructor_pulley_f64_from_f32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromF32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3032.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x32_s.
pub fn constructor_pulley_f32_from_x32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX32S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3039.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x32_u.
pub fn constructor_pulley_f32_from_x32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX32U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3046.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x64_s.
pub fn constructor_pulley_f32_from_x64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX64S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3053.
    return v5;
}

// Generated as internal constructor for term pulley_f32_from_x64_u.
pub fn constructor_pulley_f32_from_x64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F32FromX64U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3060.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x32_s.
pub fn constructor_pulley_f64_from_x32_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX32S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3067.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x32_u.
pub fn constructor_pulley_f64_from_x32_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX32U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3074.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x64_s.
pub fn constructor_pulley_f64_from_x64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX64S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3081.
    return v5;
}

// Generated as internal constructor for term pulley_f64_from_x64_u.
pub fn constructor_pulley_f64_from_x64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::F64FromX64U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3088.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_s.
pub fn constructor_pulley_x32_from_f32_s<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3095.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_u.
pub fn constructor_pulley_x32_from_f32_u<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3102.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_s.
pub fn constructor_pulley_x32_from_f64_s<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3109.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_u.
pub fn constructor_pulley_x32_from_f64_u<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3116.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_s.
pub fn constructor_pulley_x64_from_f32_s<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3123.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_u.
pub fn constructor_pulley_x64_from_f32_u<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3130.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_s.
pub fn constructor_pulley_x64_from_f64_s<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3137.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_u.
pub fn constructor_pulley_x64_from_f64_u<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3144.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_s_sat.
pub fn constructor_pulley_x32_from_f32_s_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32SSat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3151.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f32_u_sat.
pub fn constructor_pulley_x32_from_f32_u_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF32USat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3158.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_s_sat.
pub fn constructor_pulley_x32_from_f64_s_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64SSat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3165.
    return v5;
}

// Generated as internal constructor for term pulley_x32_from_f64_u_sat.
pub fn constructor_pulley_x32_from_f64_u_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X32FromF64USat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3172.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_s_sat.
pub fn constructor_pulley_x64_from_f32_s_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32SSat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3179.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f32_u_sat.
pub fn constructor_pulley_x64_from_f32_u_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF32USat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3186.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_s_sat.
pub fn constructor_pulley_x64_from_f64_s_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64SSat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3193.
    return v5;
}

// Generated as internal constructor for term pulley_x64_from_f64_u_sat.
pub fn constructor_pulley_x64_from_f64_u_sat<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::X64FromF64USat {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3200.
    return v5;
}

// Generated as internal constructor for term pulley_fcopysign32.
pub fn constructor_pulley_fcopysign32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FCopySign32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3207.
    return v6;
}

// Generated as internal constructor for term pulley_fcopysign64.
pub fn constructor_pulley_fcopysign64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FCopySign64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3214.
    return v6;
}

// Generated as internal constructor for term pulley_fadd32.
pub fn constructor_pulley_fadd32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fadd32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3221.
    return v6;
}

// Generated as internal constructor for term pulley_fsub32.
pub fn constructor_pulley_fsub32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fsub32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3228.
    return v6;
}

// Generated as internal constructor for term pulley_vsubf32x4.
pub fn constructor_pulley_vsubf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vsubf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3235.
    return v6;
}

// Generated as internal constructor for term pulley_fmul32.
pub fn constructor_pulley_fmul32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fmul32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3242.
    return v6;
}

// Generated as internal constructor for term pulley_vmulf32x4.
pub fn constructor_pulley_vmulf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmulf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3249.
    return v6;
}

// Generated as internal constructor for term pulley_fdiv32.
pub fn constructor_pulley_fdiv32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fdiv32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3256.
    return v6;
}

// Generated as internal constructor for term pulley_vdivf32x4.
pub fn constructor_pulley_vdivf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vdivf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3263.
    return v6;
}

// Generated as internal constructor for term pulley_fmaximum32.
pub fn constructor_pulley_fmaximum32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fmaximum32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3270.
    return v6;
}

// Generated as internal constructor for term pulley_fminimum32.
pub fn constructor_pulley_fminimum32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fminimum32 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3277.
    return v6;
}

// Generated as internal constructor for term pulley_ftrunc32.
pub fn constructor_pulley_ftrunc32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Ftrunc32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3284.
    return v5;
}

// Generated as internal constructor for term pulley_vtrunc32x4.
pub fn constructor_pulley_vtrunc32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vtrunc32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3291.
    return v5;
}

// Generated as internal constructor for term pulley_vtrunc64x2.
pub fn constructor_pulley_vtrunc64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vtrunc64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3298.
    return v5;
}

// Generated as internal constructor for term pulley_ffloor32.
pub fn constructor_pulley_ffloor32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Ffloor32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3305.
    return v5;
}

// Generated as internal constructor for term pulley_vfloor32x4.
pub fn constructor_pulley_vfloor32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vfloor32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3312.
    return v5;
}

// Generated as internal constructor for term pulley_vfloor64x2.
pub fn constructor_pulley_vfloor64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vfloor64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3319.
    return v5;
}

// Generated as internal constructor for term pulley_fceil32.
pub fn constructor_pulley_fceil32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fceil32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3326.
    return v5;
}

// Generated as internal constructor for term pulley_vceil32x4.
pub fn constructor_pulley_vceil32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vceil32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3333.
    return v5;
}

// Generated as internal constructor for term pulley_vceil64x2.
pub fn constructor_pulley_vceil64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vceil64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3340.
    return v5;
}

// Generated as internal constructor for term pulley_fnearest32.
pub fn constructor_pulley_fnearest32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fnearest32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3347.
    return v5;
}

// Generated as internal constructor for term pulley_fsqrt32.
pub fn constructor_pulley_fsqrt32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fsqrt32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3354.
    return v5;
}

// Generated as internal constructor for term pulley_vsqrt32x4.
pub fn constructor_pulley_vsqrt32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vsqrt32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3361.
    return v5;
}

// Generated as internal constructor for term pulley_vsqrt64x2.
pub fn constructor_pulley_vsqrt64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vsqrt64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3368.
    return v5;
}

// Generated as internal constructor for term pulley_fneg32.
pub fn constructor_pulley_fneg32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fneg32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3375.
    return v5;
}

// Generated as internal constructor for term pulley_vnegf32x4.
pub fn constructor_pulley_vnegf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vnegf32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3382.
    return v5;
}

// Generated as internal constructor for term pulley_fabs32.
pub fn constructor_pulley_fabs32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fabs32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3389.
    return v5;
}

// Generated as internal constructor for term pulley_fadd64.
pub fn constructor_pulley_fadd64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fadd64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3396.
    return v6;
}

// Generated as internal constructor for term pulley_fsub64.
pub fn constructor_pulley_fsub64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fsub64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3403.
    return v6;
}

// Generated as internal constructor for term pulley_fmul64.
pub fn constructor_pulley_fmul64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fmul64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3410.
    return v6;
}

// Generated as internal constructor for term pulley_fdiv64.
pub fn constructor_pulley_fdiv64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fdiv64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3417.
    return v6;
}

// Generated as internal constructor for term pulley_vdivf64x2.
pub fn constructor_pulley_vdivf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VDivF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3424.
    return v6;
}

// Generated as internal constructor for term pulley_fmaximum64.
pub fn constructor_pulley_fmaximum64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fmaximum64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3431.
    return v6;
}

// Generated as internal constructor for term pulley_fminimum64.
pub fn constructor_pulley_fminimum64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
    arg1: FReg,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::Fminimum64 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3438.
    return v6;
}

// Generated as internal constructor for term pulley_ftrunc64.
pub fn constructor_pulley_ftrunc64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Ftrunc64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3445.
    return v5;
}

// Generated as internal constructor for term pulley_ffloor64.
pub fn constructor_pulley_ffloor64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Ffloor64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3452.
    return v5;
}

// Generated as internal constructor for term pulley_fceil64.
pub fn constructor_pulley_fceil64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fceil64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3459.
    return v5;
}

// Generated as internal constructor for term pulley_fnearest64.
pub fn constructor_pulley_fnearest64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fnearest64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3466.
    return v5;
}

// Generated as internal constructor for term pulley_vnearest32x4.
pub fn constructor_pulley_vnearest32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vnearest32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3473.
    return v5;
}

// Generated as internal constructor for term pulley_vnearest64x2.
pub fn constructor_pulley_vnearest64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vnearest64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3480.
    return v5;
}

// Generated as internal constructor for term pulley_fsqrt64.
pub fn constructor_pulley_fsqrt64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fsqrt64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3487.
    return v5;
}

// Generated as internal constructor for term pulley_fneg64.
pub fn constructor_pulley_fneg64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fneg64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3494.
    return v5;
}

// Generated as internal constructor for term pulley_fabs64.
pub fn constructor_pulley_fabs64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> FReg {
    let v1 = constructor_temp_writable_freg(ctx);
    let v2 = RawInst::Fabs64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_freg_to_freg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3501.
    return v5;
}

// Generated as internal constructor for term pulley_vconst128.
pub fn constructor_pulley_vconst128<C: Context>(
    ctx: &mut C,
    arg0: u128,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vconst128 {
        dst: v1,
        imm: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3508.
    return v5;
}

// Generated as internal constructor for term pulley_vaddi8x16.
pub fn constructor_pulley_vaddi8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3515.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi16x8.
pub fn constructor_pulley_vaddi16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3522.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi32x4.
pub fn constructor_pulley_vaddi32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3529.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi64x2.
pub fn constructor_pulley_vaddi64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3536.
    return v6;
}

// Generated as internal constructor for term pulley_vaddf32x4.
pub fn constructor_pulley_vaddf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3543.
    return v6;
}

// Generated as internal constructor for term pulley_vaddf64x2.
pub fn constructor_pulley_vaddf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3550.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi8x16_sat.
pub fn constructor_pulley_vaddi8x16_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI8x16Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3557.
    return v6;
}

// Generated as internal constructor for term pulley_vaddu8x16_sat.
pub fn constructor_pulley_vaddu8x16_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddU8x16Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3564.
    return v6;
}

// Generated as internal constructor for term pulley_vaddi16x8_sat.
pub fn constructor_pulley_vaddi16x8_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddI16x8Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3571.
    return v6;
}

// Generated as internal constructor for term pulley_vaddu16x8_sat.
pub fn constructor_pulley_vaddu16x8_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddU16x8Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3578.
    return v6;
}

// Generated as internal constructor for term pulley_vaddpairwisei16x8_s.
pub fn constructor_pulley_vaddpairwisei16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddpairwiseI16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3585.
    return v6;
}

// Generated as internal constructor for term pulley_vaddpairwisei32x4_s.
pub fn constructor_pulley_vaddpairwisei32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VAddpairwiseI32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3592.
    return v6;
}

// Generated as internal constructor for term pulley_vshli8x16.
pub fn constructor_pulley_vshli8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShlI8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3599.
    return v6;
}

// Generated as internal constructor for term pulley_vshli16x8.
pub fn constructor_pulley_vshli16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShlI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3606.
    return v6;
}

// Generated as internal constructor for term pulley_vshli32x4.
pub fn constructor_pulley_vshli32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShlI32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3613.
    return v6;
}

// Generated as internal constructor for term pulley_vshli64x2.
pub fn constructor_pulley_vshli64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShlI64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3620.
    return v6;
}

// Generated as internal constructor for term pulley_vshri8x16_s.
pub fn constructor_pulley_vshri8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI8x16S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3627.
    return v6;
}

// Generated as internal constructor for term pulley_vshri16x8_s.
pub fn constructor_pulley_vshri16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3634.
    return v6;
}

// Generated as internal constructor for term pulley_vshri32x4_s.
pub fn constructor_pulley_vshri32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3641.
    return v6;
}

// Generated as internal constructor for term pulley_vshri64x2_s.
pub fn constructor_pulley_vshri64x2_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI64x2S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3648.
    return v6;
}

// Generated as internal constructor for term pulley_vshri8x16_u.
pub fn constructor_pulley_vshri8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI8x16U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3655.
    return v6;
}

// Generated as internal constructor for term pulley_vshri16x8_u.
pub fn constructor_pulley_vshri16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI16x8U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3662.
    return v6;
}

// Generated as internal constructor for term pulley_vshri32x4_u.
pub fn constructor_pulley_vshri32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI32x4U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3669.
    return v6;
}

// Generated as internal constructor for term pulley_vshri64x2_u.
pub fn constructor_pulley_vshri64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VShrI64x2U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3676.
    return v6;
}

// Generated as internal constructor for term pulley_vsplatx8.
pub fn constructor_pulley_vsplatx8<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatX8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3683.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatx16.
pub fn constructor_pulley_vsplatx16<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatX16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3690.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatx32.
pub fn constructor_pulley_vsplatx32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatX32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3697.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatx64.
pub fn constructor_pulley_vsplatx64<C: Context>(
    ctx: &mut C,
    arg0: XReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatX64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3704.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatf32.
pub fn constructor_pulley_vsplatf32<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatF32 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3711.
    return v5;
}

// Generated as internal constructor for term pulley_vsplatf64.
pub fn constructor_pulley_vsplatf64<C: Context>(
    ctx: &mut C,
    arg0: FReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VSplatF64 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3718.
    return v5;
}

// Generated as internal constructor for term pulley_vload8x8_s_offset32.
pub fn constructor_pulley_vload8x8_s_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VLoad8x8SOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3725.
    return v6;
}

// Generated as internal constructor for term pulley_vload8x8_u_offset32.
pub fn constructor_pulley_vload8x8_u_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VLoad8x8UOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3732.
    return v6;
}

// Generated as internal constructor for term pulley_vload16x4le_s_offset32.
pub fn constructor_pulley_vload16x4le_s_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VLoad16x4LeSOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3739.
    return v6;
}

// Generated as internal constructor for term pulley_vload16x4le_u_offset32.
pub fn constructor_pulley_vload16x4le_u_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VLoad16x4LeUOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3746.
    return v6;
}

// Generated as internal constructor for term pulley_vload32x2le_s_offset32.
pub fn constructor_pulley_vload32x2le_s_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VLoad32x2LeSOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3753.
    return v6;
}

// Generated as internal constructor for term pulley_vload32x2le_u_offset32.
pub fn constructor_pulley_vload32x2le_u_offset32<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: i32,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VLoad32x2LeUOffset32 {
        dst: v2,
        ptr: arg0,
        offset: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3760.
    return v6;
}

// Generated as internal constructor for term pulley_vband128.
pub fn constructor_pulley_vband128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VBand128 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3767.
    return v6;
}

// Generated as internal constructor for term pulley_vbor128.
pub fn constructor_pulley_vbor128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VBor128 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3774.
    return v6;
}

// Generated as internal constructor for term pulley_vbxor128.
pub fn constructor_pulley_vbxor128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VBxor128 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3781.
    return v6;
}

// Generated as internal constructor for term pulley_vbnot128.
pub fn constructor_pulley_vbnot128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VBnot128 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3788.
    return v5;
}

// Generated as internal constructor for term pulley_vbitselect128.
pub fn constructor_pulley_vbitselect128<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
    arg2: VReg,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VBitselect128 {
        dst: v3,
        c: arg0,
        x: arg1,
        y: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3795.
    return v7;
}

// Generated as internal constructor for term pulley_vbitmask8x16.
pub fn constructor_pulley_vbitmask8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vbitmask8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3802.
    return v5;
}

// Generated as internal constructor for term pulley_vbitmask16x8.
pub fn constructor_pulley_vbitmask16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vbitmask16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3809.
    return v5;
}

// Generated as internal constructor for term pulley_vbitmask32x4.
pub fn constructor_pulley_vbitmask32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vbitmask32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3816.
    return v5;
}

// Generated as internal constructor for term pulley_vbitmask64x2.
pub fn constructor_pulley_vbitmask64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vbitmask64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3823.
    return v5;
}

// Generated as internal constructor for term pulley_valltrue8x16.
pub fn constructor_pulley_valltrue8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Valltrue8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3830.
    return v5;
}

// Generated as internal constructor for term pulley_valltrue16x8.
pub fn constructor_pulley_valltrue16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Valltrue16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3837.
    return v5;
}

// Generated as internal constructor for term pulley_valltrue32x4.
pub fn constructor_pulley_valltrue32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Valltrue32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3844.
    return v5;
}

// Generated as internal constructor for term pulley_valltrue64x2.
pub fn constructor_pulley_valltrue64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Valltrue64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3851.
    return v5;
}

// Generated as internal constructor for term pulley_vanytrue8x16.
pub fn constructor_pulley_vanytrue8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vanytrue8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3858.
    return v5;
}

// Generated as internal constructor for term pulley_vanytrue16x8.
pub fn constructor_pulley_vanytrue16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vanytrue16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3865.
    return v5;
}

// Generated as internal constructor for term pulley_vanytrue32x4.
pub fn constructor_pulley_vanytrue32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vanytrue32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3872.
    return v5;
}

// Generated as internal constructor for term pulley_vanytrue64x2.
pub fn constructor_pulley_vanytrue64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> XReg {
    let v1 = constructor_temp_writable_xreg(ctx);
    let v2 = RawInst::Vanytrue64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_xreg_to_xreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3879.
    return v5;
}

// Generated as internal constructor for term pulley_vf32x4_from_i32x4_s.
pub fn constructor_pulley_vf32x4_from_i32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VF32x4FromI32x4S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3886.
    return v5;
}

// Generated as internal constructor for term pulley_vf32x4_from_i32x4_u.
pub fn constructor_pulley_vf32x4_from_i32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VF32x4FromI32x4U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3893.
    return v5;
}

// Generated as internal constructor for term pulley_vf64x2_from_i64x2_s.
pub fn constructor_pulley_vf64x2_from_i64x2_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VF64x2FromI64x2S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3900.
    return v5;
}

// Generated as internal constructor for term pulley_vf64x2_from_i64x2_u.
pub fn constructor_pulley_vf64x2_from_i64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VF64x2FromI64x2U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3907.
    return v5;
}

// Generated as internal constructor for term pulley_vi32x4_from_f32x4_s.
pub fn constructor_pulley_vi32x4_from_f32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VI32x4FromF32x4S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3914.
    return v5;
}

// Generated as internal constructor for term pulley_vi32x4_from_f32x4_u.
pub fn constructor_pulley_vi32x4_from_f32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VI32x4FromF32x4U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3921.
    return v5;
}

// Generated as internal constructor for term pulley_vi64x2_from_f64x2_s.
pub fn constructor_pulley_vi64x2_from_f64x2_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VI64x2FromF64x2S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3928.
    return v5;
}

// Generated as internal constructor for term pulley_vi64x2_from_f64x2_u.
pub fn constructor_pulley_vi64x2_from_f64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VI64x2FromF64x2U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3935.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow8x16_s.
pub fn constructor_pulley_vwidenlow8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow8x16S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3942.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow8x16_u.
pub fn constructor_pulley_vwidenlow8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow8x16U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3949.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow16x8_s.
pub fn constructor_pulley_vwidenlow16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow16x8S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3956.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow16x8_u.
pub fn constructor_pulley_vwidenlow16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow16x8U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3963.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow32x4_s.
pub fn constructor_pulley_vwidenlow32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow32x4S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3970.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenlow32x4_u.
pub fn constructor_pulley_vwidenlow32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenLow32x4U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3977.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh8x16_s.
pub fn constructor_pulley_vwidenhigh8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh8x16S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3984.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh8x16_u.
pub fn constructor_pulley_vwidenhigh8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh8x16U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3991.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh16x8_s.
pub fn constructor_pulley_vwidenhigh16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh16x8S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 3998.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh16x8_u.
pub fn constructor_pulley_vwidenhigh16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh16x8U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4005.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh32x4_s.
pub fn constructor_pulley_vwidenhigh32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh32x4S {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4012.
    return v5;
}

// Generated as internal constructor for term pulley_vwidenhigh32x4_u.
pub fn constructor_pulley_vwidenhigh32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VWidenHigh32x4U {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4019.
    return v5;
}

// Generated as internal constructor for term pulley_vnarrow16x8_s.
pub fn constructor_pulley_vnarrow16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4026.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow16x8_u.
pub fn constructor_pulley_vnarrow16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow16x8U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4033.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow32x4_s.
pub fn constructor_pulley_vnarrow32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4040.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow32x4_u.
pub fn constructor_pulley_vnarrow32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow32x4U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4047.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow64x2_s.
pub fn constructor_pulley_vnarrow64x2_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow64x2S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4054.
    return v6;
}

// Generated as internal constructor for term pulley_vnarrow64x2_u.
pub fn constructor_pulley_vnarrow64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vnarrow64x2U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4061.
    return v6;
}

// Generated as internal constructor for term pulley_vunarrow64x2_u.
pub fn constructor_pulley_vunarrow64x2_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vunarrow64x2U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4068.
    return v6;
}

// Generated as internal constructor for term pulley_vfpromotelow.
pub fn constructor_pulley_vfpromotelow<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VFpromoteLow {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4075.
    return v5;
}

// Generated as internal constructor for term pulley_vfdemote.
pub fn constructor_pulley_vfdemote<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VFdemote {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4082.
    return v5;
}

// Generated as internal constructor for term pulley_vsubi8x16.
pub fn constructor_pulley_vsubi8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4089.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi16x8.
pub fn constructor_pulley_vsubi16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4096.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi32x4.
pub fn constructor_pulley_vsubi32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4103.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi64x2.
pub fn constructor_pulley_vsubi64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4110.
    return v6;
}

// Generated as internal constructor for term pulley_vsubf64x2.
pub fn constructor_pulley_vsubf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4117.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi8x16_sat.
pub fn constructor_pulley_vsubi8x16_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI8x16Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4124.
    return v6;
}

// Generated as internal constructor for term pulley_vsubu8x16_sat.
pub fn constructor_pulley_vsubu8x16_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubU8x16Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4131.
    return v6;
}

// Generated as internal constructor for term pulley_vsubi16x8_sat.
pub fn constructor_pulley_vsubi16x8_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubI16x8Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4138.
    return v6;
}

// Generated as internal constructor for term pulley_vsubu16x8_sat.
pub fn constructor_pulley_vsubu16x8_sat<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VSubU16x8Sat {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4145.
    return v6;
}

// Generated as internal constructor for term pulley_vmuli8x16.
pub fn constructor_pulley_vmuli8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulI8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4152.
    return v6;
}

// Generated as internal constructor for term pulley_vmuli16x8.
pub fn constructor_pulley_vmuli16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4159.
    return v6;
}

// Generated as internal constructor for term pulley_vmuli32x4.
pub fn constructor_pulley_vmuli32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulI32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4166.
    return v6;
}

// Generated as internal constructor for term pulley_vmuli64x2.
pub fn constructor_pulley_vmuli64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulI64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4173.
    return v6;
}

// Generated as internal constructor for term pulley_vmulf64x2.
pub fn constructor_pulley_vmulf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VMulF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4180.
    return v6;
}

// Generated as internal constructor for term pulley_vqmulrsi16x8.
pub fn constructor_pulley_vqmulrsi16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VQmulrsI16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4187.
    return v6;
}

// Generated as internal constructor for term pulley_vpopcnt8x16.
pub fn constructor_pulley_vpopcnt8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VPopcnt8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4194.
    return v5;
}

// Generated as internal constructor for term pulley_xextractv8x16.
pub fn constructor_pulley_xextractv8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XExtractV8x16 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4201.
    return v6;
}

// Generated as internal constructor for term pulley_xextractv16x8.
pub fn constructor_pulley_xextractv16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XExtractV16x8 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4208.
    return v6;
}

// Generated as internal constructor for term pulley_xextractv32x4.
pub fn constructor_pulley_xextractv32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XExtractV32x4 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4215.
    return v6;
}

// Generated as internal constructor for term pulley_xextractv64x2.
pub fn constructor_pulley_xextractv64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> XReg {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = RawInst::XExtractV64x2 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_xreg_to_xreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4222.
    return v6;
}

// Generated as internal constructor for term pulley_fextractv32x4.
pub fn constructor_pulley_fextractv32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FExtractV32x4 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4229.
    return v6;
}

// Generated as internal constructor for term pulley_fextractv64x2.
pub fn constructor_pulley_fextractv64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: u8,
) -> FReg {
    let v2 = constructor_temp_writable_freg(ctx);
    let v3 = RawInst::FExtractV64x2 {
        dst: v2,
        src: arg0,
        lane: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_freg_to_freg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4236.
    return v6;
}

// Generated as internal constructor for term pulley_vinsertx8.
pub fn constructor_pulley_vinsertx8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertX8 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4243.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertx16.
pub fn constructor_pulley_vinsertx16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertX16 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4250.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertx32.
pub fn constructor_pulley_vinsertx32<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertX32 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4257.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertx64.
pub fn constructor_pulley_vinsertx64<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: XReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertX64 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4264.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertf32.
pub fn constructor_pulley_vinsertf32<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: FReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertF32 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4271.
    return v7;
}

// Generated as internal constructor for term pulley_vinsertf64.
pub fn constructor_pulley_vinsertf64<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: FReg,
    arg2: u8,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VInsertF64 {
        dst: v3,
        src1: arg0,
        src2: arg1,
        lane: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4278.
    return v7;
}

// Generated as internal constructor for term pulley_veq8x16.
pub fn constructor_pulley_veq8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Veq8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4285.
    return v6;
}

// Generated as internal constructor for term pulley_vneq8x16.
pub fn constructor_pulley_vneq8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vneq8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4292.
    return v6;
}

// Generated as internal constructor for term pulley_vslt8x16.
pub fn constructor_pulley_vslt8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslt8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4299.
    return v6;
}

// Generated as internal constructor for term pulley_vslteq8x16.
pub fn constructor_pulley_vslteq8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslteq8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4306.
    return v6;
}

// Generated as internal constructor for term pulley_vult8x16.
pub fn constructor_pulley_vult8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vult8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4313.
    return v6;
}

// Generated as internal constructor for term pulley_vulteq8x16.
pub fn constructor_pulley_vulteq8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vulteq8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4320.
    return v6;
}

// Generated as internal constructor for term pulley_veq16x8.
pub fn constructor_pulley_veq16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Veq16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4327.
    return v6;
}

// Generated as internal constructor for term pulley_vneq16x8.
pub fn constructor_pulley_vneq16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vneq16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4334.
    return v6;
}

// Generated as internal constructor for term pulley_vslt16x8.
pub fn constructor_pulley_vslt16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslt16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4341.
    return v6;
}

// Generated as internal constructor for term pulley_vslteq16x8.
pub fn constructor_pulley_vslteq16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslteq16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4348.
    return v6;
}

// Generated as internal constructor for term pulley_vult16x8.
pub fn constructor_pulley_vult16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vult16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4355.
    return v6;
}

// Generated as internal constructor for term pulley_vulteq16x8.
pub fn constructor_pulley_vulteq16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vulteq16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4362.
    return v6;
}

// Generated as internal constructor for term pulley_veq32x4.
pub fn constructor_pulley_veq32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Veq32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4369.
    return v6;
}

// Generated as internal constructor for term pulley_vneq32x4.
pub fn constructor_pulley_vneq32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vneq32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4376.
    return v6;
}

// Generated as internal constructor for term pulley_vslt32x4.
pub fn constructor_pulley_vslt32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslt32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4383.
    return v6;
}

// Generated as internal constructor for term pulley_vslteq32x4.
pub fn constructor_pulley_vslteq32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslteq32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4390.
    return v6;
}

// Generated as internal constructor for term pulley_vult32x4.
pub fn constructor_pulley_vult32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vult32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4397.
    return v6;
}

// Generated as internal constructor for term pulley_vulteq32x4.
pub fn constructor_pulley_vulteq32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vulteq32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4404.
    return v6;
}

// Generated as internal constructor for term pulley_veq64x2.
pub fn constructor_pulley_veq64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Veq64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4411.
    return v6;
}

// Generated as internal constructor for term pulley_vneq64x2.
pub fn constructor_pulley_vneq64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vneq64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4418.
    return v6;
}

// Generated as internal constructor for term pulley_vslt64x2.
pub fn constructor_pulley_vslt64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslt64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4425.
    return v6;
}

// Generated as internal constructor for term pulley_vslteq64x2.
pub fn constructor_pulley_vslteq64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vslteq64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4432.
    return v6;
}

// Generated as internal constructor for term pulley_vult64x2.
pub fn constructor_pulley_vult64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vult64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4439.
    return v6;
}

// Generated as internal constructor for term pulley_vulteq64x2.
pub fn constructor_pulley_vulteq64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vulteq64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4446.
    return v6;
}

// Generated as internal constructor for term pulley_vneg8x16.
pub fn constructor_pulley_vneg8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vneg8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4453.
    return v5;
}

// Generated as internal constructor for term pulley_vneg16x8.
pub fn constructor_pulley_vneg16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vneg16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4460.
    return v5;
}

// Generated as internal constructor for term pulley_vneg32x4.
pub fn constructor_pulley_vneg32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vneg32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4467.
    return v5;
}

// Generated as internal constructor for term pulley_vneg64x2.
pub fn constructor_pulley_vneg64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vneg64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4474.
    return v5;
}

// Generated as internal constructor for term pulley_vnegf64x2.
pub fn constructor_pulley_vnegf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::VnegF64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4481.
    return v5;
}

// Generated as internal constructor for term pulley_vmin8x16_s.
pub fn constructor_pulley_vmin8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin8x16S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4488.
    return v6;
}

// Generated as internal constructor for term pulley_vmin8x16_u.
pub fn constructor_pulley_vmin8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin8x16U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4495.
    return v6;
}

// Generated as internal constructor for term pulley_vmin16x8_s.
pub fn constructor_pulley_vmin16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4502.
    return v6;
}

// Generated as internal constructor for term pulley_vmin16x8_u.
pub fn constructor_pulley_vmin16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin16x8U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4509.
    return v6;
}

// Generated as internal constructor for term pulley_vmax8x16_s.
pub fn constructor_pulley_vmax8x16_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax8x16S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4516.
    return v6;
}

// Generated as internal constructor for term pulley_vmax8x16_u.
pub fn constructor_pulley_vmax8x16_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax8x16U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4523.
    return v6;
}

// Generated as internal constructor for term pulley_vmax16x8_s.
pub fn constructor_pulley_vmax16x8_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax16x8S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4530.
    return v6;
}

// Generated as internal constructor for term pulley_vmax16x8_u.
pub fn constructor_pulley_vmax16x8_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax16x8U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4537.
    return v6;
}

// Generated as internal constructor for term pulley_vmin32x4_s.
pub fn constructor_pulley_vmin32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4544.
    return v6;
}

// Generated as internal constructor for term pulley_vmin32x4_u.
pub fn constructor_pulley_vmin32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmin32x4U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4551.
    return v6;
}

// Generated as internal constructor for term pulley_vmax32x4_s.
pub fn constructor_pulley_vmax32x4_s<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax32x4S {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4558.
    return v6;
}

// Generated as internal constructor for term pulley_vmax32x4_u.
pub fn constructor_pulley_vmax32x4_u<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmax32x4U {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4565.
    return v6;
}

// Generated as internal constructor for term pulley_vabs8x16.
pub fn constructor_pulley_vabs8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabs8x16 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4572.
    return v5;
}

// Generated as internal constructor for term pulley_vabs16x8.
pub fn constructor_pulley_vabs16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabs16x8 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4579.
    return v5;
}

// Generated as internal constructor for term pulley_vabs32x4.
pub fn constructor_pulley_vabs32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabs32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4586.
    return v5;
}

// Generated as internal constructor for term pulley_vabs64x2.
pub fn constructor_pulley_vabs64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabs64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4593.
    return v5;
}

// Generated as internal constructor for term pulley_vabsf32x4.
pub fn constructor_pulley_vabsf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabsf32x4 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4600.
    return v5;
}

// Generated as internal constructor for term pulley_vabsf64x2.
pub fn constructor_pulley_vabsf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
) -> VReg {
    let v1 = constructor_temp_writable_vreg(ctx);
    let v2 = RawInst::Vabsf64x2 {
        dst: v1,
        src: arg0,
    };
    let v3 = &constructor_raw_inst_to_inst(ctx, &v2);
    let v4 = C::emit(ctx, v3);
    let v5 = C::writable_vreg_to_vreg(ctx, v1);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4607.
    return v5;
}

// Generated as internal constructor for term pulley_vmaximumf32x4.
pub fn constructor_pulley_vmaximumf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmaximumf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4614.
    return v6;
}

// Generated as internal constructor for term pulley_vmaximumf64x2.
pub fn constructor_pulley_vmaximumf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vmaximumf64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4621.
    return v6;
}

// Generated as internal constructor for term pulley_vminimumf32x4.
pub fn constructor_pulley_vminimumf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vminimumf32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4628.
    return v6;
}

// Generated as internal constructor for term pulley_vminimumf64x2.
pub fn constructor_pulley_vminimumf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vminimumf64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4635.
    return v6;
}

// Generated as internal constructor for term pulley_vshuffle.
pub fn constructor_pulley_vshuffle<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
    arg2: u128,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::VShuffle {
        dst: v3,
        src1: arg0,
        src2: arg1,
        mask: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4642.
    return v7;
}

// Generated as internal constructor for term pulley_vswizzlei8x16.
pub fn constructor_pulley_vswizzlei8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vswizzlei8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4649.
    return v6;
}

// Generated as internal constructor for term pulley_vavground8x16.
pub fn constructor_pulley_vavground8x16<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vavground8x16 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4656.
    return v6;
}

// Generated as internal constructor for term pulley_vavground16x8.
pub fn constructor_pulley_vavground16x8<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::Vavground16x8 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4663.
    return v6;
}

// Generated as internal constructor for term pulley_veqf32x4.
pub fn constructor_pulley_veqf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VeqF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4670.
    return v6;
}

// Generated as internal constructor for term pulley_vneqf32x4.
pub fn constructor_pulley_vneqf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VneqF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4677.
    return v6;
}

// Generated as internal constructor for term pulley_vltf32x4.
pub fn constructor_pulley_vltf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VltF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4684.
    return v6;
}

// Generated as internal constructor for term pulley_vlteqf32x4.
pub fn constructor_pulley_vlteqf32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VlteqF32x4 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4691.
    return v6;
}

// Generated as internal constructor for term pulley_veqf64x2.
pub fn constructor_pulley_veqf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VeqF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4698.
    return v6;
}

// Generated as internal constructor for term pulley_vneqf64x2.
pub fn constructor_pulley_vneqf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VneqF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4705.
    return v6;
}

// Generated as internal constructor for term pulley_vltf64x2.
pub fn constructor_pulley_vltf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VltF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4712.
    return v6;
}

// Generated as internal constructor for term pulley_vlteqf64x2.
pub fn constructor_pulley_vlteqf64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
) -> VReg {
    let v2 = constructor_temp_writable_vreg(ctx);
    let v3 = RawInst::VlteqF64x2 {
        dst: v2,
        src1: arg0,
        src2: arg1,
    };
    let v4 = &constructor_raw_inst_to_inst(ctx, &v3);
    let v5 = C::emit(ctx, v4);
    let v6 = C::writable_vreg_to_vreg(ctx, v2);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4719.
    return v6;
}

// Generated as internal constructor for term pulley_vfma32x4.
pub fn constructor_pulley_vfma32x4<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
    arg2: VReg,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::Vfma32x4 {
        dst: v3,
        a: arg0,
        b: arg1,
        c: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4726.
    return v7;
}

// Generated as internal constructor for term pulley_vfma64x2.
pub fn constructor_pulley_vfma64x2<C: Context>(
    ctx: &mut C,
    arg0: VReg,
    arg1: VReg,
    arg2: VReg,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::Vfma64x2 {
        dst: v3,
        a: arg0,
        b: arg1,
        c: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4733.
    return v7;
}

// Generated as internal constructor for term pulley_vselect.
pub fn constructor_pulley_vselect<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: VReg,
    arg2: VReg,
) -> VReg {
    let v3 = constructor_temp_writable_vreg(ctx);
    let v4 = RawInst::Vselect {
        dst: v3,
        cond: arg0,
        if_nonzero: arg1,
        if_zero: arg2,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = C::writable_vreg_to_vreg(ctx, v3);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4740.
    return v7;
}

// Generated as internal constructor for term pulley_xadd128.
pub fn constructor_pulley_xadd128<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
    arg3: XReg,
) -> ValueRegs {
    let v4 = constructor_temp_writable_xreg(ctx);
    let v5 = constructor_temp_writable_xreg(ctx);
    let v6 = RawInst::Xadd128 {
        dst_lo: v4,
        dst_hi: v5,
        lhs_lo: arg0,
        lhs_hi: arg1,
        rhs_lo: arg2,
        rhs_hi: arg3,
    };
    let v7 = &constructor_raw_inst_to_inst(ctx, &v6);
    let v8 = C::emit(ctx, v7);
    let v9 = constructor_writable_xreg_to_reg(ctx, v4);
    let v10 = constructor_writable_xreg_to_reg(ctx, v5);
    let v11 = C::value_regs(ctx, v9, v10);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4747.
    return v11;
}

// Generated as internal constructor for term pulley_xsub128.
pub fn constructor_pulley_xsub128<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
    arg2: XReg,
    arg3: XReg,
) -> ValueRegs {
    let v4 = constructor_temp_writable_xreg(ctx);
    let v5 = constructor_temp_writable_xreg(ctx);
    let v6 = RawInst::Xsub128 {
        dst_lo: v4,
        dst_hi: v5,
        lhs_lo: arg0,
        lhs_hi: arg1,
        rhs_lo: arg2,
        rhs_hi: arg3,
    };
    let v7 = &constructor_raw_inst_to_inst(ctx, &v6);
    let v8 = C::emit(ctx, v7);
    let v9 = constructor_writable_xreg_to_reg(ctx, v4);
    let v10 = constructor_writable_xreg_to_reg(ctx, v5);
    let v11 = C::value_regs(ctx, v9, v10);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4755.
    return v11;
}

// Generated as internal constructor for term pulley_xwidemul64_s.
pub fn constructor_pulley_xwidemul64_s<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> ValueRegs {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xwidemul64S {
        dst_lo: v2,
        dst_hi: v3,
        lhs: arg0,
        rhs: arg1,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = constructor_writable_xreg_to_reg(ctx, v2);
    let v8 = constructor_writable_xreg_to_reg(ctx, v3);
    let v9 = C::value_regs(ctx, v7, v8);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4763.
    return v9;
}

// Generated as internal constructor for term pulley_xwidemul64_u.
pub fn constructor_pulley_xwidemul64_u<C: Context>(
    ctx: &mut C,
    arg0: XReg,
    arg1: XReg,
) -> ValueRegs {
    let v2 = constructor_temp_writable_xreg(ctx);
    let v3 = constructor_temp_writable_xreg(ctx);
    let v4 = RawInst::Xwidemul64U {
        dst_lo: v2,
        dst_hi: v3,
        lhs: arg0,
        rhs: arg1,
    };
    let v5 = &constructor_raw_inst_to_inst(ctx, &v4);
    let v6 = C::emit(ctx, v5);
    let v7 = constructor_writable_xreg_to_reg(ctx, v2);
    let v8 = constructor_writable_xreg_to_reg(ctx, v3);
    let v9 = C::value_regs(ctx, v7, v8);
    // Rule at /home/alireza/Devel/github/cmpt400/host/target/debug/build/cranelift-codegen-f4a64b79c95d1c65/out/pulley_gen.isle line 4771.
    return v9;
}
